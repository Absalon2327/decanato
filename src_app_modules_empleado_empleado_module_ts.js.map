{"version":3,"file":"src_app_modules_empleado_empleado_module_ts.js","mappings":"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","sources":["./src/app/modules/empleado/components/modal/modal.component.ts","./src/app/modules/empleado/components/modal/modal.component.html","./src/app/modules/empleado/empleado-routing.module.ts","./src/app/modules/empleado/empleado.module.ts","./src/app/modules/empleado/pages/listar/listar.component.ts","./src/app/modules/empleado/pages/listar/listar.component.html","./src/app/modules/empleado/pages/tabla/tabla.component.ts","./src/app/modules/empleado/pages/tabla/tabla.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { EmpleadoService } from '../../service/empleado.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\nimport { ICargo, IDepto, IEmpleado } from '../../interface/empleado.interface';\r\n\r\nimport { EMAIL_VALIDATE_UES, NAME_VALIDATE } from 'src/app/constants/constants';\r\nimport { MensajesService } from 'src/app/shared/global/mensajes.service';\r\nimport { UsuarioService } from 'src/app/account/auth/services/usuario.service';\r\nimport { IEmail } from 'src/app/account/auth/interfaces/usuario';\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.scss']\r\n})\r\nexport class ModalComponent implements OnInit {\r\n\r\n  @Input() empleadOd!: IEmpleado;\r\n  @Input() motoristaOd!: boolean;\r\n  @Input() leyenda!: string;\r\n  @Input() titulo!: string;\r\n  @Input() queryString: string;\r\n\r\n  public imgTemp: string | ArrayBuffer = null;\r\n\r\n  private isEmail: string = EMAIL_VALIDATE_UES;\r\n  private isText: string = NAME_VALIDATE;\r\n\r\n  cargos: ICargo[] = [];\r\n  departamentos: IDepto[] = [];\r\n\r\n  formBuilder!: FormGroup;\r\n\r\n  esMotorista: boolean = false;\r\n  private file!: File;\r\n\r\n  imagen: string = 'no hay';\r\n\r\n  hovered: boolean = false; // Inicializamos hovered como falso\r\n\r\n  alerts = [\r\n    {\r\n      id: 1,\r\n      type: \"info\",\r\n      message:\r\n        \" Por favor, asegúrese de completar todos los campos obligatorios (*) y de cumplir con los formatos correspondientes. Además, le recomendamos prestar atención a los mensajes de alerta. En cuanto a la foto del empleado no es obligatoria; Indicar que el empleado sera jefe del área o departamento correspondiente solamente cuando sea acorde a sus responsabilidades laborales. \",\r\n      show: false,\r\n    },\r\n  ];\r\n\r\n\r\n  constructor(\r\n    private empleadoService: EmpleadoService,\r\n    private modalService: NgbModal,\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private mensajesService: MensajesService,\r\n    private usuarioService: UsuarioService\r\n  ) {\r\n    this.formBuilder = this.Iniciarformulario();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.leyenda == \"Editar\") {\r\n      this.formBuilder = this.Iniciarformulario();\r\n    }\r\n\r\n    this.empleadoService.getCargos();\r\n    this.empleadoService.getDepartamentos();\r\n  }\r\n\r\n  private Iniciarformulario(): FormGroup {\r\n    return this.fb.group({\r\n      codigoEmpleado: [''],\r\n      dui: ['', [Validators.required]],\r\n      nombre: ['', [Validators.required, Validators.pattern(this.isText)]],\r\n      apellido: ['', [Validators.required, Validators.pattern(this.isText)]],\r\n      telefono: ['', [Validators.required, Validators.pattern(/^[267]\\d{7}$/)]],\r\n      licencia: ['', this.motoristaOd ? [Validators.required] : []],\r\n      tipolicencia: ['', this.motoristaOd ? [Validators.required] : []],\r\n      fechalicencia: ['', this.motoristaOd ? [Validators.required] : []],\r\n      /*   jefe: [false, [Validators.required]], */\r\n      estado: [8],\r\n      nombrefoto: [''],\r\n      urlfoto: [''],\r\n      correo: ['', [Validators.required, Validators.pattern(this.isEmail)]],\r\n      cargo: ['', [Validators.required]],\r\n      departamento: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  ////////////// >>>>> metodos primarios <<<<<   /////////////\r\n\r\n  //// metodo para obtener los cargos /////\r\n  get Cargos() {\r\n    const cargos: ICargo[] = [];\r\n\r\n    if (this.leyenda == \"Editar\") {\r\n      cargos.push(this.empleadOd.cargo)\r\n    }\r\n\r\n    this.empleadoService.listCargos.forEach((x) => {\r\n      if (this.leyenda == \"Editar\") {\r\n        if (x.estado == 8 && x.id != this.empleadOd.cargo.id) {\r\n          cargos.push(x);\r\n        }\r\n      } else {\r\n        if (x.estado == 8) {\r\n          cargos.push(x);\r\n        }\r\n      }\r\n    });\r\n    return cargos;\r\n  }\r\n\r\n  //// metodo para obtener los departamentos /////\r\n  get Departamentos() {\r\n    const departamentos: IDepto[] = [];\r\n\r\n    if (this.leyenda == \"Editar\") {\r\n      departamentos.push(this.empleadOd.departamento)\r\n    }\r\n\r\n    this.empleadoService.listDepartamentos.forEach((x) => {\r\n      if (this.leyenda == \"Editar\") {\r\n        if (x.estado == 8 && x.codigoDepto != this.empleadOd.departamento.codigoDepto) {\r\n          departamentos.push(x);\r\n        }\r\n      } else {\r\n        if (x.estado == 8) {\r\n          departamentos.push(x);\r\n        }\r\n      }\r\n    });\r\n    return departamentos;\r\n  }\r\n\r\n  ////// metodo para tomar la desicion si es registro o actualizacion /////\r\n  guardar() {\r\n    if (this.formBuilder.valid) {\r\n      this.cargando();\r\n      if (this.empleadOd != null) {\r\n        this.editando();\r\n      } else {\r\n        this.registrando();\r\n      }\r\n    } else {\r\n      Swal.fire({\r\n        position: 'center',\r\n        title: 'Faltan datos en el formuario',\r\n        html: 'Complete todos los campos requeridos (<span style=\"color: red;\">*</span>)',\r\n        icon: 'warning',\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  /////////// metodo para enviar EMAIL///////////\r\n\r\n  Email(correo: string, nombre: string) {\r\n    const email: IEmail = {\r\n      asunto: '!Bienvenid@¡',\r\n      titulo: 'Registro de empleado',\r\n      email: correo,\r\n      receptor: \"Estimad@ : \" + nombre,\r\n      mensaje: 'Se han registrado sus datos en el sistema de Misiones de la Universidad de El Salvador - Facultad Multidisciplinaria Paracentral. Para iniciar sesión por primera vez, utilice como nombre de usuario el habitual que son los parámetros de su correo electrónico antes de \"@\", y su clave por defecto será su número de DUI, la cual deberá cambiar una vez haya iniciado sesión.',\r\n      centro: 'Gracias por su atención a este importante mensaje.',\r\n      codigo: '',\r\n      abajo: 'Pagina principal : ' + 'http://localhost:4200/',\r\n    }\r\n\r\n    this.usuarioService.SendEmail(email).subscribe(\r\n      (resp) => {\r\n        Swal.close();\r\n        const Toast = Swal.mixin({\r\n          toast: true,\r\n          position: 'top-end',\r\n          showConfirmButton: false,\r\n          timer: 2000,\r\n          //timerProgressBar: true,\r\n          didOpen: (toast) => {\r\n            toast.addEventListener('mouseenter', Swal.stopTimer)\r\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n          }\r\n        });\r\n\r\n        Toast.fire({\r\n          icon: 'success',\r\n          text: 'Almacenamiento exitoso'\r\n        }).then(() => {\r\n          this.formBuilder.reset();\r\n          this.recargar();\r\n          this.modalService.dismissAll();\r\n        });\r\n      },\r\n      (err) => {\r\n        Swal.close();\r\n        const Toast = Swal.mixin({\r\n          toast: true,\r\n          position: 'top-end',\r\n          showConfirmButton: false,\r\n          timer: 2000,\r\n          //timerProgressBar: true,\r\n          didOpen: (toast) => {\r\n            toast.addEventListener('mouseenter', Swal.stopTimer)\r\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n          }\r\n        });\r\n\r\n        Toast.fire({\r\n          icon: 'success',\r\n          text: 'Almacenamiento exitoso'\r\n        }).then(() => {\r\n          this.formBuilder.reset();\r\n          this.recargar();\r\n          this.modalService.dismissAll();\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  registrando() {\r\n\r\n    const empleado = this.formBuilder.value;\r\n    if (this.imagen === 'no hay') {\r\n      this.empleadoService.postEmpleado(empleado).subscribe((resp: any) => {\r\n        if (resp) {\r\n          this.Email(this.formBuilder.get('correo').value, this.formBuilder.get('nombre').value + ' ' + this.formBuilder.get('apellido').value);\r\n        }\r\n      }, (err: any) => {\r\n        this.mensajesService.mensajesSweet(\r\n          \"error\",\r\n          \"Ups... Algo salió mal\",\r\n          err.error.message\r\n        )\r\n      });\r\n    } else {\r\n      this.empleadoService.postEmpleadoImagen(empleado, this.file).subscribe((resp: any) => {\r\n        if (resp) {\r\n          this.Email(this.formBuilder.get('correo').value, this.formBuilder.get('nombre').value + ' ' + this.formBuilder.get('apellido').value);\r\n        }\r\n      }, (err: string) => {\r\n        this.mensajesService.mensajesSweet(\r\n          \"error\",\r\n          \"Ups... Algo salió mal\",\r\n          err\r\n        )\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  ///////// metodo para editar empleado con imagen o sin imagen ///////\r\n  editando() {\r\n    const empleado = this.formBuilder.value;\r\n    empleado.nombrefoto = this.empleadOd.nombrefoto;\r\n    empleado.urlfoto = this.empleadOd.urlfoto;\r\n    if (this.imagen === 'no hay') {\r\n      this.empleadoService.putEmpleado(empleado).subscribe((resp: any) => {\r\n        if (resp) {\r\n          Swal.close();\r\n          const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 2000,\r\n            //timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n              toast.addEventListener('mouseenter', Swal.stopTimer)\r\n              toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n          });\r\n\r\n          Toast.fire({\r\n            icon: 'success',\r\n            text: 'Modificación exitosa'\r\n          }).then(() => {\r\n            this.formBuilder.reset();\r\n            this.recargar();\r\n            this.modalService.dismissAll();\r\n          });\r\n        }\r\n      }, (err: any) => {\r\n        this.mensajesService.mensajesSweet(\r\n          \"error\",\r\n          \"Ups... Algo salió mal\",\r\n          err.error.message\r\n        )\r\n      });\r\n    } else {\r\n      this.empleadoService.putEmpleadoImagen(empleado, this.file).subscribe((resp: any) => {\r\n        if (resp) {\r\n          Swal.close();\r\n          const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 2000,\r\n            //timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n              toast.addEventListener('mouseenter', Swal.stopTimer)\r\n              toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n          });\r\n\r\n          Toast.fire({\r\n            icon: 'success',\r\n            text: 'Modificación exitosa'\r\n          }).then(() => {\r\n            this.formBuilder.reset();\r\n            this.recargar();\r\n            this.modalService.dismissAll();\r\n          });\r\n\r\n          this.formBuilder.reset();\r\n          this.recargar();\r\n          this.modalService.dismissAll();\r\n        }\r\n      }, (err: any) => {\r\n        this.mensajesService.mensajesSweet(\r\n          \"error\",\r\n          \"Ups... Algo salió mal\",\r\n          err.error.message\r\n        )\r\n      });\r\n    }\r\n  }\r\n\r\n  ////////////// >>>>> metodos secundarios de validacion y acciones  <<<<<   /////////////\r\n\r\n  //// Metodo para validacion de fecha /////\r\n  validarfecha() {\r\n    const currentDate = new Date();\r\n    const fechaString = this.formBuilder.get('fechalicencia').value; // Debe ser un string en formato 'yyyy-MM-dd'\r\n    const fecha = new Date(fechaString);\r\n\r\n    if (!isNaN(fecha.getTime())) {\r\n      if (fecha <= currentDate) {\r\n        const Toast = Swal.mixin({\r\n          toast: true,\r\n          position: 'top-end',\r\n          showConfirmButton: false,\r\n          timer: 3000,\r\n          didOpen: (toast) => {\r\n            toast.addEventListener('mouseenter', Swal.stopTimer)\r\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n          }\r\n        });\r\n\r\n        Toast.fire({\r\n          icon: 'warning',\r\n          text: 'Fecha invalida'\r\n        });\r\n\r\n        this.formBuilder.get('fechalicencia').setValue(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  /////// metodo para modificacion de validaciones y estados cambiando el formulario a comveniencia si el empleado es motorista o no //////\r\n\r\n  SelectCargo(newValue: string) {\r\n    // Lógica para determinar si el cargo seleccionado es \"Motorista\"\r\n\r\n    //obtenemos el objeto que tenga como nombreCargo Motorista\r\n    const motoristaOb = this.Cargos.find(cargo => cargo.nombreCargo === \"MOTORISTA\");\r\n    //Comparamos que el ID sea igual al seleccionado y cambiamos la variable para mostrar los demas campos\r\n    this.esMotorista = (this.formBuilder.get('cargo').value === motoristaOb.id);\r\n    this.motoristaOd = this.esMotorista;\r\n\r\n    // Retrasamos la actualización del teléfono en 3 segundos\r\n    setTimeout(() => {\r\n      this.formBuilder.get('telefono').setValue(newValue); // Función para cambiar teléfono\r\n    }, 50); // 1000 milisegundos = 1 segundos\r\n\r\n    // Asignar o quitar validadores según el valor de esmotorista\r\n    const licenciaControl = this.formBuilder.get('licencia');\r\n    const tipolicenciaControl = this.formBuilder.get('tipolicencia');\r\n    const fechalicenciaControl = this.formBuilder.get('fechalicencia');\r\n\r\n    if (this.esMotorista) {\r\n      licenciaControl.setValidators([Validators.required]);\r\n      tipolicenciaControl.setValidators([Validators.required]);\r\n      fechalicenciaControl.setValidators([Validators.required]);\r\n    } else {\r\n      licenciaControl.clearValidators();\r\n      tipolicenciaControl.clearValidators();\r\n      fechalicenciaControl.clearValidators();\r\n\r\n      licenciaControl.setValue('');\r\n      tipolicenciaControl.setValue('');\r\n      fechalicenciaControl.setValue('');\r\n      fechalicenciaControl.reset();\r\n\r\n      if (this.empleadOd) {\r\n        this.empleadOd.licencia = \"\";\r\n        this.empleadOd.tipolicencia = \"\";\r\n        this.empleadOd.fechalicencia = new Date();\r\n      }\r\n\r\n    }\r\n    licenciaControl.updateValueAndValidity();\r\n    tipolicenciaControl.updateValueAndValidity();\r\n    fechalicenciaControl.updateValueAndValidity();\r\n\r\n  }\r\n\r\n  //// metodo par abrir la modal ////\r\n  openModal(content: any) {\r\n    //hacer que la modal no se cierre al precionar fuera de ella -> backdrop: 'static', keyboard: false\r\n    this.modalService.open(content, { size: 'xl', centered: true, backdrop: 'static', keyboard: false });\r\n  }\r\n\r\n\r\n  ///// Metodo para recargar la pagina /////\r\n  recargar() {\r\n    let currentUrl = this.router.url;\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    this.router.onSameUrlNavigation = \"reload\";\r\n    this.router.navigate([currentUrl]);\r\n  }\r\n\r\n  //// metodo para validar el campo si es valido o no ////\r\n  esCampoValido(campo: string) {\r\n    const validarCampo = this.formBuilder.get(campo);\r\n    return !validarCampo?.valid && validarCampo?.touched\r\n      ? 'is-invalid' : validarCampo?.touched ? 'is-valid' : '';\r\n  }\r\n\r\n  ///// metodo que extrae la informacion de la imagen /////\r\n  onFileSelected(event: Event) {\r\n    const target = event.target as HTMLInputElement;\r\n    this.file = (target.files as FileList)[0];\r\n    this.imagen = 'seleccioanda';\r\n    this.preVisualizarImagen(event);\r\n  }\r\n\r\n  ///// metodo para previsualizar la imagen /////\r\n  preVisualizarImagen(event: any) {\r\n    this.file = event.target.files[0];\r\n    //cambia a imagen previa\r\n    if (!this.file) {\r\n      this.imgTemp = null;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    reader.onloadend = () => {\r\n      this.imgTemp = reader.result;\r\n    };\r\n  }\r\n\r\n  //////   metodos para la ayuda ///////\r\n  CambiarAlert(alert) {\r\n    alert.show = !alert.show;\r\n  }\r\n\r\n  restaurarAlerts() {\r\n    this.alerts.forEach((alert) => {\r\n      alert.show = true;\r\n    });\r\n  }\r\n\r\n  siMuestraAlertas() {\r\n    return this.alerts.every((alert) => alert.show);\r\n  }\r\n\r\n  cargando() {\r\n    Swal.fire({\r\n      title: 'Espere un momento!',\r\n      html: 'Se está procesando la petición...',\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<span *ngIf=\"leyenda !== titulo\">\r\n    <div class=\"text-sm-end\">\r\n        <button type=\"button\" class=\"btn btn-primary btn-rounded\" (click)=\"openModal(content)\">\r\n            {{ titulo }}\r\n        </button>\r\n    </div>\r\n</span>\r\n\r\n\r\n<span *ngIf=\"leyenda === titulo && titulo == 'Detalle'\">\r\n    <button type=\"button\" class=\"btn btn-primary btn-sm btn-rounded boton-cuadrado mx-1\" (click)=\"openModal(content)\"\r\n        ngbTooltip=\"Detalle de empleado\">\r\n        <i class=\"mdi mdi-18px mdi-eye-outline\"></i></button>\r\n</span>\r\n\r\n<span *ngIf=\"leyenda === titulo && titulo == 'Editar'\">\r\n    <button type=\"button\" class=\"btn btn-info btn-sm btn-rounded boton-cuadrado mx-1\" (click)=\"openModal(content)\"\r\n        ngbTooltip=\"Modificar empleado\">\r\n        <i class=\"mdi mdi-18px mdi-book-edit-outline\"></i></button>\r\n</span>\r\n\r\n\r\n<!-- Modal -->\r\n\r\n<div class=\"modal modal-fullscreen-xl-down fade\" id=\"modalEmpleado\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\"\r\n    aria-hidden=\"true\">\r\n    <ng-template #content role=\"document\" let-modal>\r\n        <div class=\"modal-header\">\r\n            <h5 class=\"modal-title mt-0\">{{leyenda}} Empleado</h5>\r\n\r\n            <div class=\"btn-alerta\" *ngIf=\"alerts\">\r\n                <i class=\"mdi mdi-18px mdi-lightbulb-on-outline custom-cursor\" ngbTooltip=\"Mostrar Ayuda\"\r\n                    *ngIf=\"!siMuestraAlertas()\" (click)=\"restaurarAlerts()\"></i>\r\n            </div>\r\n\r\n            <button type=\"button\" class=\"btn-close\" aria-hidden=\"true\" (click)=\"modal.dismiss('Cross click')\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <div *ngFor=\"let alert of alerts\">\r\n                <div class=\"alert alert-{{ alert.type }} alert-dismissible fade show\" role=\"alert\" *ngIf=\"alert.show\">\r\n                    <strong>Importante!</strong>\r\n                    <div class=\"text-justify\">{{ alert.message }}</div>\r\n                    <button type=\"button\" class=\"btn-close\" (click)=\"CambiarAlert(alert)\" aria-label=\"Close\"></button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <form (ngSubmit)=\"guardar()\" [formGroup]=\"formBuilder\" enctype=\"multipart/form-data\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n\r\n                        <!-- inicio de foto Empleado -->\r\n                        <div class=\"form-group row\">\r\n\r\n                            <div class=\"col-md-7\" *ngIf=\"titulo !== 'Detalle'\">\r\n                                <div class=\"form-group row m-4\">\r\n                                    <label class=\"control-label\" for=\"file\">Foto: </label>\r\n                                    <input id=\"file\" type=\"file\" multiple class=\"form-control\"\r\n                                        (change)=\"onFileSelected($event)\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <span class=\"align-text-top col-md-4\" style=\"display: flex; left: 10%;\"\r\n                                *ngIf=\"titulo === 'Detalle' && !imgTemp\"><strong>Foto de Perfil :</strong></span>\r\n\r\n                            <div class=\"col-md-4\">\r\n                                <img class=\"rounded-circle custom-border\"\r\n                                    *ngIf=\"leyenda === titulo && !imgTemp && empleadOd.urlfoto != ''\"\r\n                                    src=\"{{empleadOd.nombrefoto}}\" alt=\"\">\r\n\r\n                                <img class=\"rounded-circle custom-border\"\r\n                                    *ngIf=\"leyenda === titulo && !imgTemp && empleadOd.urlfoto == ''\"\r\n                                    src=\"../../../../../assets/images/Default-Avatar.png\" alt=\"\">\r\n\r\n                                <img class=\"rounded-circle custom-border\" *ngIf=\"imgTemp\" [src]=\"imgTemp\" alt=\"\">\r\n                            </div>\r\n\r\n                        </div>\r\n                        <!-- fin de foto Empleado -->\r\n\r\n                        <!-- Inicio de codigoEmpleado, campo por defecto de la DTO -->\r\n                        <div *ngIf=\"empleadOd?.codigoEmpleado\">\r\n                            <input id=\"codigoEmpleado\" name=\"codigoEmpleado\" type=\"hidden\" readonly=\"true\"\r\n                                class=\"form-control\" formControlName=\"codigoEmpleado\"\r\n                                [ngModel]=\"empleadOd !=null ? empleadOd.codigoEmpleado : ''\" />\r\n                        </div>\r\n                        <!-- Inicio de codigoEmpleado, campo por defecto de la DTO -->\r\n\r\n                        <!-- Inicio de codigoEmpleado, campo por defecto de la DTO -->\r\n                        <div *ngIf=\"empleadOd?.estado\">\r\n                            <input id=\"estado\" name=\"estado\" type=\"hidden\" readonly=\"true\" class=\"form-control\"\r\n                                formControlName=\"estado\" [ngModel]=\"empleadOd !=null ? empleadOd.estado : 8\" />\r\n                        </div>\r\n                        <!-- Inicio de codigoEmpleado, campo por defecto de la DTO -->\r\n\r\n                        <!-- inicio de dui Empleado -->\r\n                        <div class=\"form-group row m-4\">\r\n                            <label class=\"control-label\">DUI:\r\n                                <span class=\"text-danger\">*</span>\r\n                            </label>\r\n                            <input type=\"text\" formControlName=\"dui\" class=\"form-control\" id=\"dui\" name=\"dui\"\r\n                                placeholder=\"Ingrese DUI - ej: 00000000-0\"\r\n                                [readonly]=\"empleadOd != null && titulo == 'Detalle'\"\r\n                                [class]=\"titulo != 'Detalle' ? esCampoValido('dui') : ''\"\r\n                                [ngModel]=\"empleadOd !=null ? empleadOd.dui : ''\" mask=\"00000000-0\" />\r\n                            <div class=\"invalid-feedback\">\r\n                                <span *ngIf=\"formBuilder.get('dui')?.errors?.['required']\">\r\n                                    Ingrese un DUI</span>\r\n                                <span\r\n                                    *ngIf=\"!formBuilder.get('dui').valid && !formBuilder.get('dui')?.errors?.['required']\">\r\n                                    Debe cumplir con el formato correcto</span>\r\n                            </div>\r\n                        </div>\r\n                        <!-- fin de licencia Empleado -->\r\n\r\n                        <!-- inicio de nombre Empleado -->\r\n                        <div class=\"form-group row m-4\">\r\n                            <label class=\"control-label\">Nombre:\r\n                                <span class=\"text-danger\">*</span>\r\n                            </label>\r\n                            <input type=\"text\" formControlName=\"nombre\" class=\"form-control\" id=\"nombre\" name=\"nombre\"\r\n                                placeholder=\"Ingrese nombre\" [readonly]=\"empleadOd != null && titulo == 'Detalle'\"\r\n                                [class]=\"titulo != 'Detalle' ? esCampoValido('nombre') : ''\"\r\n                                [ngModel]=\"empleadOd!=null ? empleadOd.nombre : ''\" />\r\n                            <div class=\"invalid-feedback\">\r\n                                <span *ngIf=\"formBuilder.get('nombre')?.errors?.['required']\">\r\n                                    Ingrese el nombre</span>\r\n                                <span *ngIf=\"formBuilder.get('nombre')?.errors?.['pattern']\">\r\n                                    No debe contener numeros</span>\r\n                            </div>\r\n                        </div>\r\n                        <!-- fin de nombre Empleado -->\r\n\r\n                        <!-- inicio de apellido Empleado -->\r\n                        <div class=\"form-group row m-4\">\r\n                            <label class=\"control-label\">Apellido:\r\n                                <span class=\"text-danger\">*</span>\r\n                            </label>\r\n                            <input type=\"text\" formControlName=\"apellido\" class=\"form-control\" id=\"apellido\"\r\n                                name=\"apellido\" placeholder=\"Ingrese apellido\"\r\n                                [readonly]=\"empleadOd != null && titulo == 'Detalle'\"\r\n                                [class]=\"titulo != 'Detalle' ? esCampoValido('apellido') : ''\"\r\n                                [ngModel]=\"empleadOd!=null ? empleadOd.apellido : ''\" />\r\n                            <div class=\"invalid-feedback\">\r\n                                <span *ngIf=\"formBuilder.get('apellido')?.errors?.['required']\">\r\n                                    Ingrese el apellido</span>\r\n                                <span *ngIf=\"formBuilder.get('apellido')?.errors?.['pattern']\">\r\n                                    No debe contener numeros</span>\r\n                            </div>\r\n                        </div>\r\n                        <!-- fin de apellido Empleado -->\r\n\r\n                        <!-- inicio de telefono Empleado -->\r\n                        <div class=\"form-group row m-4\" *ngIf=\"esMotorista || motoristaOd\">\r\n                            <label class=\"control-label\">Teléfono:\r\n                                <span class=\"text-danger\">*</span>\r\n                            </label>\r\n                            <input type=\"text\" formControlName=\"telefono\" class=\"form-control\" id=\"telefono\"\r\n                                name=\"telefono\" placeholder=\"Ingrese teléfono - ej: 0000-0000\"\r\n                                [readonly]=\"empleadOd != null && titulo == 'Detalle'\" mask=\"0000-0000\"\r\n                                [class]=\"titulo != 'Detalle' ? esCampoValido('telefono') : ''\"\r\n                                [ngModel]=\"empleadOd!=null ? empleadOd.telefono : ''\" />\r\n                            <div class=\"invalid-feedback\">\r\n                                <span *ngIf=\"formBuilder.get('telefono')?.errors?.['required']\">\r\n                                    Ingrese un teléfono</span>\r\n                                <span *ngIf=\"formBuilder.get('telefono').hasError('pattern')\">\r\n                                    Debe comenzar con 2, 6 o 7 y tener 8 dígitos en total.\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <!-- fin de telefono Empleado -->\r\n\r\n                    </div>\r\n\r\n\r\n                    <div class=\"col-md-6\">\r\n\r\n                        <!-- inicio de telefono Empleado -->\r\n                        <div class=\"form-group row m-4\" *ngIf=\"!esMotorista && !motoristaOd\">\r\n                            <label class=\"control-label\">Teléfono:\r\n                                <span class=\"text-danger\">*</span>\r\n                            </label>\r\n                            <input type=\"text\" formControlName=\"telefono\" class=\"form-control\" id=\"telefono\"\r\n                                name=\"telefono\" placeholder=\"Ingrese teléfono - ej: 0000-0000\"\r\n                                [readonly]=\"empleadOd != null && titulo == 'Detalle'\" mask=\"0000-0000\"\r\n                                [class]=\"titulo != 'Detalle' ? esCampoValido('telefono') : ''\"\r\n                                [ngModel]=\"empleadOd!=null ? empleadOd.telefono : ''\" />\r\n                            <div class=\"invalid-feedback\">\r\n                                <span *ngIf=\"formBuilder.get('telefono')?.errors?.['required']\">\r\n                                    Ingrese un teléfono</span>\r\n                                <span *ngIf=\"formBuilder.get('telefono').hasError('pattern')\">\r\n                                    Debe comenzar con 2, 6 o 7 y tener 8 dígitos en total.\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <!-- fin de telefono Empleado -->\r\n\r\n                        <!-- inicio de correo Empleado -->\r\n                        <div class=\"form-group row m-4\">\r\n                            <label class=\"control-label\">Correo:\r\n                                <span class=\"text-danger\">*</span>\r\n                            </label>\r\n                            <input type=\"text\" formControlName=\"correo\" class=\"form-control\" id=\"correo\" name=\"correo\"\r\n                                placeholder=\"Ingrese correo\" [readonly]=\"empleadOd != null && titulo == 'Detalle'\"\r\n                                [class]=\"titulo != 'Detalle' ? esCampoValido('correo') : ''\"\r\n                                [ngModel]=\"empleadOd!=null ? empleadOd.correo : ''\" />\r\n                            <div class=\"invalid-feedback\">\r\n                                <span *ngIf=\"formBuilder.get('correo')?.errors?.['required']\">\r\n                                    Ingrese un correo</span>\r\n                                <span *ngIf=\"formBuilder.get('correo')?.errors?.['pattern']\">\r\n                                    Email no válido, debe ser '@ues.edu.sv'</span>\r\n                            </div>\r\n                        </div>\r\n                        <!-- fin de correo Empleado -->\r\n\r\n                        <!-- inicio de cargo Empleado -->\r\n                        <div class=\"form-group row m-4\">\r\n                            <label class=\"control-label\">Cargo:\r\n                                <span class=\"text-danger\">*</span>\r\n                            </label>\r\n                            <select class=\"form-control form-select\"\r\n                                (change)=\"SelectCargo(formBuilder.get('telefono').value)\" id=\"selectCargo\"\r\n                                name=\"selectCargo\" formControlName=\"cargo\"\r\n                                [ngClass]=\"{'select-readonly': empleadOd != null && titulo == 'Detalle'}\"\r\n                                [ngModel]=\"empleadOd != null ? empleadOd.cargo.id : ''\"\r\n                                [class]=\"titulo != 'Detalle' ? esCampoValido('cargo') : ''\">\r\n                                <option value=\"\">Seleccione Cargo</option>\r\n                                <option *ngFor=\"let x of Cargos\" [ngValue]=\"x.id\">\r\n                                    {{x.nombreCargo}}\r\n                                </option>\r\n                            </select>\r\n                            <div class=\"invalid-feedback\">\r\n                                <span *ngIf=\"formBuilder.get('cargo')?.errors?.['required']\">\r\n                                    Seleccione un cargo</span>\r\n                            </div>\r\n                        </div>\r\n                        <!-- fin de cargo Empleado -->\r\n\r\n                        <!-- inicio de licencia Empleado -->\r\n                        <div class=\"form-group row m-4\" *ngIf=\"esMotorista || motoristaOd\">\r\n                            <label class=\"control-label\">Licencia:\r\n                                <span class=\"text-danger\">*</span>\r\n                            </label>\r\n                            <input type=\"text\" formControlName=\"licencia\" class=\"form-control\" id=\"licencia\"\r\n                                name=\"licencia\" placeholder=\"Ingrese licencia\"\r\n                                [readonly]=\"empleadOd != null && titulo == 'Detalle'\" mask=\"00000000-0\"\r\n                                [class]=\"titulo != 'Detalle' ? esCampoValido('licencia') : ''\"\r\n                                [ngModel]=\"empleadOd!=null ? empleadOd.licencia : (esMotorista ? formBuilder.get('dui').value : '')\" />\r\n                            <div class=\"invalid-feedback\">\r\n                                <span *ngIf=\"formBuilder.get('licencia')?.errors?.['required']\">\r\n                                    Ingrese un número de licencia</span>\r\n                            </div>\r\n                        </div>\r\n                        <!-- fin de licencia Empleado -->\r\n\r\n                        <!-- inicio de tipo_licencia & fecha de expiracion Empleado -->\r\n                        <div class=\"form-group row m-3\" *ngIf=\"esMotorista || motoristaOd\">\r\n\r\n                            <div class=\"col-md-6\">\r\n                                <label class=\"control-label\">Tipo de Licencia:\r\n                                    <span class=\"text-danger\">*</span>\r\n                                </label>\r\n                                <select class=\"form-control form-select\" id=\"selecttipo_licencia\"\r\n                                    name=\"selecttipo_licencia\" formControlName=\"tipolicencia\"\r\n                                    [ngClass]=\"{'select-readonly': empleadOd != null && titulo == 'Detalle'}\"\r\n                                    [class]=\"titulo != 'Detalle' ? esCampoValido('tipolicencia') :''\"\r\n                                    [ngModel]=\"empleadOd != null ? empleadOd.tipolicencia : ''\">\r\n                                    <option value=\"\">Seleccione Tipo</option>\r\n                                    <option value=\"Liviana\">Liviana</option>\r\n                                    <option value=\"Pesada\">Pesada</option>\r\n                                    <option value=\"Motocicleta\">Motocicleta</option>\r\n                                </select>\r\n                                <div class=\"invalid-feedback\">\r\n                                    <span *ngIf=\"formBuilder.get('tipo_licencia')?.errors?.['required']\">\r\n                                        Seleccione un tipo de licencia</span>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div class=\"col-md-6\">\r\n                                <label class=\"control-label\">Fecha de expiración:\r\n                                    <span class=\"text-danger\">*</span>\r\n                                </label>\r\n                                <input type=\"date\" formControlName=\"fechalicencia\" class=\"form-control\"\r\n                                    id=\"fechalicencia\" name=\"fechalicencia\" placeholder=\"Ingrese fechalicencia\"\r\n                                    [readonly]=\"empleadOd != null && titulo == 'Detalle'\" (change)=\"validarfecha()\"\r\n                                    [class]=\"titulo != 'Detalle' ? esCampoValido('fechalicencia') : ''\"\r\n                                    [ngModel]=\"empleadOd!=null ? empleadOd.fechalicencia : ''\" />\r\n                                <div class=\"invalid-feedback\">\r\n                                    <span *ngIf=\"formBuilder.get('fechalicencia')?.errors?.['required']\">\r\n                                        Seleccione una fecha de expiración</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <!-- fin de tipo_licencia & fecha de expiracion Empleado -->\r\n\r\n\r\n                        <!-- inicio de departamento & es jefe Empleado -->\r\n                        <!--   <div class=\"form-group row m-3 align-items-center\"> -->\r\n                        <div class=\"form-group row m-4\">\r\n                            <!-- <div class=\"col-md-6\"> -->\r\n                            <label class=\"control-label\">Departamento:\r\n                                <span class=\"text-danger\">*</span>\r\n                            </label>\r\n                            <select class=\"form-control form-select\" id=\"selectDepartamento\" name=\"selectDepartamento\"\r\n                                formControlName=\"departamento\"\r\n                                [ngClass]=\"{'select-readonly': empleadOd != null && titulo == 'Detalle'}\"\r\n                                [class]=\"titulo != 'Detalle' ? esCampoValido('departamento'): ''\"\r\n                                [ngModel]=\"empleadOd != null ? empleadOd.departamento.codigoDepto : ''\">\r\n                                <option value=\"\">Seleccione Departamento</option>\r\n                                <option *ngFor=\"let x of Departamentos\" [ngValue]=\"x.codigoDepto\">\r\n                                    {{x.nombre}}\r\n                                </option>\r\n                            </select>\r\n                            <div class=\"invalid-feedback\">\r\n                                <span *ngIf=\"formBuilder.get('departamento')?.errors?.['required']\">\r\n                                    Seleccione un departamento</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!--  <div class=\"col-md-6 form-check form-switch form-switch-md\" style=\"top: 15px;\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"jefe\" id=\"jefe\"\r\n                                    name=\"jefe\"\r\n                                    [ngClass]=\"{'select-readonly-check': empleadOd != null && titulo == 'Detalle'}\"\r\n                                    [ngModel]=\"empleadOd!=null ? empleadOd.jefe : false\">\r\n                                <label class=\"form-check-label\" for=\"jefe\">Es Jefe de\r\n                                    Departamento</label>\r\n                            </div> -->\r\n                        <!--   </div> -->\r\n\r\n                        <!-- fin de departamento & es jefe Empleado -->\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"d-flex justify-content-end mt-4\">\r\n                    <button type=\"submit\" class=\"btn btn-primary w-sm me-2\" id=\"btn-save\" name=\"btn-save\"\r\n                        *ngIf=\"titulo !== 'Detalle'\">\r\n                        {{ titulo !== 'Editar' ? 'Guardar' : 'Modificar' }}\r\n                    </button>\r\n\r\n                    <button type=\"button\" class=\"btn btn-dark w-sm\" id=\"btn-cancel\" name=\"btn-cancel\" aria-hidden=\"true\"\r\n                        (click)=\"modal.dismiss('Cross click')\">\r\n                        {{ titulo !== 'Detalle' ? 'Cancelar' : 'Cerrar' }}\r\n                    </button>\r\n\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n<!-- Modal -->\r\n\r\n<script>\r\n    // Deshabilitar el cursor en el campo de entrada\r\n    const readonlyInput = document.getElementById(\"readonlyInput\");\r\n\r\n    readonlyInput.addEventListener(\"mousedown\", (event) => {\r\n        event.preventDefault();\r\n    });\r\n\r\n    readonlyInput.addEventListener(\"keydown\", (event) => {\r\n        event.preventDefault();\r\n    });\r\n</script>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ListarComponent } from './pages/listar/listar.component';\r\nimport { HasRoleGuard } from 'src/app/core/guards/has-role.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: \"listar\", \r\n  component: ListarComponent,\r\n  canActivate: [HasRoleGuard],\r\n  canLoad: [HasRoleGuard],\r\n  data: { allowedRoles: ['SECR_DECANATO','ADMIN'] } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EmpleadoRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EmpleadoRoutingModule } from './empleado-routing.module';\r\nimport { ModalComponent } from './components/modal/modal.component';\r\nimport { UIModule } from '../../shared/ui/ui.module';\r\nimport { WidgetModule } from '../../shared/widget/widget.module';\r\nimport { NgbNavModule, NgbDropdownModule, NgbPaginationModule, NgbModalModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { Ng5SliderModule } from 'ng5-slider';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { ListarComponent } from './pages/listar/listar.component';\r\nimport { TablaComponent } from './pages/tabla/tabla.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ListarComponent,\r\n        TablaComponent,\r\n        ModalComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        EmpleadoRoutingModule,\r\n        UIModule,\r\n        NgbNavModule,\r\n        NgbModule,\r\n        NgbModalModule,\r\n        FormsModule,\r\n        Ng2SearchPipeModule,\r\n        NgbDropdownModule,\r\n        ReactiveFormsModule,\r\n        NgxPaginationModule, //para paginar\r\n        WidgetModule,\r\n        Ng5SliderModule,\r\n        NgSelectModule,\r\n        NgbPaginationModule,\r\n        NgxMaskModule.forRoot(), //para las mascaras\r\n    ]\r\n})\r\nexport class EmpleadoModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { EmpleadoService } from '../../service/empleado.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-listar',\r\n  templateUrl: './listar.component.html',\r\n  styleUrls: ['./listar.component.scss']\r\n})\r\nexport class ListarComponent implements OnInit {\r\n\r\n  // bread crumb items\r\n  breadCrumbItems: Array<{}>;\r\n  term: string = '';\r\n\r\n  constructor(private empleadoService: EmpleadoService) { }\r\n\r\n  ngOnInit() {\r\n    Swal.fire({\r\n      title: 'Espere un momento!',\r\n      html: 'Se está procesando la información...',\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n      }\r\n    });\r\n    \r\n    this.breadCrumbItems = [{ label: 'Empleado' }, { label: 'Listar', active: true }];\r\n    this.empleadoService.getEmpleados();\r\n  }\r\n\r\n  get listaEmpleados() {\r\n    return this.empleadoService.listEmpleados;\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <app-page-title title=\"Empleados\" [breadcrumbItems]=\"breadCrumbItems\"></app-page-title>\r\n  \r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <div class=\"row mb-2\">\r\n              <div class=\"col-sm-4\">\r\n                <div class=\"search-box me-2 mb-2 d-inline-block\">\r\n                  <div class=\"position-relative\">\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Buscar...\" [(ngModel)]=\"term\">\r\n                    <i class=\"bx bx-search-alt search-icon\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-sm-8\">\r\n                <div class=\"text-sm-end\">\r\n                    <app-modal [leyenda]=\"'Nuevo'\" [titulo]=\"'Agregar'\"></app-modal>\r\n                </div>\r\n              </div><!-- end col-->\r\n            </div>\r\n  \r\n            <!-- Table data -->\r\n            <app-tabla [empleados]=\"listaEmpleados\"  [queryString]=\"term\"></app-tabla>\r\n            \r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport { Router } from '@angular/router';\r\nimport { IEmpleado } from '../../interface/empleado.interface';\r\nimport { EmpleadoService } from '../../service/empleado.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MensajesService } from 'src/app/shared/global/mensajes.service';\r\n\r\n@Component({\r\n  selector: 'app-tabla',\r\n  templateUrl: './tabla.component.html',\r\n  styleUrls: ['./tabla.component.scss']\r\n})\r\nexport class TablaComponent implements OnInit {\r\n\r\n  @Input() empleados!: IEmpleado[];\r\n  @Input() queryString!: string;\r\n  p: any;\r\n  cambio: string;\r\n\r\n  formularioEmpleado: FormGroup;\r\n  estado: string;\r\n\r\n  constructor(\r\n    private empleadosService: EmpleadoService,\r\n    private router: Router,\r\n    private fb: FormBuilder\r\n  ) {\r\n    this.formularioEmpleado = this.Iniciarformulario();\r\n  }\r\n\r\n  ngOnInit() { }\r\n  private Iniciarformulario(): FormGroup {\r\n    return this.fb.group({\r\n      codigoEmpleado: [''],\r\n      dui: [''],\r\n      nombre: [''],\r\n      apellido: [''],\r\n      telefono: [''],\r\n      licencia: [''],\r\n      tipolicencia: [''],\r\n      fechalicencia: [''],\r\n      jefe: [],\r\n      estado: [],\r\n      nombrefoto: [''],\r\n      urlfoto: [''],\r\n      correo: [''],\r\n      cargo: [''],\r\n      departamento: [''],\r\n    });\r\n  }\r\n\r\n  cambiarEstado(empleadoED: IEmpleado, estado: number) {\r\n\r\n    this.formularioEmpleado.patchValue(empleadoED);\r\n    this.formularioEmpleado.patchValue({\r\n      cargo: empleadoED.cargo.id,\r\n    });\r\n    this.formularioEmpleado.patchValue({\r\n      departamento: empleadoED.departamento.codigoDepto,\r\n    });\r\n\r\n    if (estado == 8) {\r\n      this.formularioEmpleado.patchValue({\r\n        estado: 9,\r\n      });\r\n      this.cambio = 'Inactivo';\r\n    } else {\r\n      this.formularioEmpleado.patchValue({\r\n        estado: 8,\r\n      });\r\n      this.cambio = 'Activo';\r\n    }\r\n\r\n    const empleado = this.formularioEmpleado.value;\r\n\r\n    Swal.fire({\r\n      icon: 'question',\r\n      title: \"¿Cambiar el estado a \" + this.cambio + \"?\",\r\n      showDenyButton: true,\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Cambiar\",\r\n      denyButtonText: `No cambiar`,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.empleadosService.putEmpleado(empleado).subscribe((resp: any) => {\r\n          if (resp) {\r\n            const Toast = Swal.mixin({\r\n              toast: true,\r\n              position: 'top-end',\r\n              showConfirmButton: false,\r\n              timer: 3000,\r\n              //timerProgressBar: true,\r\n              didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n              }\r\n            })\r\n\r\n            Toast.fire({\r\n              icon: 'success',\r\n              text: 'Modificación exitosa'\r\n            })\r\n\r\n            this.recargar();\r\n          }\r\n        }, (err: any) => {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'Algo paso, hable con el administrador',\r\n          });\r\n        });\r\n      } else if (result.isDenied) {\r\n        Swal.fire(\"Cambios no aplicados\", \"\", \"info\");\r\n      }\r\n    });\r\n  }\r\n\r\n  recargar() {\r\n    let currentUrl = this.router.url;\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    this.router.onSameUrlNavigation = \"reload\";\r\n    this.router.navigate([currentUrl]);\r\n  }\r\n\r\n  // Método para agregar guion al número del DUI\r\n  InsertarGuion(dui: string): string {\r\n    return dui.slice(0, -1) + '-' + dui.slice(-1);\r\n  }\r\n\r\n  /*   RetornarNombre(id: number): string {\r\n      let estado: string = \"\";\r\n      this.empleadosService.ObtenerestadoporID(id).then(async result => {\r\n        estado = result.nombreEstado;\r\n      });\r\n      return estado;\r\n    } */\r\n\r\n}\r\n","<div class=\"table-responsive mb-0\">\r\n    <table class=\"table table-centered table-nowrap\">\r\n        <thead class=\"table-light\">\r\n            <tr>\r\n                <th class=\"align-middle text-center\">DUI</th>\r\n                <th class=\"align-middle text-center\">Nombre</th>\r\n                <th class=\"align-middle text-center\">Cargo</th>\r\n                <th class=\"align-middle text-center\">Departamento</th>\r\n                <th class=\"align-middle text-center\">Jefe</th>\r\n              <!--   <th class=\"align-middle text-center\">Correo</th> -->\r\n                <th class=\"align-middle text-center\">Estado</th>\r\n                <th class=\"align-middle text-center\">Acciones</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let empleado of empleados | filter:queryString | paginate: { itemsPerPage: 7, currentPage: p}\">\r\n                <td class=\"align-middle text-center\">{{ InsertarGuion(empleado.dui) }}</td>\r\n                <td class=\"align-middle text-center\">{{ empleado.nombre + ' ' + empleado.apellido }}</td>\r\n                <td class=\"align-middle text-center\">{{ empleado.cargo.nombreCargo }}</td>\r\n                <td class=\"align-middle text-center\">{{ empleado.departamento.nombre }}</td>\r\n                <td class=\"align-middle text-center\">{{ empleado.cargo.nombreCargo == 'JEFE DEPARTAMENTO' ? 'SI' : 'NO' }}</td>\r\n                <!-- <td class=\"align-middle text-center\">{{ empleado.correo }}</td> -->\r\n                <td class=\"align-middle text-center\">\r\n                    <h5>\r\n                        <span\r\n                            class=\"{{ empleado.estado === 8 ? 'badge rounded-pill bg-success' : 'badge rounded-pill bg-danger' }}\">\r\n                            {{ empleado.estado === 8 ? 'Activo' : 'Inactivo' }}\r\n                        </span>\r\n                    </h5>\r\n                </td>\r\n\r\n                <td class=\"align-middle text-center text-center\">\r\n                    <!-- RetornarNombre(empleado.estado) -->\r\n                    <!--       botones para detalle -->\r\n                    <app-modal [leyenda]=\"'Detalle'\" [titulo]=\"'Detalle'\" [empleadOd]=\"empleado\" [motoristaOd]=\"false\"\r\n                        *ngIf=\"empleado.cargo.nombreCargo != 'Motorista'\"></app-modal>\r\n\r\n                    <app-modal [leyenda]=\"'Detalle'\" [titulo]=\"'Detalle'\" [empleadOd]=\"empleado\" [motoristaOd]=\"true\"\r\n                        *ngIf=\"empleado.cargo.nombreCargo == 'Motorista'\"></app-modal>\r\n                    <!--       botones para editar -->\r\n                    <app-modal [leyenda]=\"'Editar'\" [titulo]=\"'Editar'\" [empleadOd]=\"empleado\" [motoristaOd]=\"false\"\r\n                        *ngIf=\"empleado.cargo.nombreCargo != 'Motorista'\"></app-modal>\r\n\r\n                    <app-modal [leyenda]=\"'Editar'\" [titulo]=\"'Editar'\" [empleadOd]=\"empleado\" [motoristaOd]=\"true\"\r\n                        *ngIf=\"empleado.cargo.nombreCargo == 'Motorista'\"></app-modal>\r\n\r\n                    <button type=\"button\" class=\"btn btn-warning btn-sm btn-rounded mx-1\"\r\n                        (click)=\"cambiarEstado(empleado, empleado.estado)\"\r\n                        ngbTooltip=\"Cambiar a {{empleado.estado === 9 ? 'Activo' : 'Inactivo'}}\">\r\n                        <i\r\n                            [ngClass]=\"empleado.estado === 8 ? 'mdi mdi-18px mdi-lock-outline' : 'mdi mdi-18px mdi-key-outline'\"></i>\r\n                        <!-- <i class=\"mdi mdi-account-lock-outline\"></i>\r\n                         mdi-account-check-outline -->\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n\r\n    <div class=\"pagination pagination-rounded justify-content-end mb-2\">\r\n        <pagination-controls (pageChange)=\"p = $event\" [nextLabel]=\"''\" [previousLabel]=\"''\"></pagination-controls>\r\n    </div>\r\n\r\n</div>\r\n<!-- end table -->"],"names":[],"sourceRoot":"webpack:///"}