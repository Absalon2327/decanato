{"version":3,"file":"src_app_modules_solicitud-vehiculo_solicitud-vehiculo_module_ts.js","mappings":"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","sources":["./src/app/modules/solicitud-vehiculo/components/modal-log/modal-log.component.ts","./src/app/modules/solicitud-vehiculo/components/modal-log/modal-log.component.html","./src/app/modules/solicitud-vehiculo/components/modal/modal.component.ts","./src/app/modules/solicitud-vehiculo/components/modal/modal.component.html","./src/app/modules/solicitud-vehiculo/components/tabla/tabla.component.ts","./src/app/modules/solicitud-vehiculo/components/tabla/tabla.component.html","./src/app/modules/solicitud-vehiculo/pages/listar-admin/listar-admin.component.ts","./src/app/modules/solicitud-vehiculo/pages/listar-admin/listar-admin.component.html","./src/app/modules/solicitud-vehiculo/pages/listar/listar.component.ts","./src/app/modules/solicitud-vehiculo/pages/listar/listar.component.html","./src/app/modules/solicitud-vehiculo/pages/mis-solicitudes/mis-solicitudes.component.ts","./src/app/modules/solicitud-vehiculo/pages/mis-solicitudes/mis-solicitudes.component.html","./src/app/modules/solicitud-vehiculo/solicitud-vehiculo-routing.module.ts","./src/app/modules/solicitud-vehiculo/solicitud-vehiculo.module.ts"],"sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\r\nimport {NgbActiveModal, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {ILogSoliVe} from \"../../interfaces/data.interface\";\r\n\r\n@Component({\r\n  selector: 'app-modal-log',\r\n  templateUrl: './modal-log.component.html',\r\n  styleUrls: ['./modal-log.component.scss']\r\n})\r\nexport class ModalLogComponent implements OnInit {\r\n\r\n  alerts = [\r\n    {\r\n      id: 1,\r\n      type: \"info\",\r\n      message:\r\n        \"Estos son los diferentes moviemientos que ha tenido la solicitud.\",\r\n      show: false,\r\n    },\r\n  ];\r\n\r\n  @Input() log!: ILogSoliVe[];\r\n  p: any; // paginacion\r\n\r\n  constructor(private modalService: NgbModal, public activeModal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  siMuestraAlertas() {\r\n    return this.alerts.every((alert) => alert.show);\r\n  }\r\n  restaurarAlerts() {\r\n    this.alerts.forEach((alert) => {\r\n      alert.show = true;\r\n    });\r\n  }\r\n  CambiarAlert(alert) {\r\n    alert.show = !alert.show;\r\n  }\r\n  calcularNumeroCorrelativo(index: number): number {\r\n    if (typeof this.p === 'number') {\r\n      return (this.p - 1) * 10 + index + 1;\r\n    } else {\r\n      return index + 1; // Si no es numérico, solo regresamos el índice + 1\r\n    }\r\n  }\r\n\r\n}\r\n","\r\n<!-- Modal -->\r\n\r\n<div class=\"modal-header\">\r\n  <h5 class=\"modal-title mt-0\">Movimientos de la solicitud</h5>\r\n  <div class=\"btn-alerta\" *ngIf=\"alerts\">\r\n    <i\r\n      class=\"mdi mdi-18px mdi-lightbulb-on-outline custom-cursor\"\r\n      ngbTooltip=\"Mostrar Ayuda\"\r\n      *ngIf=\"!siMuestraAlertas()\"\r\n      (click)=\"restaurarAlerts()\"\r\n    ></i>\r\n  </div>\r\n  <button type=\"button\" class=\"btn-close\" aria-hidden=\"true\" (click)=\"activeModal.dismiss('Cross click')\">\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <div *ngFor=\"let alert of alerts\">\r\n    <div\r\n      class=\"alert alert-{{ alert.type }} alert-dismissible fade show\"\r\n      role=\"alert\"\r\n      *ngIf=\"alert.show\"\r\n    >\r\n      <strong>{{\r\n        alert.type === \"info\" ? \"Importante!\" : \"Precaución!\"\r\n        }}</strong>\r\n      {{ alert.message }}\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn-close\"\r\n        (click)=\"CambiarAlert(alert)\"\r\n        aria-label=\"Close\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"table-responsive mb-0\">\r\n    <table class=\"table table-centered table-nowrap\">\r\n      <thead class=\"table-light\">\r\n      <tr>\r\n        <th class=\"align-middle\">No.</th>\r\n        <th class=\"align-middle\">Actividad</th>\r\n        <th class=\"align-middle\">Fecha</th>\r\n        <th class=\"align-middle\">Usuario que la realizó</th>\r\n        <th class=\"align-middle\">Cargo</th>\r\n        <th class=\"align-middle\" style=\"text-align: center\">Estado</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <ng-container *ngIf=\"log.length > 0; else noDataTemplate\">\r\n        <!-- *ngFor=\"let data of cards | filter:queryString | paginate: { itemsPerPage: 10, currentPage: p }\" -->\r\n        <tr *ngFor=\"let data of log;\r\n                            let i = index\">\r\n          <td>{{calcularNumeroCorrelativo(i)}}</td>\r\n          <td>{{data.actividad}}</td>\r\n          <td>{{data.fechaLogSoliVe | date: \"dd/MM/yyyy HH:mm:ss\"}}</td>\r\n          <td>{{data.usuario}}</td>\r\n          <td>{{data.cargo}}</td>\r\n          <td style=\"text-align: center\">\r\n            <h5><span class=\"{{data.estadoLogSolive === 1 ? 'badge rounded-pill bg-warning'\r\n          : data.estadoLogSolive === 2 ? 'badge rounded-pill bg-info'\r\n          : data.estadoLogSolive === 3 ? 'badge rounded-pill bg-esdec'\r\n          : data.estadoLogSolive === 4 ? 'badge rounded-pill bg-success'\r\n          : data.estadoLogSolive === 5 ? 'badge rounded-pill bg-purple'\r\n          : data.estadoLogSolive === 6 ? 'badge rounded-pill bg-revision'\r\n          : data.estadoLogSolive === 7 ? 'badge rounded-pill bg-prima'\r\n          : data.estadoLogSolive === 15 ? 'badge rounded-pill bg-danger': ''}}\">\r\n            {{data.estadoString}}\r\n          </span></h5>\r\n          </td>\r\n\r\n        </tr>\r\n      </ng-container>\r\n      <ng-template #noDataTemplate>\r\n        <tr>\r\n          <td colspan=\"6\" style=\"text-align: center;\">\r\n            No hay datos disponibles.\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      </tbody>\r\n    </table>\r\n\r\n  </div>\r\n\r\n  <div class=\"d-flex justify-content-end\">\r\n    <button type=\"button\" class=\"btn btn-dark w-sm\" id=\"btn-cancel\" name=\"btn-cancel\"\r\n            aria-hidden=\"true\" (click)=\"activeModal.close('Close click')\">Cancelar</button>\r\n  </div>\r\n\r\n  </div>\r\n<!-- Modal -->\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {NgbActiveModal, NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport {Router} from \"@angular/router\";\r\nimport {IDocumento, IEmail, IPais, IPasajero, ISolicitudVehiculo} from \"../../interfaces/data.interface\";\r\nimport {SolicitudVehiculoService} from \"../../services/solicitud-vehiculo.service\";\r\n\r\nimport {map} from \"rxjs/operators\";\r\nimport Swal from \"sweetalert2\";\r\nimport {MensajesService} from \"../../../../shared/global/mensajes.service\";\r\nimport {IVehiculos} from \"../../../vehiculo/interfaces/vehiculo-interface\";\r\nimport {INTEGER_VALIDATE} from \"../../../../constants/constants\";\r\nimport { Usuario } from 'src/app/account/auth/models/usuario.models';\r\nimport {ISolicitudvalep} from \"../../../solicitud-vale-paginacion/interface/solicitudvalep.interface\";\r\nimport {EmailService} from \"../../services/email.service\";\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.scss']\r\n})\r\nexport class ModalComponent implements OnInit {\r\n\r\n  @Input() leyenda!: string;\r\n  @Input() estadoSelecionado!: number;\r\n  @Input() soliVeOd!: ISolicitudVehiculo;\r\n  @Input() usuarioActivo !: Usuario;\r\n  @Input() vista!: string;\r\n\r\n  private isInteger: string = INTEGER_VALIDATE;\r\n  private isDate: string = \"\";\r\n\r\n  departamentos!: IPais[];\r\n  municipios!: IPais[];\r\n  distritos!: IPais[];\r\n  cantones!: IPais[];\r\n\r\n  placas!: IVehiculos[];\r\n\r\n  formularioSoliVe!: FormGroup;\r\n  pasajeros: IPasajero[] = [];\r\n  username: string = 'Usuario que inicia';\r\n  mostrarTabla: boolean = true;\r\n  btnVerPdf: boolean = false;\r\n  mostrarArchivoAdjunto: boolean = false;\r\n  cantidadPersonas: number = 0;\r\n\r\n  pasajeroFormControls: FormControl[] = [];\r\n  soliSave : ISolicitudVehiculo [] = [];\r\n  file!: File;\r\n  solicitudVale!: ISolicitudvalep;\r\n  isChecked: boolean = false;\r\n\r\n  alerts = [\r\n    {\r\n      id: 1,\r\n      type: \"info\",\r\n      message: \" Complete los campos obligatorios (*)\",\r\n      show: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      type: \"warning\",\r\n      message:\r\n        \" Tenga en cuenta que una vez almacenada la información no las podrá modificar y serán datos permanentes.\",\r\n      show: false,\r\n    },\r\n  ];\r\n\r\n\r\n  constructor(private modalService: NgbModal, private fb: FormBuilder, private router: Router,\r\n              private soliVeService: SolicitudVehiculoService, public activeModal: NgbActiveModal,\r\n              private mensajesService: MensajesService, private emailService: EmailService\r\n  ) {\r\n    this.solicitudVale = {\r\n      idSolicitudVale: '',\r\n      cantidadVale: 0,\r\n      estadoEntrada: 1,\r\n      estado: 8,\r\n      solicitudVehiculo: '' // Otra inicialización si es necesario\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.iniciarFormulario();\r\n    this.llenarSelectDepartamentos();\r\n    this.soliVeService.obtenerVehiculos();\r\n    this.detalle(this.leyenda);\r\n  }\r\n\r\n  get listVehiculos() {\r\n    return this.soliVeService.listVehiculos;\r\n  }\r\n\r\n  detalle(leyenda: string){\r\n    if (leyenda == 'Detalle'){\r\n\r\n      const solicitudVehiculo = this.soliVeOd;\r\n\r\n      this.formularioSoliVe.get('fechaSolicitud')\r\n        .setValue(this.soliVeOd != null ? this.soliVeOd.fechaSolicitud: '');\r\n      this.formularioSoliVe.get('fechaSalida')\r\n        .setValue(this.soliVeOd != null ? this.soliVeOd.fechaSalida: '');\r\n      this.formularioSoliVe.get('unidadSolicitante')\r\n        .setValue(this.soliVeOd != null ? this.soliVeOd.unidadSolicitante: '');\r\n      this.formularioSoliVe.get('lugarMision')\r\n        .setValue(this.soliVeOd != null ? this.soliVeOd.lugarMision: '');\r\n      this.formularioSoliVe.get('depto')\r\n        .setValue(this.soliVeOd != null ? this.soliVeOd.unidadSolicitante: '');\r\n      this.formularioSoliVe.get('direccionD')\r\n        .setValue(this.soliVeOd != null ? this.soliVeOd.direccion: '');\r\n      this.formularioSoliVe.get('fechaEntrada')\r\n        .setValue(this.soliVeOd != null ? this.soliVeOd.fechaEntrada: '');\r\n      this.formularioSoliVe.get('objetivoMision')\r\n        .setValue(this.soliVeOd != null ? this.soliVeOd.objetivoMision: '');\r\n      this.formularioSoliVe.get('tipoVehiculo')\r\n        .setValue(this.soliVeOd != null ? this.soliVeOd.vehiculo.clase: '');\r\n      this.formularioSoliVe.get('vehiculo')\r\n        .setValue(this.soliVeOd != null ? this.soliVeOd.vehiculo.placa: '');\r\n      this.formularioSoliVe.get('cantidadPersonas')\r\n        .setValue(this.soliVeOd != null ? this.soliVeOd.cantidadPersonas: '');\r\n      this.formularioSoliVe.get('horaSalida')\r\n        .setValue(this.soliVeOd != null ? this.soliVeOd.horaSalida: '');\r\n      this.formularioSoliVe.get('horaEntrada')\r\n        .setValue(this.soliVeOd != null ? this.soliVeOd.horaEntrada: '');\r\n      this.formularioSoliVe.get('solicitante')\r\n        .setValue(this.soliVeOd != null ? this.soliVeOd.solicitante.empleado.nombre+' '\r\n          + this.soliVeOd.solicitante.empleado.apellido: '');\r\n\r\n      if (this.soliVeOd.observaciones != null){\r\n        this.formularioSoliVe.get('observaciones')\r\n          .setValue(this.soliVeOd != null ? this.soliVeOd.observaciones: '');\r\n      }\r\n\r\n      if(this.soliVeOd.motorista != null){\r\n        this.formularioSoliVe.get('motorista')\r\n          .setValue(this.soliVeOd != null ? this.soliVeOd.motorista.nombre + ' '\r\n            + this.soliVeOd.motorista.apellido: '');\r\n      }\r\n\r\n\r\n      if (solicitudVehiculo.cantidadPersonas > 5){\r\n        this.mostrarTabla = false;\r\n        this.btnVerPdf = true;\r\n      }\r\n      for (const persona of this.soliVeOd.listaPasajeros) {\r\n        this.pasajeros.push({id: persona.id, nombrePasajero: persona.nombrePasajero});\r\n\r\n        const control = new FormControl(this.soliVeOd != null ? persona.nombrePasajero : '');\r\n        this.pasajeroFormControls.push(control);\r\n      }\r\n    }\r\n  }\r\n\r\n  async guardar(){\r\n    this.formularioSoliVe.value.unidadSolicitante = this.usuarioActivo.empleado.departamento.nombre;\r\n    const solicitudVehiculo = this.formularioSoliVe.value;\r\n\r\n    if (this.formularioSoliVe.valid){\r\n      if (this.soliVeOd != null){\r\n        this.editarSoliVe();\r\n      }else{\r\n        if(this.validarfecha(solicitudVehiculo.fechaSolicitud)){\r\n          if (this.validarfecha(solicitudVehiculo.fechaSalida)){\r\n            if(this.validarfecha(solicitudVehiculo.fechaEntrada)){\r\n              if (solicitudVehiculo.fechaEntrada >= solicitudVehiculo.fechaSalida){\r\n                if (solicitudVehiculo.horaEntrada <= solicitudVehiculo.horaSalida &&\r\n                  solicitudVehiculo.fechaSalida == solicitudVehiculo.fechaEntrada){\r\n                  this.mensajesService.mensajesToast(\r\n                    \"warning\",\r\n                    \"La hora de regreso debe ser mayor a la hora de salida en una misión de un día\"\r\n                  );\r\n                }else {\r\n                  if(this.file  != null\r\n                    || solicitudVehiculo.cantidadPersonas < 6){\r\n                    //  vacío para almacenar los datos de los pasajeros\r\n                    const pasajerosData = [];\r\n\r\n                    // Recorrer los controles de los pasajeros\r\n                    for (const control of this.pasajeroFormControls) {\r\n                      // Obtener el valor del control\r\n                      const nombrePasajero = control.value;\r\n\r\n                      // objeto con el valor del control y un ID vacío\r\n                      const pasajero = { id: '', nombrePasajero };\r\n\r\n                      // Agregar el objeto al arreglo de pasajerosData\r\n                      pasajerosData.push(pasajero);\r\n                    }\r\n\r\n                    solicitudVehiculo.listaPasajeros = pasajerosData;\r\n\r\n                    //console.log(\"dataPas: \",pasajerosData);\r\n\r\n                    // validacion lista de pasajeros\r\n                    const todosLlenos = pasajerosData.every((pasajero) => {\r\n                      const value = pasajero.nombrePasajero;\r\n\r\n                      return typeof value === 'string' && value.trim() !== '';\r\n\r\n\r\n                    });\r\n\r\n                    if (!todosLlenos) {\r\n                      this.mensajesService.mensajesToast(\r\n                        \"warning\",\r\n                        \"Por favor, completa todos los nombres de los pasajeros.\"\r\n                      );\r\n                      // fin validacion de lista de pasajeros\r\n                    } else {\r\n                      // Todos los nombres de los pasajeros están llenos, continuar con el envío de la solicitud.\r\n                      if ((await this.mensajesService.mensajesConfirmar()) == true) {\r\n                        await this.registrarSoliVe();\r\n                      }\r\n                    }\r\n                  } else {\r\n                    this.mensajesService.mensajesToast(\r\n                      \"warning\",\r\n                      \"Debe subir pdf de la lista de pasajeros\"\r\n                    );\r\n                  }\r\n                }\r\n\r\n              }else{\r\n                this.mensajesService.mensajesToast(\r\n                  \"warning\",\r\n                  \"La fecha de misión  debe ser mayor o igual a la fecha de salida\"\r\n                );\r\n              }\r\n\r\n            } else {\r\n              this.mensajesService.mensajesToast(\r\n                \"warning\",\r\n                \"Año de fecha de regreso incorrecta\"\r\n              );\r\n            }\r\n          } else {\r\n            this.mensajesService.mensajesToast(\r\n              \"warning\",\r\n              \"Año de fecha de misión incorrecta\"\r\n            );\r\n          }\r\n        } else {\r\n          this.mensajesService.mensajesToast(\r\n            \"warning\",\r\n            \"Año de fecha de solicitud incorrecta\"\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      // Mostrar nombres de campos inválidos por consola\r\n      /*console.log('Campos inválidos:',\r\n        Object.keys(this.formularioSoliVe.controls).filter((controlName) =>\r\n          this.formularioSoliVe.get(controlName)?.invalid));*/\r\n\r\n      this.mensajesService.mensajesToast(\r\n        \"warning\",\r\n        \"Complete los que se indican\"\r\n      );\r\n      return Object.values(this.formularioSoliVe.controls).forEach((control) =>\r\n        control.markAsTouched()\r\n      );\r\n    }\r\n  }\r\n\r\n  // subir el archivo\r\n  cambioDeArchivo(event: Event) {\r\n    const target = event.target as HTMLInputElement;\r\n    this.file = (target.files as FileList)[0];\r\n  }\r\n\r\n  registrarSoliVe() : Promise<void> {\r\n    const solicitudVehiculo = this.formularioSoliVe.value;\r\n\r\n    /* para la direccion */\r\n    let nombreDepartamento;\r\n    let nombreMunicipio;\r\n    let nombreDistrito;\r\n    let nombreCanton;\r\n\r\n    const codigoDepartamentoSeleccionado = this.formularioSoliVe.get('depto').value;\r\n    const codigoMunicipioSeleccionado = this.formularioSoliVe.get('municipio').value;\r\n    const codigoDistritoSeleccionado = this.formularioSoliVe.get('distrito').value;\r\n    const codigoCantonSeleccionado = this.formularioSoliVe.get('canton').value;\r\n\r\n    // Busca el objeto correspondiente al código seleccionado\r\n    const departamentoSeleccionado = this.departamentos.find(\r\n      dpt => dpt.codigo === codigoDepartamentoSeleccionado\r\n    );\r\n    const municipioSeleccionado = this.municipios.find(\r\n      muni => muni.codigo === codigoMunicipioSeleccionado\r\n    );\r\n    const distritoSeleccionado = this.distritos.find(\r\n      dist => dist.codigo === codigoDistritoSeleccionado\r\n    );\r\n    const cantonSeleccionado = this.cantones.find(\r\n      ctn => ctn.codigo === codigoCantonSeleccionado\r\n    );\r\n\r\n    if (departamentoSeleccionado) {\r\n      nombreDepartamento = departamentoSeleccionado.nam;\r\n    }\r\n    if (municipioSeleccionado){\r\n      nombreMunicipio = municipioSeleccionado.nam;\r\n    }\r\n    if (distritoSeleccionado){\r\n      nombreDistrito = distritoSeleccionado.nam;\r\n    }\r\n    if (cantonSeleccionado){\r\n      nombreCanton = cantonSeleccionado.nam;\r\n    }\r\n\r\n    if (this.isChecked != true){\r\n      solicitudVehiculo.direccion = nombreDepartamento+', '+nombreMunicipio+', '+\r\n        nombreDistrito+', '+nombreCanton;\r\n    }\r\n    /* fin de la direccion */\r\n\r\n    // Mostrar SweetAlert de carga\r\n    Swal.fire({\r\n      title: \"Espere\",\r\n      text: \"Realizando la acción...\",\r\n      icon: \"info\",\r\n      allowOutsideClick: false,\r\n      allowEscapeKey: false,\r\n      showCancelButton: false,\r\n      showConfirmButton: false,\r\n    });\r\n\r\n    return new Promise<void> ((resolve, reject) => {\r\n      this.soliVeService.registrarSoliVe(solicitudVehiculo).subscribe({\r\n        next: (resp: any) => {\r\n          this.soliSave = resp;\r\n          Swal.close();\r\n\r\n          if (solicitudVehiculo.file != null && solicitudVehiculo.cantidadPersonas > 5) {\r\n            // enviar pdf\r\n            const formData = new FormData();\r\n            let obj = {\r\n              nombreDocumento: '',\r\n              urlDocumento: '',\r\n              tipoDocumento:'Lista de pasajeros',\r\n              fecha: this.obtenerFechaActual(new Date()),\r\n              codigoSolicitudVehiculo: {\r\n                codigoSolicitudVehiculo: resp.codigoSolicitudVehiculo,\r\n              }\r\n            }\r\n            formData.append('archivo', this.file!);\r\n            formData.append('entidad', new Blob([JSON.stringify(obj)], {type: 'application/json'}));\r\n\r\n            this.soliVeService.enviarPdfPasajeros(formData).subscribe({\r\n              next: () => {\r\n                //console.log(pdfResp:any);\r\n                this.soliVeService.getSolicitudesVehiculo(this.estadoSelecionado);\r\n                /*Correo*/\r\n                if (this.usuarioActivo.role != (\"JEFE_DEPTO\" || \"JEFE_FINANACIERO\" || 'DECANO')){\r\n                  this.enviarEmail(this.usuarioActivo.empleado.departamento.nombre);\r\n                }\r\n                /*Fin correo*/\r\n                this.mensajesService.mensajesToast(\"success\", \"Registro agregado\");\r\n                this.modalService.dismissAll();\r\n                this.formularioSoliVe.reset();\r\n                resolve();\r\n              },\r\n              error: (pdfError) => {\r\n                Swal.close();\r\n                this.mensajesService.mensajesSweet(\r\n                  'error',\r\n                  'Ups... Algo salió mal al enviar el PDF',\r\n                  pdfError.error.message\r\n                );\r\n                reject(pdfError);\r\n              },\r\n            });\r\n          } else {\r\n            this.soliVeService.getSolicitudesVehiculo(this.estadoSelecionado);\r\n            /*Correo*/\r\n            if (this.usuarioActivo.role != (\"JEFE_DEPTO\" || \"JEFE_FINANACIERO\" || 'DECANO')){\r\n              this.enviarEmail(this.usuarioActivo.empleado.departamento.nombre);\r\n            }\r\n            /*Fin correo*/\r\n            this.mensajesService.mensajesToast(\"success\", \"Registro agregado\");\r\n            this.modalService.dismissAll();\r\n            this.formularioSoliVe.reset();\r\n            resolve();\r\n          }\r\n        },\r\n        error : (err) => {\r\n          // Cerrar SweetAlert de carga\r\n          Swal.close();\r\n          this.mensajesService.mensajesSweet(\r\n            \"error\",\r\n            \"Ups... Algo salió mal al registrar la solicitud\",\r\n            err.error.message\r\n          );\r\n          reject(err); // Rechaza la promesa con el error\r\n        },\r\n      });\r\n    });\r\n  }\r\n\r\n  editarSoliVe(){}\r\n\r\n  cargarPlacas(tipoVehiculo: string, fechaSalida:string) {\r\n    this.soliVeService.filtroPlacasVehiculo(tipoVehiculo,fechaSalida).subscribe(\r\n      (vehiculosData: IVehiculos[]) => {\r\n        if (vehiculosData && vehiculosData.length > 0) {\r\n          this.placas = vehiculosData;\r\n        } else if(tipoVehiculo != '') {\r\n          this.placas = [];\r\n          this.formularioSoliVe.get('vehiculo').setValue('');\r\n          this.mensajesService.mensajesToast(\"warning\", \"En estas fechas, no hay vehiculos disponibles del tipo seleccionado.\");\r\n        }\r\n      },\r\n      (error: any) => {\r\n        // console.error('Error al obtener opciones de vehículos desde el backend:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  iniciarFormulario() {\r\n    const unidadSolicitante = this.usuarioActivo?.empleado?.departamento?.nombre || '';\r\n    const fechaActual = this.obtenerFechaActual(new Date()) || '';\r\n\r\n    this.formularioSoliVe = this.fb.group({\r\n      fechaSolicitud: [\r\n        fechaActual,\r\n        [\r\n          Validators.required,\r\n          Validators.pattern(this.isDate)\r\n        ]\r\n      ],\r\n      fechaSalida: [\r\n        '',\r\n        [Validators.required]\r\n      ],\r\n      fechaEntrada: [\r\n        '',\r\n        [Validators.required]\r\n      ],\r\n      unidadSolicitante: [\r\n        unidadSolicitante,\r\n        [Validators.required]\r\n      ],\r\n      tipoVehiculo: ['', [Validators.required]],\r\n      vehiculo: ['', [Validators.required]],\r\n      objetivoMision: ['', [Validators.required]],\r\n      lugarMision: ['', [Validators.required]],\r\n      direccion: [null,[]],\r\n      direccionD: [''],\r\n      depto: ['', [Validators.required]],\r\n      municipio: ['', [Validators.required]],\r\n      distrito: ['', [Validators.required]],\r\n      canton: ['', [Validators.required]],\r\n      horaSalida: ['', [Validators.required]],\r\n      horaEntrada: ['', [Validators.required]],\r\n      cantidadPersonas: [\r\n        1,\r\n        [Validators.required, Validators.min(1), Validators.pattern(this.isInteger)]\r\n      ],\r\n      solicitante: [this.usuarioActivo?.codigoUsuario || '', [Validators.required]],\r\n      listaPasajeros: this.fb.array([]),\r\n      file: ['',],\r\n      isChecked: [false],\r\n      observaciones: ['',[]],\r\n      motorista: ['', []]\r\n    });\r\n\r\n    this.formularioSoliVe.get('isChecked').valueChanges.subscribe((isChecked) => {\r\n\r\n      const depto = this.formularioSoliVe.get('depto');\r\n      const municipio = this.formularioSoliVe.get('municipio');\r\n      const distrito = this.formularioSoliVe.get('distrito');\r\n      const canton = this.formularioSoliVe.get('canton');\r\n      const direccion = this.formularioSoliVe.get('direccion');\r\n\r\n\r\n      if (isChecked == true) {\r\n        direccion.setValidators([Validators.required]);\r\n        depto.clearValidators();\r\n        municipio.clearValidators();\r\n        distrito.clearValidators();\r\n        canton.clearValidators();\r\n      } else {\r\n        depto.setValidators([Validators.required]);\r\n        municipio.setValidators([Validators.required]);\r\n        distrito.setValidators([Validators.required]);\r\n        canton.setValidators([Validators.required]);\r\n        direccion.clearValidators();\r\n      }\r\n\r\n      depto.updateValueAndValidity();\r\n      municipio.updateValueAndValidity();\r\n      distrito.updateValueAndValidity();\r\n      canton.updateValueAndValidity();\r\n      direccion.updateValueAndValidity();\r\n    });\r\n  }\r\n\r\n\r\n  validarfecha(fecha: string) {\r\n    const inputDate = new Date(fecha);\r\n    return inputDate.getFullYear() > 999 && inputDate.getFullYear() < 10000;\r\n  }\r\n\r\n  //// metodo para validar el campo si es valido o no ////\r\n  esCampoValido(campo: string) {\r\n    const validarCampo = this.formularioSoliVe.get(campo);\r\n    return !validarCampo?.valid && validarCampo?.touched\r\n      ? 'is-invalid' : validarCampo?.touched ? 'is-valid' : '';\r\n  }\r\n\r\n  obtenerFechaActual(date: Date): string {\r\n    const year = date.getFullYear();\r\n    const mes = (date.getMonth() + 1).toString().\r\n    padStart(2, '0');\r\n    const dia = date.getDate().toString().\r\n    padStart(2, '0');\r\n    return `${year}-${mes}-${dia}`;\r\n  }\r\n\r\n  llenarSelectDepartamentos(){\r\n    // Reiniciar las selecciones y opciones para los selectores subsiguientes\r\n    this.formularioSoliVe.get('depto').setValue(null);\r\n    this.formularioSoliVe.get('municipio').setValue(null);\r\n    this.formularioSoliVe.get('distrito').setValue(null);\r\n    this.formularioSoliVe.get('canton').setValue(null);\r\n    this.municipios = [];\r\n    this.distritos = [];\r\n    this.cantones = [];\r\n    this.soliVeService.getDepa()\r\n      .pipe(map((dp) => dp.filter((depa)=> depa.codigo.length === 2)))\r\n      .subscribe((resp) => {\r\n        this.departamentos = this.sortItemsByCodigo(resp);\r\n      });\r\n  }\r\n\r\n  /**Cargar municipio segun dpto */\r\n  deptoChange(id: string): void {\r\n\r\n    this.formularioSoliVe.get('municipio').setValue(null);\r\n    this.formularioSoliVe.get('distrito').setValue(null);\r\n    this.formularioSoliVe.get('canton').setValue(null);\r\n    this.municipios = [];\r\n    this.distritos = [];\r\n    this.cantones = [];\r\n\r\n    // Obtener las opciones correspondientes al departamento seleccionado\r\n    this.soliVeService.getDepa()\r\n      .pipe(map(dp => dp.filter(muni => muni.codigo.startsWith(id) && muni.codigo.length === 4)))\r\n      .subscribe(resp => {\r\n        this.municipios = this.sortItemsByCodigo(resp);\r\n      });\r\n  }\r\n\r\n  distChange(id: string): void {\r\n    this.formularioSoliVe.get('distrito').setValue(null);\r\n    this.formularioSoliVe.get('canton').setValue(null);\r\n    this.distritos = [];\r\n    this.cantones = [];\r\n\r\n    // Obtener las opciones correspondientes al distrito seleccionado\r\n    this.soliVeService.getDepa()\r\n      .pipe(map(dp => dp.filter(disti => disti.codigo.startsWith(id) && disti.codigo.length === 6)))\r\n      .subscribe(resp => {\r\n        this.distritos = this.sortItemsByCodigo(resp);\r\n      });\r\n  }\r\n\r\n  muniChange(id: string): void {\r\n    this.formularioSoliVe.get('canton').setValue(null);\r\n    this.cantones = [];\r\n\r\n    // Obtener las opciones correspondientes al municipio seleccionado\r\n    this.soliVeService.getDepa()\r\n      .pipe(map(dp => dp.filter(canton => canton.codigo.startsWith(id) && canton.codigo.length === 8)))\r\n      .subscribe(resp => {\r\n        this.cantones = this.sortItemsByCodigo(resp);\r\n      });\r\n  }\r\n\r\n  //metodo para ordenar los datos del json de direcciones\r\n  sortItemsByCodigo(items: any[]): any[] {\r\n    return items.sort((a, b) => a.codigo.localeCompare(b.codigo));\r\n  }\r\n\r\n\r\n  actualizarFilas() {\r\n\r\n    this.cantidadPersonas = this.formularioSoliVe.get('cantidadPersonas').value;\r\n    const pasajerosArray = this.formularioSoliVe.get('listaPasajeros') as FormArray;\r\n\r\n    // Calcula cuántas filas deberías tener\r\n    const filasAAgregar = this.cantidadPersonas >= 2 && this.cantidadPersonas <= 5 ? this.cantidadPersonas - 1 : 0;\r\n\r\n    if (this.cantidadPersonas <= 5) {\r\n      // Si la cantidad actual es menor o igual a 5, elimina el último input si existe\r\n      if (pasajerosArray.length > filasAAgregar) {\r\n        pasajerosArray.removeAt(pasajerosArray.length - 1);\r\n        this.pasajeroFormControls.pop();\r\n      }\r\n\r\n      // Agrega filas adicionales según la cantidad deseada\r\n      while (pasajerosArray.length < filasAAgregar) {\r\n        pasajerosArray.push(this.fb.group({\r\n          id: [''], // Puedes inicializar estos valores como desees\r\n          nombrePasajero: ['']\r\n        }));\r\n\r\n        // Agrega un nuevo FormControl al arreglo pasajeroFormControls\r\n        this.pasajeroFormControls.push(new FormControl(''));\r\n      }\r\n    } else {\r\n      // Si la cantidad de personas es mayor a 5, detén la generación de filas\r\n      pasajerosArray.clear();\r\n      this.pasajeroFormControls = [];\r\n    }\r\n\r\n    if (this.cantidadPersonas > 5) {\r\n      this.mostrarTabla = false; // Ocultar la tabla\r\n      this.mostrarArchivoAdjunto = true; // Mostrar el campo de entrada de archivo\r\n    } else if (this.cantidadPersonas <= 5 && this.cantidadPersonas >= 2){\r\n      this.mostrarTabla = true; // Mostrar la tabla\r\n      this.mostrarArchivoAdjunto = false; // Ocultar el campo de entrada de archivo\r\n    }\r\n  }\r\n\r\n  siMuestraAlertas() {\r\n    return this.alerts.every((alert) => alert.show);\r\n  }\r\n  restaurarAlerts() {\r\n    this.alerts.forEach((alert) => {\r\n      alert.show = true;\r\n    });\r\n  }\r\n  CambiarAlert(alert) {\r\n    alert.show = !alert.show;\r\n  }\r\n\r\n  async aprobarSolicitud(){\r\n    if ((await this.mensajesService.mensajeAprobar()) == true) {\r\n      //await this.actualizarSolicitud(data);\r\n      this.soliVeOd.observaciones =  this.formularioSoliVe.get('observaciones').value;\r\n      if (this.usuarioActivo.role==\"JEFE_DEPTO\"){\r\n        await this.actualizarSolicitud(this.soliVeOd, 'aprobada');\r\n      }else{\r\n        await this.actualizarSolicitudDec(this.soliVeOd);\r\n      }\r\n    }\r\n  }\r\n\r\n  async anularSolicitud() {\r\n    if(this.formularioSoliVe.get('observaciones').value == ''){\r\n      this.formularioSoliVe.get('observaciones').setErrors({required:true});\r\n      this.formularioSoliVe.get('observaciones').markAsTouched();\r\n      this.mensajesService.mensajesToast(\"warning\", \"Solicitud se requiere campo observaciones\");\r\n    } else {\r\n      if (await this.mensajesService.mensajeAnular() == true){\r\n        this.soliVeOd.observaciones =  this.formularioSoliVe.get('observaciones').value;\r\n        this.soliVeOd.estado = 15;\r\n        if (this.usuarioActivo.role == 'ADMIN'){\r\n          await this.actualizarSolicitudAdmin(this.soliVeOd, 'anulada');\r\n        }else{\r\n          await this.actualizarSolicitud(this.soliVeOd, 'anulada');\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  actualizarSolicitud(data: any, accion: string ):Promise <void>{\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.soliVeService.updateSolciitudVehiculo(data).subscribe({\r\n        next: () => {\r\n          //resp:any\r\n\r\n          this.mensajesService.mensajesToast(\"success\", `Solicitud ${accion} con éxito`);\r\n          this.modalService.dismissAll();\r\n          if (accion == 'anulada'){\r\n            this.enviarEmailAnulacion(data.solicitante.codigoUsuario, data.observaciones);\r\n          }else if(accion=='aprobada'){\r\n            this.enviarEmailSecre('SECR_DECANATO', 'Nueva solicitud de vehículo pendiente',\r\n              'Tiene una nueva solicitud de vehículo pendiente de asignar motorista o verificación de la información.');\r\n          }\r\n\r\n          setTimeout(() => {\r\n            this.soliVeService.getSolicitudesRol(this.usuarioActivo.role);\r\n          }, 3025);\r\n          resolve();\r\n        },\r\n        error: (error) => {\r\n          Swal.close();\r\n          this.mensajesService.mensajesSweet(\r\n            'error',\r\n            'Ups... Algo salió mal',\r\n            error.error.message\r\n          );\r\n          reject (error);\r\n        },\r\n      });\r\n    });\r\n  }\r\n\r\n  actualizarSolicitudDec(data: any):Promise <void>{\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.soliVeService.updateSolciitudVehiculo(data).subscribe({\r\n        next: () => {\r\n          // resp: any\r\n          this.solicitudVale.cantidadVale =0 ;\r\n          this.solicitudVale.estadoEntrada = 1;\r\n          this.solicitudVale.estado = 8;\r\n          this.solicitudVale.solicitudVehiculo = data.codigoSolicitudVehiculo;\r\n\r\n          this.soliVeService.registrarSolicitudVale(this.solicitudVale).subscribe({\r\n            next: () => {\r\n              // valeResp: any\r\n              this.mensajesService.mensajesToast(\"success\", \"Solicitud aprobada con éxito\");\r\n              this.modalService.dismissAll();\r\n              setTimeout(() => {\r\n                this.soliVeService.getSolicitudesRol(this.usuarioActivo.role);\r\n              }, 3025);\r\n              resolve();\r\n            },\r\n            error: (errorSoli) => {\r\n              Swal.close();\r\n              this.mensajesService.mensajesSweet(\r\n                'error',\r\n                'Ups... Algo salió mal al aprobar la solicitud',\r\n                errorSoli.error.message\r\n              );\r\n              reject (errorSoli);\r\n            },\r\n          })\r\n        },\r\n        error: (error) => {\r\n          Swal.close();\r\n          this.mensajesService.mensajesSweet(\r\n            'error',\r\n            'Ups... Algo salió mal',\r\n            error.error.message\r\n          );\r\n          reject (error);\r\n        },\r\n      });\r\n    });\r\n  }\r\n\r\n  actualizarEstadoCheckbox() {\r\n    this.isChecked = this.isChecked == false;\r\n  }\r\n\r\n  descargaPdf() {\r\n    const tipoBuscado = \"Lista de pasajeros\";\r\n\r\n    const nombreDocument = this.soliVeOd.listDocumentos.filter((documento:IDocumento) => documento.tipoDocumento === tipoBuscado)\r\n      .map((documento) => documento.nombreDocumento);\r\n    this.soliVeService.obtenerDocumentPdf(nombreDocument)\r\n      .subscribe((resp:any) => {\r\n        let file = new Blob([resp], { type: 'application/pdf' });\r\n        let fileUrl = URL.createObjectURL(file);\r\n        window.open(fileUrl);\r\n      });\r\n  }\r\n\r\n  /* administrador */\r\n  async aprobarSolicitudAdministrador(){\r\n    if ((await this.mensajesService.mensajeAprobar()) == true) {\r\n      //await this.actualizarSolicitud(data);\r\n      this.soliVeOd.observaciones =  this.formularioSoliVe.get('observaciones').value;\r\n\r\n       if (this.soliVeOd.estado == 1 && this.usuarioActivo.role == 'ADMIN'){\r\n        await this.actualizarSolicitudAdmin(this.soliVeOd, 'aprobada');\r\n      }\r\n    }\r\n  }\r\n\r\n  actualizarSolicitudAdmin(data: any, accion: string ):Promise <void>{\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.soliVeService.updateSolciitudVehiculo(data).subscribe({\r\n        next: () => {\r\n          //resp:any\r\n\r\n          this.mensajesService.mensajesToast(\"success\", `Solicitud ${accion} con éxito`);\r\n          this.modalService.dismissAll();\r\n          if (accion == 'aprobada'){\r\n            this.enviarEmailSecre('SECR_DECANATO', 'Nueva solicitud de vehículo pendiente',\r\n              'Tiene una nueva solicitud de vehículo pendiente de asignar motorista o verificación de la información.');\r\n          }else if (accion == 'anulada'){\r\n            this.enviarEmailAnulacion(data.solicitante.codigoUsuario, data.observaciones);\r\n          }\r\n          setTimeout(() => {\r\n            this.soliVeService.getSolicitudesVehiculo(1);\r\n          }, 3025);\r\n          resolve();\r\n        },\r\n        error: (error) => {\r\n          Swal.close();\r\n          this.mensajesService.mensajesSweet(\r\n            'error',\r\n            'Ups... Algo salió mal',\r\n            error.error.message\r\n          );\r\n          reject (error);\r\n        },\r\n      });\r\n    });\r\n  }\r\n  /*fin administrador*/\r\n\r\n\r\n  /*Correo*/\r\n  enviarEmail(departamento: any){\r\n    this.emailService.getCorreoJefeDepto(departamento).subscribe(\r\n      (datos) => {\r\n        const nombreCompletoSolicitante = this.usuarioActivo.empleado.nombre + \" \"+\r\n          this.usuarioActivo.empleado.apellido;\r\n        const email: IEmail = {\r\n          asunto: 'Solicitud de vehículo pendiente de aprobación',\r\n          titulo: 'Solicitud de vehículo pendiente de aprobación',\r\n          email: datos.correo,\r\n          receptor: \"Estimad@ \"+datos.nombreCompleto+\".\",\r\n          mensaje: nombreCompletoSolicitante+\" ha realizado una solicitud de vehículo para una misión y esta a la espera de su aprobación.\",\r\n          centro: 'Por favor ingrese al sistema para ver más detalles',\r\n          abajo: 'Gracias por su atención a este importante mensaje.\\nFeliz día!',\r\n        }\r\n        this.emailService.notificarEmail(email);\r\n      },\r\n      (error) => {\r\n        console.error('Error al obtener el correo:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  enviarEmailAnulacion(id: any, obsevacion: any){\r\n    if (obsevacion ==  null){\r\n      obsevacion = 'SIN NINGUNA OBSERVACIÓN';\r\n    }\r\n    this.emailService.getSolicitante(id).subscribe(\r\n      (datos) => {\r\n        const nombreUserAccion = this.usuarioActivo.empleado.nombre + \" \"+\r\n          this.usuarioActivo.empleado.apellido;\r\n        const email: IEmail = {\r\n          asunto: 'Solicitud de vehículo ANULADA',\r\n          titulo: 'Solicitud de vehículo ANULADA',\r\n          email: datos.correo,\r\n          receptor: \"Estimad@ \"+datos.nombreCompleto+\".\",\r\n          mensaje: \"Su solicitud ha sido anulada por \"+nombreUserAccion+\". \"+obsevacion,\r\n          centro: 'Por favor ingrese al sistema para ver más detalles',\r\n          abajo: 'Gracias por su atención a este importante mensaje.\\nFeliz día!',\r\n        }\r\n        this.emailService.notificarEmail(email);\r\n      },\r\n      (error) => {\r\n        console.error('Error al obtener el correo:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  enviarEmailSecre(rol: any, titulo: string, mensaje: string){\r\n    this.emailService.getEmailNameRol(rol).subscribe(\r\n      (datos) => {\r\n        const email: IEmail = {\r\n          asunto: titulo,\r\n          titulo: titulo,\r\n          email: datos.correo,\r\n          receptor: \"Estimad@ \"+datos.nombreCompleto+\".\",\r\n          mensaje: mensaje,\r\n          centro: 'Por favor ingrese al sistema para ver más detalles',\r\n          abajo: 'Gracias por su atención a este importante mensaje.\\nFeliz día!',\r\n        }\r\n        this.emailService.notificarEmail(email);\r\n      },\r\n      (error) => {\r\n        console.error('Error al obtener el correo:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  /* fin correo */\r\n\r\n}\r\n","\r\n<!-- Modal -->\r\n\r\n<div class=\"modal-header\">\r\n  <h5 class=\"modal-title mt-0\">{{leyenda}} Solicitud de Vehículo</h5>\r\n  <div class=\"btn-alerta\" *ngIf=\"alerts && leyenda!='Detalle'\">\r\n    <i\r\n      class=\"mdi mdi-18px mdi-lightbulb-on-outline custom-cursor\"\r\n      ngbTooltip=\"Mostrar Ayuda\"\r\n      *ngIf=\"!siMuestraAlertas()\"\r\n      (click)=\"restaurarAlerts()\"\r\n    ></i>\r\n  </div>\r\n  <button type=\"button\" class=\"btn-close\" aria-hidden=\"true\" (click)=\"activeModal.dismiss('Cross click')\">\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <div *ngFor=\"let alert of alerts\">\r\n    <div\r\n      class=\"alert alert-{{ alert.type }} alert-dismissible fade show\"\r\n      role=\"alert\"\r\n      *ngIf=\"alert.show\"\r\n    >\r\n      <strong>{{\r\n        alert.type === \"info\" ? \"Importante!\" : \"Precaución!\"\r\n        }}</strong>\r\n      {{ alert.message }}\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn-close\"\r\n        (click)=\"CambiarAlert(alert)\"\r\n        aria-label=\"Close\"\r\n      ></button>\r\n    </div>\r\n  </div>\r\n  <form [formGroup]=\"formularioSoliVe\"\r\n        (ngSubmit)=\"guardar()\">\r\n    <div class=\"row\" *ngIf=\"leyenda === 'Nueva' && soliVeOd == null\">\r\n        <label for=\"misionInt\" class=\"alert-info form-control text-center\">Marque la casilla si la misión es internacional:\r\n          <input type=\"checkbox\"\r\n                 id=\"misionInt\"\r\n                 class=\"form-check-input\"\r\n                 formControlName=\"isChecked\" (change)=\"actualizarEstadoCheckbox()\"\r\n          />\r\n        </label>\r\n    </div>\r\n    <div class=\"row mb-4\">\r\n      <div class=\"col-md-5\">\r\n\r\n        <div class=\"row\">\r\n\r\n          <!--fecha de realizacion de solicitud-->\r\n          <div class=\"col-md-6\">\r\n            <label for=\"fecha-solicitud\">Fecha de solicitud: <span *ngIf=\"soliVeOd == null && leyenda === 'Nueva'\"\r\n                                                                  class=\"text-danger\">*</span></label>\r\n            <input type=\"date\" class=\"form-control\" id=\"fecha-solicitud\"\r\n                   formControlName=\"fechaSolicitud\"\r\n                   [class]=\"esCampoValido('fechaSolicitud')\"\r\n                   readonly/>\r\n            <div class=\"invalid-feedback\">\r\n              <span\r\n                *ngIf=\"formularioSoliVe.get('fechaSolicitud')?.errors?.['required']\">\r\n                Requiere una fecha de solicitud\r\n              </span>\r\n              <span\r\n                *ngIf=\"formularioSoliVe.get('fechaSolicitud')?.errors?.['pattern']\">\r\n                Fecha no valida\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <!--fin fecha de realizacion de solicitud-->\r\n\r\n          <!--fecha de salida de solicitud-->\r\n          <div class=\"col-md-6\">\r\n            <label for=\"fecha-mision\">Fecha de misión: <span *ngIf=\"soliVeOd == null && leyenda === 'Nueva'\"\r\n                                                             class=\"text-danger\">*</span></label>\r\n            <input type=\"date\" class=\"form-control\" id=\"fecha-mision\"\r\n                   formControlName=\"fechaSalida\"\r\n                   [class]=\"esCampoValido('fechaSalida')\"\r\n                   (change)=\"cargarPlacas(formularioSoliVe.get('tipoVehiculo').value,\r\n                   formularioSoliVe.get('fechaSalida').value)\"\r\n                   [readonly]=\"soliVeOd != null && leyenda === 'Detalle'\"/>\r\n            <div class=\"invalid-feedback\">\r\n              <span\r\n                *ngIf=\"formularioSoliVe.get('fechaSalida')?.errors?.['required']\">\r\n                Requiere una fecha de misión\r\n              </span>\r\n              <span\r\n                *ngIf=\"formularioSoliVe.get('fechaSalida')?.errors?.['pattern']\">\r\n                Fecha no valida\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <!--fin fecha de salida de solicitud-->\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"mt-2\">\r\n            <!--unidad que hace la solicitud-->\r\n            <div class=\"form-group\">\r\n              <label for=\"unidad-solicitante\">Unidad solicitante: <span *ngIf=\"soliVeOd == null && leyenda === 'Nueva'\"\r\n                                                                        class=\"text-danger\">*</span></label>\r\n              <input type=\"text\"\r\n                     class=\"form-control\"\r\n                     id=\"unidad-solicitante\"\r\n                     formControlName=\"unidadSolicitante\"\r\n                     [class]=\"esCampoValido('unidadSolicitante')\"\r\n                     readonly />\r\n              <div class=\"invalid-feedback\">\r\n              <span\r\n                *ngIf=\"formularioSoliVe.get('unidadSolicitante')?.errors?.['required']\">\r\n                Requiere una fecha de solicitud\r\n              </span>\r\n              </div>\r\n            </div>\r\n            <!--fin unidad que hace la solicitud-->\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <!--Lugar o institucion a visitar-->\r\n          <div class=\"mt-2\">\r\n            <label for=\"lugar-visitar\">Lugar que visitará: <span *ngIf=\"soliVeOd == null && leyenda === 'Nueva'\"\r\n                                                                 class=\"text-danger\">*</span></label>\r\n            <input type=\"text\" class=\"form-control\"\r\n                   id=\"lugar-visitar\"\r\n                   placeholder=\"Ingrese el lugar o insitución que visitará\"\r\n                   formControlName=\"lugarMision\"\r\n                   [class]=\"esCampoValido('lugarMision')\"\r\n                   [value]=\"soliVeOd != null ? soliVeOd.lugarMision: ''\"\r\n                   [readonly]=\"soliVeOd != null && leyenda === 'Detalle'\" />\r\n            <div class=\"invalid-feedback\">\r\n              <span\r\n                *ngIf=\"formularioSoliVe.get('lugarMision')?.errors?.['required']\">\r\n                Requiere el lugar o institucción que visitará\r\n              </span>\r\n              <span\r\n                *ngIf=\"formularioSoliVe.get('lugarMision')?.errors?.['minlength']\">\r\n                Digite más de 3 caracteres\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <!--fin lugar o institucion a visitar-->\r\n        </div>\r\n        <div class=\"row\" *ngIf=\"isChecked\">\r\n          <div class=\"mt-2\">\r\n            <label for=\"direccion\">Dirección: <span *ngIf=\"soliVeOd == null && leyenda === 'Nueva'\"\r\n                                                    class=\"text-danger\">*</span></label>\r\n            <textarea cols=\"30\" rows=\"2\"\r\n                      id=\"direccion\"\r\n                      class=\"form-control\"\r\n                      formControlName=\"direccion\"\r\n                      [readonly]=\"leyenda == 'Detalle' && soliVeOd != null\"\r\n                      [class]=\"esCampoValido('direccion')\"\r\n            ></textarea>\r\n            <div class=\"invalid-feedback\">\r\n                  <span\r\n                    *ngIf=\"formularioSoliVe.get('direccion')?.errors?.['required']\">\r\n                    Requiere el obejetivo de la misión\r\n                  </span>\r\n              <span\r\n                *ngIf=\"formularioSoliVe.get('direccion')?.errors?.['minlength']\">\r\n                    Digite más de 6 caracteres\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" *ngIf=\"!isChecked\">\r\n          <ng-container [ngSwitch]=\"leyenda\">\r\n            <div *ngSwitchCase=\"'Detalle'\" class=\"col-md-12\">\r\n              <!--direccon (solamente para mostrar en detalle de la solcitud)-->\r\n              <div class=\"mt-2\">\r\n                <label for=\"direccion\">Dirección:</label>\r\n                <textarea cols=\"30\" rows=\"2\"\r\n                          class=\"form-control\"\r\n                          formControlName=\"direccionD\"\r\n                          readonly></textarea>\r\n              </div>\r\n              <!--fin direccion-->\r\n            </div>\r\n            <div *ngSwitchCase=\"'Nueva'\" class=\"col-md-6\">\r\n              <!--Departamento-->\r\n              <div class=\"mt-2\">\r\n                <label for=\"detpto\">Departamento: <span *ngIf=\"soliVeOd == null && leyenda === 'Nueva'\"\r\n                                                        class=\"text-danger\">*</span></label>\r\n                <ng-select\r\n                  id=\"detpto\"\r\n                  formControlName=\"depto\"\r\n                  placeholder=\"Escriba o seleccione\"\r\n                  [selectOnTab]=\"true\"\r\n                  labelForId=\"depto\"\r\n                  [class]=\"esCampoValido('depto')\"\r\n                  (ngModelChange)=\"deptoChange($event)\"\r\n                  [notFoundText]=\"'Datos no econtrados'\"\r\n                >\r\n                  <ng-option *ngFor=\"let dpt of departamentos\" [value]=\"dpt.codigo\">\r\n                    {{dpt.na2}}\r\n                  </ng-option>\r\n                </ng-select>\r\n                <div class=\"invalid-feedback\">\r\n                  <span\r\n                    *ngIf=\"formularioSoliVe.get('depto')?.errors?.['required']\">\r\n                    Requiere seleccionar un departamento\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <!--fin departamento-->\r\n            </div>\r\n            <div *ngSwitchCase=\"'Nueva'\" class=\"col-md-6\">\r\n              <!--municipio-->\r\n              <div class=\"mt-2\">\r\n                <label for=\"municipio\">Municipio: <span *ngIf=\"soliVeOd == null && leyenda === 'Nueva'\"\r\n                                                        class=\"text-danger\">*</span></label>\r\n                <ng-select\r\n                  id=\"municipio\"\r\n                  formControlName=\"municipio\"\r\n                  placeholder=\"Escriba o seleccione\"\r\n                  [selectOnTab]=\"true\"\r\n                  labelForId=\"municipio\"\r\n                  [class]=\"esCampoValido('municipio')\"\r\n                  (ngModelChange)=\"distChange($event)\"\r\n                >\r\n                  <ng-option *ngFor=\"let muni of municipios\" [value]=\"muni.codigo\">\r\n                    {{muni.nam}}\r\n                  </ng-option>\r\n                </ng-select>\r\n                <div class=\"invalid-feedback\">\r\n                  <span\r\n                    *ngIf=\"formularioSoliVe.get('municipio')?.errors?.['required']\">\r\n                    Requiere seleccionar un municipio\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <!-- fin municipio -->\r\n            </div>\r\n            <div *ngSwitchDefault>\r\n              <!-- Contenido predeterminado -->\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <!--canton-->\r\n            <div class=\"col-md-6\" *ngIf=\"leyenda == 'Nueva' &&\r\n                  soliVeOd == null && !isChecked\">\r\n              <div class=\"mt-2\">\r\n                <label for=\"canton\">Cantón: <span *ngIf=\"soliVeOd == null && leyenda === 'Nueva'\"\r\n                                                  class=\"text-danger\">*</span></label>\r\n\r\n                <ng-select\r\n                  id=\"canton\"\r\n                  formControlName=\"canton\"\r\n                  placeholder=\"Escriba o seleccione\"\r\n                  [selectOnTab]=\"true\"\r\n                  labelForId=\"canton\"\r\n                  [class]=\"esCampoValido('canton')\"\r\n                >\r\n                  <ng-option *ngFor=\"let cton of cantones\" [value]=\"cton.codigo\">\r\n                    {{cton.nam}}\r\n                  </ng-option>\r\n                </ng-select>\r\n                <div class=\"invalid-feedback\">\r\n                  <span\r\n                    *ngIf=\"formularioSoliVe.get('canton')?.errors?.['required']\">\r\n                    Requiere seleccionar un cantón\r\n                  </span>\r\n                </div>\r\n              </div>\r\n          </div>\r\n          <!-- fin canton -->\r\n\r\n          <!-- hora de salida -->\r\n          <div class=\"col-md-6\">\r\n            <div class=\"mt-2\">\r\n              <label for=\"hora-salida\">Hora de salida: <span *ngIf=\"soliVeOd == null && leyenda === 'Nueva'\"\r\n                                                             class=\"text-danger\">*</span></label>\r\n              <input type=\"time\" id=\"hora-salida\"\r\n                     class=\"form-control\" formControlName=\"horaSalida\"\r\n                     [class]=\"esCampoValido('horaSalida')\"\r\n                     [readonly]=\"leyenda == 'Detalle' && soliVeOd != null\"/>\r\n              <div class=\"invalid-feedback\">\r\n                  <span\r\n                    *ngIf=\"formularioSoliVe.get('horaSalida')?.errors?.['required']\">\r\n                    Requiere la hora de salida\r\n                  </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- fin hora de salida -->\r\n        </div>\r\n        <div class=\"row\"*ngIf=\"leyenda == 'Detalle' && soliVeOd.motorista != null\">\r\n          <div class=\"mt-2\">\r\n            <div class=\"form-group\">\r\n              <label for=\"motoristaid\">Motorista:</label>\r\n              <input type=\"text\"\r\n                     class=\"form-control\"\r\n                     id=\"motoristaid\"\r\n                     formControlName=\"motorista\"\r\n                     readonly />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" *ngIf=\"leyenda != 'Nueva'\">\r\n          <div class=\"mt-2\">\r\n            <div class=\"form-group\">\r\n              <label for=\"observa-id\">Observaciones:</label>\r\n              <textarea cols=\"30\" rows=\"2\" class=\"form-control\"\r\n                        id=\"observa-id\"\r\n                        [placeholder]=\"(leyenda === 'Detalle' && soliVeOd.observaciones === '') ? '' : 'Ingrese observaciones'\"\r\n                        formControlName=\"observaciones\"\r\n                        [class]=\"esCampoValido('observaciones')\"\r\n                        [readonly] = \"(leyenda == 'Detalle' &&\r\n                        (usuarioActivo.role != 'JEFE_DEPTO' && usuarioActivo.role == 'JEFE_FINANACIERO')) ||\r\n                        leyenda == 'Detalle' && vista == 'mis-solicitudes'\">\r\n              </textarea>\r\n              <div class=\"invalid-feedback\">\r\n                <span\r\n                  *ngIf=\"formularioSoliVe.get('observaciones')?.errors?.['required']\">\r\n                  Requiere una observación\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"row\">\r\n          <!-- fecha de regreso -->\r\n          <div class=\"col-md-12\">\r\n            <label for=\"fecha-regreso\">Fecha de regreso: <span *ngIf=\"soliVeOd == null && leyenda === 'Nueva'\"\r\n                                                               class=\"text-danger\">*</span></label>\r\n            <input type=\"date\" class=\"form-control\" id=\"fecha-regreso\"\r\n                   formControlName=\"fechaEntrada\"\r\n                   [class]=\"esCampoValido('fechaEntrada')\"\r\n                   (change)=\"cargarPlacas(formularioSoliVe.get('tipoVehiculo').value,\r\n                   formularioSoliVe.get('fechaSalida').value)\"\r\n                   [readOnly]=\"leyenda == 'Detalle' && soliVeOd != null\"/>\r\n            <div class=\"invalid-feedback\">\r\n              <span\r\n                *ngIf=\"formularioSoliVe.get('fechaEntrada')?.errors?.['required']\">\r\n                Requiere una fecha de regreso\r\n              </span>\r\n              <span\r\n                *ngIf=\"formularioSoliVe.get('fechaEntrada')?.errors?.['pattern']\">\r\n                Fecha no valida\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <!-- fin fecha de regreso -->\r\n        </div>\r\n        <div class=\"row\">\r\n          <!-- tipo de vehiculo -->\r\n          <div class=\"col-md-12\">\r\n            <div class=\"mt-2 ngselect-ve\" >\r\n              <label for=\"tipo-vehiculo\">Tipo de vehículo: <span *ngIf=\"soliVeOd == null && leyenda === 'Nueva'\"\r\n                                                                 class=\"text-danger\">*</span></label>\r\n\r\n              <ng-select *ngIf=\"leyenda == 'Nueva' && soliVeOd == null\"\r\n                formControlName=\"tipoVehiculo\"\r\n                placeholder=\"Escriba o seleccione\"\r\n                [selectOnTab]=\"true\"\r\n                labelForId=\"tipoVehiculo\"\r\n                 [class]=\"esCampoValido('tipoVehiculo')\"\r\n                (change)=\"cargarPlacas(formularioSoliVe.get('tipoVehiculo').value,\r\n                formularioSoliVe.get('fechaSalida').value)\"\r\n              >\r\n                <ng-option\r\n                  *ngFor=\"let car of listVehiculos\"\r\n                  [value]=\"car\"\r\n                >{{ car }}</ng-option\r\n                >\r\n              </ng-select>\r\n              <div class=\"invalid-feedback\">\r\n                  <span\r\n                    *ngIf=\"formularioSoliVe.get('tipoVehiculo')?.errors?.['required']\">\r\n                    Requiere seleccionar un tipo de vehículo\r\n                  </span>\r\n              </div>\r\n              <input *ngIf=\"leyenda == 'Detalle' && soliVeOd != null\" type=\"text\" class=\"form-control\"\r\n                     id=\"tipo-vehiculo\"\r\n                     formControlName=\"tipoVehiculo\"\r\n                     [value]=\"soliVeOd != null ? soliVeOd.vehiculo.clase: ''\"\r\n                     readonly>\r\n            </div>\r\n          </div>\r\n          <!-- fin tipo de vehiculo -->\r\n        </div>\r\n        <div class=\"row\">\r\n          <!-- placa -->\r\n          <div class=\"col-md-12\">\r\n            <div class=\"mt-2\">\r\n              <label for=\"vehiculo\">Placa: <span *ngIf=\"soliVeOd == null && leyenda === 'Nueva'\"\r\n                                                 class=\"text-danger\">*</span></label>\r\n\r\n              <ng-template #selectTemplate>\r\n                <ng-select *ngIf=\"leyenda == 'Nueva' && soliVeOd == null\"\r\n                           formControlName=\"vehiculo\"\r\n                           placeholder=\"Escriba o seleccione\"\r\n                           [selectOnTab]=\"true\"\r\n                           labelForId=\"vehiculo\"\r\n                           [class]=\"esCampoValido('vehiculo')\"\r\n                >\r\n                  <ng-option *ngFor=\"let vehiculo of placas\"\r\n                             [value]=\"vehiculo.codigoVehiculo\">{{vehiculo.placa}}</ng-option>\r\n                </ng-select>\r\n                <div class=\"invalid-feedback\">\r\n                  <span\r\n                    *ngIf=\"formularioSoliVe.get('vehiculo')?.errors?.['required']\">\r\n                    Requiere seleccionar un vehículo\r\n                  </span>\r\n                </div>\r\n              </ng-template>\r\n\r\n              <!-- fin placa -->\r\n\r\n              <ng-template #inputTemplate>\r\n                <!-- input placa para detalle -->\r\n                <input *ngIf=\"leyenda == 'Detalle' && soliVeOd != null\" type=\"text\" class=\"form-control\"\r\n                       id=\"vehiculo\"\r\n                       formControlName=\"vehiculo\"\r\n                       [value]=\"soliVeOd != null ? soliVeOd.vehiculo.placa: ''\"\r\n                       readonly>\r\n              </ng-template>\r\n\r\n              <!-- fin input placa -->\r\n\r\n              <div [ngTemplateOutlet]=\"leyenda == 'Nueva' ? selectTemplate : inputTemplate\"></div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" *ngIf=\"leyenda == 'Nueva' && soliVeOd == null && !isChecked\">\r\n          <!-- distrito -->\r\n          <div class=\"col-md-12\">\r\n            <div class=\"mt-2\">\r\n              <label for=\"distrito\">Distrito: <span *ngIf=\"soliVeOd == null && leyenda === 'Nueva'\"\r\n                                                    class=\"text-danger\">*</span></label>\r\n              <ng-select\r\n                id=\"distrito\"\r\n                formControlName=\"distrito\"\r\n                placeholder=\"Escriba o seleccione\"\r\n                [selectOnTab]=\"true\"\r\n                labelForId=\"distrito\"\r\n                [class]=\"esCampoValido('distrito')\"\r\n                (ngModelChange)=\"muniChange($event)\"\r\n              >\r\n                <ng-option *ngFor=\"let dist of distritos\" [value]=\"dist.codigo\">\r\n                  {{dist.nam}}\r\n                </ng-option>\r\n              </ng-select>\r\n              <div class=\"invalid-feedback\">\r\n                  <span\r\n                    *ngIf=\"formularioSoliVe.get('distrito')?.errors?.['required']\">\r\n                    Requiere seleccionar un distrito\r\n                  </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- fin distrito -->\r\n        </div>\r\n        <div class=\"row\">\r\n          <!-- hora de regreso -->\r\n          <div class=\"col-md-12\">\r\n            <div class=\"mt-2\">\r\n              <label for=\"hora-regreso\">Hora de regreso: <span *ngIf=\"soliVeOd == null && leyenda === 'Nueva'\"\r\n                                                               class=\"text-danger\">*</span></label>\r\n              <input type=\"time\" id=\"hora-regreso\"\r\n                     class=\"form-control\" formControlName=\"horaEntrada\"\r\n                     [class]=\"esCampoValido('horaEntrada')\"\r\n                     [readOnly]=\"leyenda == 'Detalle' && soliVeOd != null\"/>\r\n              <div class=\"invalid-feedback\">\r\n                  <span\r\n                    *ngIf=\"formularioSoliVe.get('horaEntrada')?.errors?.['required']\">\r\n                    Requiere la hora de regreso\r\n                  </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- fin hora de regreso -->\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"row\">\r\n          <!-- objetivo de la mision -->\r\n          <div class=\"col-md-12\">\r\n            <label for=\"objetivo-mision\">Objetivo de la misión: <span *ngIf=\"soliVeOd == null && leyenda === 'Nueva'\"\r\n                                                                      class=\"text-danger\">*</span></label>\r\n            <textarea id=\"objetivo-mision\"\r\n                      cols=\"30\"\r\n                      rows=\"3\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Ingrese el objetivo de la misión\"\r\n                      formControlName=\"objetivoMision\"\r\n                      [class]=\"esCampoValido('objetivoMision')\"\r\n                      [readonly]=\"leyenda == 'Detalle' && soliVeOd != null\">\r\n            </textarea>\r\n            <div class=\"invalid-feedback\">\r\n                  <span\r\n                    *ngIf=\"formularioSoliVe.get('objetivoMision')?.errors?.['required']\">\r\n                    Requiere el obejetivo de la misión\r\n                  </span>\r\n              <span\r\n                *ngIf=\"formularioSoliVe.get('objetivoMision')?.errors?.['minlength']\">\r\n                    Digite más de 6 caracteres\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <!-- fin objetivo de la mision -->\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"mt-2\">\r\n            <!-- cantidad de personas que viajaran -->\r\n            <label for=\"cantidad-pasajeros\">No. de personas que viajarán: <span *ngIf=\"soliVeOd == null && leyenda === 'Nueva'\"\r\n                                                                                class=\"text-danger\">*</span></label>\r\n            <div class=\"col-md-3\">\r\n\r\n              <input type=\"number\" id=\"cantidad-pasajeros\"\r\n                     [value]=\"formularioSoliVe.get('cantidadPersonas').value\"\r\n                     class=\"form-control\"\r\n                     formControlName=\"cantidadPersonas\" min=\"1\"\r\n                     [class]=\"esCampoValido('cantidadPersonas')\"\r\n                     [readonly]=\"leyenda == 'Detalle' && soliVeOd != null\"\r\n                     (change)=\"actualizarFilas()\" (input)=\"actualizarFilas()\"/>\r\n              <div class=\"invalid-feedback\">\r\n                  <span\r\n                    *ngIf=\"formularioSoliVe.get('cantidadPersonas')?.errors?.['required']\">\r\n                    Requiere la cantidad de pasajeros en la misión\r\n                  </span>\r\n                <span\r\n                  *ngIf=\"formularioSoliVe.get('cantidadPersonas')?.errors?.['min']\">\r\n                    La cantidad de personas debe ser al menos 1\r\n                  </span>\r\n                <span\r\n                  *ngIf=\"formularioSoliVe.get('cantidadPersonas')?.errors?.['pattern']\">\r\n                    Solamente se permiten números enteros\r\n                  </span>\r\n              </div>\r\n            </div>\r\n            <!-- fin cantidad de personas que viajaran -->\r\n          </div>\r\n        </div>\r\n        <!-- input solicitante (para el detalle) -->\r\n        <div class=\"row\" *ngIf=\"leyenda == 'Detalle' && soliVeOd != null\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"mt-2\">\r\n                <label for=\"solicitante\">Responsable:</label>\r\n                <input type=\"text\" id=\"solicitante\"\r\n                          class=\"form-control\"\r\n                          formControlName=\"solicitante\"\r\n                          readonly>\r\n              </div>\r\n            </div>\r\n        </div>\r\n        <!-- fin solicitante -->\r\n\r\n       <!-- tabla de personas -->\r\n       <div class=\"row\" *ngIf=\"cantidadPersonas >= 2 || leyenda=='Detalle' &&\r\n       soliVeOd != null && soliVeOd.cantidadPersonas >= 2\">\r\n        <div class=\"mt-2\">\r\n          <div *ngIf=\"mostrarTabla; else archivoAdjunto\">\r\n            <label for=\"tablaPasajeros\">Ingrese los nombres de los pasajeros: <span *ngIf=\"soliVeOd == null && leyenda === 'Nueva'\"\r\n                                                                                   class=\"text-danger\">*</span></label>\r\n            <table class=\"table excel-table table-responsive\" id=\"tablaPasajeros\"\r\n            *ngIf=\"leyenda==='Detalle' && soliVeOd != null\">\r\n              <thead>\r\n              <tr>\r\n                <th>No</th>\r\n                <th>Nombre</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr *ngFor=\"let pasajero of pasajeros; let i = index\">\r\n                <td>{{ i + 1}}</td>\r\n                <td>\r\n                  <input type=\"text\" style=\"width: 100%\"\r\n                         [formControl]=\"pasajeroFormControls[i]\"\r\n                         [readonly]=\"soliVeOd != null && leyenda === 'Detalle'\">\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n            <table class=\"table excel-table table-responsive\" id=\"tablaPasajerosDetalle\"\r\n            *ngIf=\"leyenda !== 'Detalle' || soliVeOd === null\">\r\n              <thead>\r\n              <tr>\r\n                <th>No</th>\r\n                <th>Nombre</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr *ngFor=\"let control of pasajeroFormControls; let i = index\">\r\n                <td>{{ i + 1 }}</td>\r\n                <td>\r\n                  <input type=\"text\" style=\"width: 100%\" [formControl]=\"control\"\r\n                         [readonly]=\"soliVeOd != null && leyenda === 'Detalle'\">\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n          </div>\r\n\r\n          <ng-template #archivoAdjunto>\r\n            <div *ngIf=\"mostrarArchivoAdjunto && leyenda === 'Nueva'\" class=\"alert alert-warning\">\r\n              Por favor, adjunta la lista de pasajeros: <span *ngIf=\"soliVeOd == null && leyenda === 'Nueva'\"\r\n                                                              class=\"text-danger\">*</span>\r\n              <input type=\"file\"\r\n              id=\"file\" accept=\".pdf\"\r\n              (change)=\"cambioDeArchivo($event)\"\r\n              formControlName=\"file\" />\r\n            </div>\r\n          </ng-template>\r\n\r\n            <div *ngIf=\"btnVerPdf\" class=\"alert alert-warning\">\r\n              Lista de pasajeros\r\n              <div>\r\n                <button class=\"btn btn-primary\" type=\"button\"\r\n                (click)=\"descargaPdf()\">\r\n                  Descargar pdf\r\n                </button>\r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <!-- fin de personas -->\r\n\r\n      </div>\r\n    </div>\r\n    <div class=\"d-flex justify-content-end mt-4\">\r\n<!--      botones administrador-->\r\n      <div *ngIf=\"usuarioActivo.role == 'ADMIN'\">\r\n\r\n        <button type=\"button\" class=\"btn btn-primary w-sm me-2\" id=\"btn-detalle-save-admin\" name=\"btn-save\"\r\n                (click)=\"aprobarSolicitudAdministrador()\">\r\n          Aprobar\r\n        </button>\r\n\r\n        <button type=\"button\" class=\"btn btn-warning w-sm me-2\" id=\"btn-detalle-anu\" name=\"btn-save\"\r\n                (click)=\"anularSolicitud()\">\r\n          Anular\r\n        </button>\r\n\r\n      </div>\r\n<!--      fin de botones administrador-->\r\n      <button type=\"submit\" class=\"btn btn-primary w-sm me-2\" id=\"btn-save\" name=\"btn-save\"\r\n              *ngIf=\"leyenda == 'Nueva'\">\r\n        Enviar\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-primary w-sm me-2\" id=\"btn-detalle-save\" name=\"btn-save\"\r\n              (click)=\"aprobarSolicitud()\"\r\n              *ngIf=\"(usuarioActivo.role == 'JEFE_DEPTO' ||\r\n              usuarioActivo.role == 'JEFE_FINANACIERO' ||\r\n              usuarioActivo.role == 'DECANO') && vista === 'listado'\">\r\n        Aprobar\r\n      </button>\r\n\r\n      <button type=\"button\" class=\"btn btn-warning w-sm me-2\" id=\"btn-detalle-ave\" name=\"btn-save\"\r\n              (click)=\"anularSolicitud()\"\r\n              *ngIf=\"(usuarioActivo.role == 'DECANO' || usuarioActivo.role == 'JEFE_DEPTO' ||\r\n              usuarioActivo.role == 'JEFE_FINANACIERO') && vista === 'listado'\">\r\n        Anular\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-dark w-sm\" id=\"btn-cancel\" name=\"btn-cancel\"\r\n              aria-hidden=\"true\" (click)=\"activeModal.close('Close click')\">Cancelar</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n<!-- Modal -->\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {IEmail, ILogSoliVe, ISolicitudVehiculo} from \"../../interfaces/data.interface\";\r\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {ModalComponent} from \"../modal/modal.component\";\r\nimport { ModalSecretariaComponent } from '../modal-secretaria/modal-secretaria.component';\r\nimport {MensajesService} from \"../../../../shared/global/mensajes.service\";\r\nimport {SolicitudVehiculoService} from \"../../services/solicitud-vehiculo.service\";\r\nimport Swal from \"sweetalert2\";\r\nimport {Usuario} from \"../../../../account/auth/models/usuario.models\";\r\nimport {ISolicitudvalep} from \"../../../solicitud-vale-paginacion/interface/solicitudvalep.interface\";\r\nimport {ModalLogComponent} from \"../modal-log/modal-log.component\";\r\nimport {EmailService} from \"../../services/email.service\";\r\n\r\n@Component({\r\n  selector: 'app-tabla',\r\n  templateUrl: './tabla.component.html',\r\n  styleUrls: ['./tabla.component.scss']\r\n})\r\nexport class TablaComponent implements OnInit {\r\n  @Input() solicitudesVehiculo!: ISolicitudVehiculo[];\r\n  @Input() opc!: string;\r\n  @Input() term!: any; // para buscar\r\n  @Input() vista!: string;\r\n  @Input() userAcivo!: Usuario;\r\n  p: any; // paginacion\r\n  selectedData: any; // Almacena los datos del registro seleccionado\r\n  solicitudVale!: ISolicitudvalep;\r\n  logSoli: ILogSoliVe[];\r\n  constructor(private modalService: NgbModal,\r\n              private mensajesService: MensajesService,\r\n              private soliService: SolicitudVehiculoService,\r\n              private emailService: EmailService) {\r\n    this.solicitudVale = {\r\n      idSolicitudVale: '',\r\n      cantidadVale: 0,\r\n      estadoEntrada: 1,\r\n      estado: 8,\r\n      solicitudVehiculo: '' // Otra inicialización si es necesario\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  abrirModal(leyenda: string, data: any) {\r\n    if (this.userAcivo.role == 'DECANO' && data.estado == 3 && this.vista == 'listado'){\r\n      this.abrirModalSecre(leyenda, data)\r\n    } else if (this.userAcivo.role == 'SECR_DECANATO' && (data.estado == 2 || data.estado == 6) && this.vista == 'listado'){\r\n      this.abrirModalSecre(leyenda, data);\r\n    }else {\r\n      this.selectedData = data; // Almacena los datos del registro seleccionado\r\n      const modalRef = this.modalService.open(ModalComponent, {size: 'xl', backdrop: 'static'});\r\n      modalRef.componentInstance.leyenda = leyenda; // Pasa la leyenda al componente modal\r\n      modalRef.componentInstance.soliVeOd = data;\r\n      modalRef.componentInstance.vista = this.vista;\r\n      modalRef.componentInstance.usuarioActivo = this.userAcivo;\r\n    }\r\n  }\r\n\r\n  abrirModalParaAdmin(leyenda: string, data: any) {\r\n    if (this.userAcivo.role == 'ADMIN' && data.estado == 1 && this.vista == 'listar'){\r\n      this.selectedData = data; // Almacena los datos del registro seleccionado\r\n      const modalRef = this.modalService.open(ModalComponent, {size: 'xl', backdrop: 'static'});\r\n      modalRef.componentInstance.leyenda = leyenda; // Pasa la leyenda al componente modal\r\n      modalRef.componentInstance.soliVeOd = data;\r\n      modalRef.componentInstance.vista = this.vista;\r\n      modalRef.componentInstance.usuarioActivo = this.userAcivo;\r\n    }else if (this.userAcivo.role == 'ADMIN' && data.estado != 1) {\r\n      this.abrirModalSecre(leyenda, data);\r\n    }\r\n  }\r\n\r\n  abrirModalSecre(leyenda: string, data: any) {\r\n    const modalRef = this.modalService.open(ModalSecretariaComponent, {size:'xl', backdrop: 'static'});\r\n    modalRef.componentInstance.leyenda = leyenda;\r\n    modalRef.componentInstance.soliVeOd = data;\r\n    modalRef.componentInstance.usuarioActivo = this.userAcivo;\r\n  }\r\n\r\n  abrirModalLog(data: any) {\r\n    this.obtenerLog(data.codigoSolicitudVehiculo).then(() => {\r\n      const modalRef = this.modalService.open(ModalLogComponent, { size: 'xl', backdrop: 'static' });\r\n      modalRef.componentInstance.log = this.logSoli;\r\n    });\r\n  }\r\n\r\n  obtenerLog(codigoSoliVe: string): Promise<void> {\r\n    return this.soliService.getLogSoli(codigoSoliVe)\r\n      .then((log: ILogSoliVe[]) => {\r\n        this.logSoli = log;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error al obtener el log de la solicitud', error);\r\n      });\r\n  }\r\n\r\n\r\n  async aprobarSolicitud(data: any){\r\n    if ((await this.mensajesService.mensajeAprobar()) == true) {\r\n      //await this.actualizarSolicitud(data);\r\n      if (this.userAcivo.role==\"JEFE_DEPTO\"){\r\n        await this.actualizarSolicitud(data);\r\n      }else{\r\n        await this.actualizarSolicitudDec(data);\r\n      }\r\n    }\r\n  }\r\n\r\n  async revisionSolicitud(data: any) {\r\n    if (await this.mensajesService.mensajeRevision() == true){\r\n      data.estado = 6;\r\n      await this.actualizarSolicitud(data);\r\n    }\r\n\r\n  }\r\n\r\n  async anularSolicitud(data: any) {\r\n    if (await this.mensajesService.mensajeAnular() == true){\r\n      data.estado = 15;\r\n      await this.actualizarSolicitud(data);\r\n    }\r\n\r\n  }\r\n\r\n  actualizarSolicitud(data: any):Promise <void>{\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.soliService.updateSolciitudVehiculo(data).subscribe({\r\n        next: () => {\r\n          //resp: any\r\n          if (this.userAcivo.role == 'ADMIN'){\r\n            this.soliService.getSolicitudesVehiculo(1);\r\n          }else {\r\n            this.soliService.getSolicitudesRol(this.userAcivo.role);\r\n          }\r\n          this.enviarEmailAprob('SECR_DECANATO', 'Nueva solicitud de vehículo pendiente',\r\n            'Tiene una nueva solicitud de vehículo pendiente de asignar motorista o verificación de la información.');\r\n          this.mensajesService.mensajesToast(\"success\", \"Solicitud aprobada con éxito\");\r\n          resolve();\r\n        },\r\n        error: (error) => {\r\n          Swal.close();\r\n          this.mensajesService.mensajesSweet(\r\n            'error',\r\n            'Ups... Algo salió mal',\r\n            error.error.message\r\n          );\r\n          reject (error);\r\n        },\r\n      });\r\n    });\r\n  }\r\n\r\n  actualizarSolicitudDec(data: any):Promise <void>{\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.soliService.updateSolciitudVehiculo(data).subscribe({\r\n        next: () => {\r\n          // resp: any\r\n          this.solicitudVale.cantidadVale =0 ;\r\n          this.solicitudVale.estadoEntrada = 1;\r\n          this.solicitudVale.estado = 8;\r\n          this.solicitudVale.solicitudVehiculo = data.codigoSolicitudVehiculo;\r\n\r\n\r\n          this.soliService.registrarSolicitudVale(this.solicitudVale).subscribe({\r\n            next: () => {\r\n              // valeResp: any\r\n              if (this.userAcivo.role == 'ADMIN'){\r\n                this.soliService.getSolicitudesVehiculo(3);\r\n              }else {\r\n                this.soliService.getSolicitudesRol(this.userAcivo.role);\r\n              }\r\n              this.enviarEmailAprob('SECR_DECANATO', 'Nueva solicitud de vehículo pendiente',\r\n                'Tiene una nueva solicitud de vehículo pendiente de asignar motorista o verificación de la información.');\r\n              this.mensajesService.mensajesToast(\"success\", \"Solicitud aprobada con éxito\");\r\n              resolve();\r\n            },\r\n            error: (errorSoli) => {\r\n              Swal.close();\r\n              this.mensajesService.mensajesSweet(\r\n                'error',\r\n                'Ups... Algo salió mal al aprobar la solicitud',\r\n                errorSoli.error.message\r\n              );\r\n              reject (errorSoli);\r\n            },\r\n          })\r\n        },\r\n        error: (error) => {\r\n          Swal.close();\r\n          this.mensajesService.mensajesSweet(\r\n            'error',\r\n            'Ups... Algo salió mal',\r\n            error.error.message\r\n          );\r\n          reject (error);\r\n        },\r\n      });\r\n    });\r\n  }\r\n\r\n  calcularNumeroCorrelativo(index: number): number {\r\n    if (typeof this.p === 'number') {\r\n      return (this.p - 1) * 10 + index + 1;\r\n    } else {\r\n      return index + 1; // Si no es numérico, solo regresamos el índice + 1\r\n    }\r\n  }\r\n\r\n  /* Metodos del administrador */\r\n\r\n  async aprobarSolicitudAdmin(data: any){\r\n    if ((await this.mensajesService.mensajeAprobar()) == true) {\r\n      //await this.actualizarSolicitud(data);\r\n      if (data.estado == 1){\r\n        await this.actualizarSolicitud(data);\r\n      }else if(data.estado == 3){\r\n        await this.actualizarSolicitudDec(data);\r\n      }\r\n    }\r\n  }\r\n\r\n  /* correo */\r\n\r\n  enviarEmailAprob(rol: any, titulo: string, mensaje: string){\r\n    this.emailService.getEmailNameRol(rol).subscribe(\r\n      (datos) => {\r\n        const email: IEmail = {\r\n          asunto: titulo,\r\n          titulo: titulo,\r\n          email: datos.correo,\r\n          receptor: \"Estimad@ \"+datos.nombreCompleto+\".\",\r\n          mensaje: mensaje,\r\n          centro: 'Por favor ingrese al sistema para ver más detalles tabla',\r\n          abajo: 'Gracias por su atención a este importante mensaje.\\nFeliz día!',\r\n        }\r\n        this.emailService.notificarEmail(email);\r\n      },\r\n      (error) => {\r\n        console.error('Error al obtener el correo:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  /* fin correo */\r\n}\r\n","<div class=\"table-responsive mb-0\">\r\n  <table class=\"table table-centered table-nowrap\">\r\n    <thead class=\"table-light\">\r\n    <tr>\r\n      <th class=\"align-middle\">No.</th>\r\n      <th class=\"align-middle\">Departamento</th>\r\n      <th class=\"align-middle\">Lugar</th>\r\n      <th class=\"align-middle\">Fecha uso</th>\r\n      <th class=\"align-middle\" style=\"text-align: center\">Personas</th>\r\n      <th class=\"align-middle\" style=\"text-align: center\">Estado</th>\r\n      <th class=\"align-middle\"\r\n          style=\"text-align: center;\">\r\n        Acciones\r\n      </th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <ng-container *ngIf=\"solicitudesVehiculo.length > 0; else noDataTemplate\">\r\n      <!-- *ngFor=\"let data of cards | filter:queryString | paginate: { itemsPerPage: 10, currentPage: p }\" -->\r\n      <tr *ngFor=\"let data of solicitudesVehiculo | filter:term | paginate: { itemsPerPage: 5, currentPage: p };\r\n                            let i = index\">\r\n        <td>{{calcularNumeroCorrelativo(i)}}</td>\r\n        <td>{{data.solicitante.empleado.departamento.nombre}}</td>\r\n        <td>{{data.lugarMision}}</td>\r\n        <td>{{data.fechaSalida | date : \"dd/MM/yyyy\"}}</td>\r\n        <td style=\"text-align: center\">{{data.cantidadPersonas}}</td>\r\n        <td style=\"text-align: center\">\r\n          <h5><span class=\"{{data.estado === 1 ? 'badge rounded-pill bg-warning'\r\n          : data.estado === 2 ? 'badge rounded-pill bg-info'\r\n          : data.estado === 3 ? 'badge rounded-pill bg-esdec'\r\n          : data.estado === 4 ? 'badge rounded-pill bg-success'\r\n          : data.estado === 5 ? 'badge rounded-pill bg-purple'\r\n          : data.estado === 6 ? 'badge rounded-pill bg-revision'\r\n          : data.estado === 7 ? 'badge rounded-pill bg-prima'\r\n          : data.estado === 15 ? 'badge rounded-pill bg-danger': ''}}\">\r\n            {{data.estadoString}}\r\n          </span></h5>\r\n        </td>\r\n        <td style=\"text-align: center\">\r\n\r\n          <!--          botones de administrador-->\r\n          <div *ngIf=\"userAcivo.role == 'ADMIN'\">\r\n\r\n            <button type=\"button\"\r\n                    *ngIf=\"userAcivo.role == 'ADMIN' && vista == 'mis-solicitudes' \"\r\n                    class=\"btn btn-primary btn-sm btn-rounded boton-cuadrado mx-1\"\r\n                    (click)=\"abrirModal('Detalle', data)\"\r\n                    ngbTooltip=\"Más información\">\r\n              <i class=\"mdi mdi-18px mdi-eye-outline\"></i></button>\r\n\r\n            <button type=\"button\"\r\n                    *ngIf=\"userAcivo.role == 'ADMIN' && vista == 'listar' \"\r\n                    class=\"btn btn-primary btn-sm btn-rounded boton-cuadrado mx-1\"\r\n                    (click)=\"abrirModalParaAdmin('Detalle', data)\"\r\n                    ngbTooltip=\"Más información\">\r\n              <i class=\"mdi mdi-18px mdi-eye-outline\"></i></button>\r\n\r\n            <button type=\"button\"\r\n                    *ngIf=\"data.estado == 1 || data.estado == 3\"\r\n                    class=\"btn btn-success btn-sm btn-rounded boton-cuadrado mx-1\"\r\n                    (click)=\"aprobarSolicitudAdmin(data)\"\r\n                    ngbTooltip=\"Aprobar\">\r\n              <i class=\"mdi mdi-18px mdi-check-outline\"></i></button>\r\n\r\n            <button type=\"button\"\r\n                    *ngIf=\"userAcivo.role == 'ADMIN' &&\r\n                    (solicitudesVehiculo.length>0 && solicitudesVehiculo[0].estado == 2 ||\r\n                        solicitudesVehiculo.length>0 && solicitudesVehiculo[0].estado == 6) && vista == 'listar'\"\r\n                    class=\"btn btn-info btn-sm btn-rounded boton-cuadrado mx-1\"\r\n                    (click)=\"abrirModalSecre('Edicion', data)\"\r\n                    ngbTooltip=\"Asignar\">\r\n              <i class=\"mdi mdi-18px mdi-book-edit-outline\"></i></button>\r\n\r\n            <button type=\"button\"\r\n                    class=\"btn btn-dark btn-sm btn-rounded boton-cuadrado mx-1\"\r\n                    (click)=\"abrirModalLog(data)\"\r\n                    ngbTooltip=\"Movimientos\">\r\n              <i class=\"mdi mdi-18px mdi-clock-check-outline\"></i></button>\r\n\r\n          </div>\r\n          <!--          fin de botones del admin-->\r\n\r\n          <button type=\"button\"\r\n                  *ngIf=\"userAcivo.role != 'ADMIN'\"\r\n                  class=\"btn btn-primary btn-sm btn-rounded boton-cuadrado mx-1\"\r\n                  (click)=\"abrirModal('Detalle', data)\"\r\n                  ngbTooltip=\"Más información\">\r\n            <i class=\"mdi mdi-18px mdi-eye-outline\"></i></button>\r\n          <!--<button type=\"button\"\r\n                  *ngIf= \"(userAcivo.role == 'DECANO' || userAcivo.role == 'SECR_DECANATO') &&\r\n                   vista == 'listado'\"\r\n                  class=\"btn btn-primary btn-sm btn-rounded boton-cuadrado mx-1\"\r\n                  (click)=\"abrirModalSecre('Detalle', data)\"\r\n                  ngbTooltip=\"Más información\">\r\n            <i class=\"mdi mdi-18px mdi-eye-outline\"></i></button>-->\r\n\r\n            <button type=\"button\"\r\n                    *ngIf=\"((userAcivo.role == 'DECANO' && solicitudesVehiculo.length > 0 && solicitudesVehiculo[0].estado  == 3 ||\r\n                    userAcivo.role == 'DECANO' && solicitudesVehiculo.length > 0 && solicitudesVehiculo[0].estado  == 1 ||\r\n                    userAcivo.role == 'JEFE_FINANACIERO' && solicitudesVehiculo.length > 0 && solicitudesVehiculo[0].estado  == 1 ||\r\n                    userAcivo.role == 'JEFE_DEPTO' && solicitudesVehiculo.length>0 && solicitudesVehiculo[0].estado == 1)\r\n                    && vista == 'listado')\"\r\n                    class=\"btn btn-success btn-sm btn-rounded boton-cuadrado mx-1\"\r\n                  (click)=\"aprobarSolicitud(data)\"\r\n                  ngbTooltip=\"Aprobar\">\r\n            <i class=\"mdi mdi-18px mdi-check-outline\"></i></button>\r\n\r\n          <!--<button type=\"button\"\r\n                  *ngIf=\"userAcivo.role == 'DECANO' && solicitudesVehiculo.length > 0 && solicitudesVehiculo[0].estado  == 3\"\r\n                  class=\"btn btn-info btn-sm btn-rounded boton-cuadrado mx-1\"\r\n                  (click)=\"revisionSolicitud(data)\"\r\n                  ngbTooltip=\"Enviar a revisión\">\r\n            <i class=\"mdi mdi-18px mdi-help-circle-outline\"></i></button>-->\r\n\r\n          <!--<button type=\"button\"\r\n                  *ngIf=\"userAcivo.role == 'DECANO' && solicitudesVehiculo.length > 0 && solicitudesVehiculo[0].estado  == 3\"\r\n                  class=\"btn btn-warning btn-sm btn-rounded boton-cuadrado mx-1\"\r\n                  (click)=\"anularSolicitud(data)\"\r\n                  ngbTooltip=\"Anular\">\r\n            <i class=\"mdi mdi-18px mdi-alpha-x-circle-outline\"></i></button>-->\r\n\r\n            <button type=\"button\"\r\n                    *ngIf=\"userAcivo.role == 'SECR_DECANATO' &&\r\n                    (solicitudesVehiculo.length>0 && solicitudesVehiculo[0].estado == 2 ||\r\n                        solicitudesVehiculo.length>0 && solicitudesVehiculo[0].estado == 6) && vista == 'listado'\"\r\n                    class=\"btn btn-info btn-sm btn-rounded boton-cuadrado mx-1\"\r\n                  (click)=\"abrirModalSecre('Edicion', data)\"\r\n                  ngbTooltip=\"Asignar\">\r\n              <i class=\"mdi mdi-18px mdi-book-edit-outline\"></i></button>\r\n\r\n              <button type=\"button\"\r\n                    *ngIf=\"vista == 'mis-solicitudes'\"\r\n                    class=\"btn btn-dark btn-sm btn-rounded boton-cuadrado mx-1\"\r\n                  (click)=\"abrirModalLog(data)\"\r\n                  ngbTooltip=\"Movimientos\">\r\n              <i class=\"mdi mdi-18px mdi-clock-check-outline\"></i></button>\r\n\r\n\r\n\r\n        </td>\r\n\r\n      </tr>\r\n    </ng-container>\r\n    <ng-template #noDataTemplate>\r\n      <tr>\r\n        <td colspan=\"6\" style=\"text-align: center;\">\r\n          No hay datos disponibles.\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n    </tbody>\r\n  </table>\r\n\r\n  <div class=\"pagination pagination-rounded justify-content-end mb-2\">\r\n  <pagination-controls (pageChange)=\"p = $event\" [nextLabel]=\"''\" [previousLabel]=\"''\"></pagination-controls>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {SolicitudVehiculoService} from \"../../services/solicitud-vehiculo.service\";\r\nimport Swal from \"sweetalert2\";\r\nimport {Usuario} from \"../../../../account/auth/models/usuario.models\";\r\n\r\n@Component({\r\n  selector: 'app-listar-admin',\r\n  templateUrl: './listar-admin.component.html',\r\n  styleUrls: ['./listar-admin.component.scss']\r\n})\r\nexport class ListarAdminComponent implements OnInit {\r\n  // migas de pan\r\n  breadCrumbItems: Array<{}>;\r\n  term: any; // para buscar\r\n  estadoSeleccionado: number;\r\n  usuario!: Usuario;\r\n\r\n  constructor(private serviceSoliVe: SolicitudVehiculoService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.obtenerUsuarioActivo();\r\n    this.breadCrumbItems = [{ label: 'Solicitud de Vehículo' }, { label: 'Listar', active: true }];\r\n  }\r\n  filtrar(event: any) {\r\n    this.estadoSeleccionado = event.target.value ? event.target.value : null;\r\n    this.serviceSoliVe.getSolicitudesVehiculo(this.estadoSeleccionado);\r\n  }\r\n  get listSoliVeData(){\r\n    if (this.serviceSoliVe.listSoliVehiculo) {\r\n      return this.serviceSoliVe.listSoliVehiculo;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  obtenerUsuarioActivo(){\r\n    this.serviceSoliVe.getUsuarioSV().subscribe((usuario: Usuario) => {\r\n      this.usuario = usuario;\r\n    });\r\n  }\r\n}\r\n","<app-loader></app-loader>\r\n<div class=\"container-fluid\">\r\n  <app-page-title title=\"Solicitudes de Vehículos\" [breadcrumbItems]=\"breadCrumbItems\"></app-page-title>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <div class=\"row mb-2 align-items-end\">\r\n            <div class=\"col-sm-4 col-md-4\">\r\n              <div class=\"search-box me-2 mb-2 d-inline-block\">\r\n                <div class=\"position-relative\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Buscar\" [(ngModel)]=\"term\">\r\n                  <i class=\"bx bx-search-alt search-icon\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-4 col-md-3\">\r\n\r\n              <div class=\"form-group me-2 mb-2\">\r\n                <label for=\"\">Filtro por estado</label>\r\n                <select\r\n                  class=\"form-control\"\r\n                  id=\"exampleCombobox\"\r\n                  (change)=\"filtrar($event)\"\r\n                  aria-label=\"Filtro por estado\"\r\n                >\r\n                  <option value=\"\" disabled selected>Seleccione...</option>\r\n                  <option value=\"1\">En espera por jefe</option>\r\n                  <option value=\"2\">Aprobado por jefe</option>\r\n                  <option value=\"3\">En espera por decano</option>\r\n                  <option value=\"4\">Aprobada</option>\r\n                  <option value=\"5\">Vales Asignados</option>\r\n                  <option value=\"6\">Revisión</option>\r\n                  <option value=\"7\">Finalizadas</option>\r\n                  <option value=\"15\">Anuladas</option>\r\n                </select>\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Table data -->\r\n          <app-tabla\r\n            *ngIf=\"usuario\"\r\n            [solicitudesVehiculo]=\"listSoliVeData\"\r\n            [userAcivo]=\"usuario\"\r\n            [vista]=\"'listar'\"\r\n            [term]=\"term\"\r\n            aria-label=\"Tabla de solicitudes de vehículos\"\r\n          ></app-tabla>\r\n          <!-- end table -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {SolicitudVehiculoService} from \"../../services/solicitud-vehiculo.service\";\r\nimport {ISolicitudVehiculo} from \"../../interfaces/data.interface\";\r\nimport {UsuarioService} from 'src/app/account/auth/services/usuario.service';\r\nimport {Usuario} from \"../../../../account/auth/models/usuario.models\";\r\n\r\n@Component({\r\n  selector: 'app-listar',\r\n  templateUrl: './listar.component.html',\r\n  styleUrls: ['./listar.component.scss']\r\n})\r\nexport class ListarComponent implements OnInit {\r\n\r\n  // migas de pan\r\n  breadCrumbItems: Array<{}>;\r\n  term: any; // para buscar\r\n  p: any; // paginacion\r\n\r\n  solicitudesVehiculo: ISolicitudVehiculo [] = [];\r\n  usuario!: Usuario;\r\n\r\n  constructor( private soliVeService: SolicitudVehiculoService,\r\n    private userService: UsuarioService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.breadCrumbItems = [{ label: 'Solicitud de Vehículo' }, { label: 'Lista', active: true }]; // miga de pan\r\n    this.userService.getUsuario();\r\n    this.obtenerUsuarioActivo();\r\n  }\r\n\r\n  obtenerUsuarioActivo(){\r\n    this.soliVeService.getUsuarioSV().subscribe((usuario: Usuario) => {\r\n      this.usuario = usuario;\r\n      this.soliVeService.getSolicitudesRol(this.usuario.role);\r\n    });\r\n  }\r\n\r\n  get usuarioActivo(){\r\n    return this.userService.usuario;\r\n  }\r\n\r\n  get listSoliVeData(){\r\n    return this.soliVeService.listSoliVehiculoRol;\r\n  }\r\n\r\n  calcularNumeroCorrelativo(index: number): number {\r\n    if (typeof this.p === 'number') {\r\n      return (this.p - 1) * 10 + index + 1;\r\n    } else {\r\n      return index + 1; // Si no es numérico, solo regresamos el índice + 1\r\n    }\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"container-fluid\">\r\n  <app-page-title title=\"Solicitudes de Vehículos\" [breadcrumbItems]=\"breadCrumbItems\"></app-page-title>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <div class=\"row mb-2\">\r\n            <div class=\"col-sm-4\">\r\n              <div class=\"search-box me-2 mb-2 d-inline-block\">\r\n                <div class=\"position-relative\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Buscar\" [(ngModel)]=\"term\">\r\n                  <i class=\"bx bx-search-alt search-icon\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-5\">\r\n              <div class=\"text-sm-end\">\r\n\r\n              </div>\r\n            </div>\r\n            <!-- end col-->\r\n          </div>\r\n\r\n          <!-- Table data -->\r\n          <app-tabla *ngIf=\"usuario\"\r\n                     [solicitudesVehiculo]=\"listSoliVeData\"\r\n                     [userAcivo]=\"usuario\" [vista]=\"'listado'\" [term]=\"term\"></app-tabla>\r\n\r\n          <!-- end table -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, HostListener, OnInit } from '@angular/core';\r\nimport {SolicitudVehiculoService} from \"../../services/solicitud-vehiculo.service\";\r\nimport {ModalComponent} from \"../../components/modal/modal.component\";\r\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { IEstados } from '../../interfaces/data.interface';\r\nimport { UsuarioService } from 'src/app/account/auth/services/usuario.service';\r\nimport {Usuario} from \"../../../../account/auth/models/usuario.models\";\r\n\r\n@Component({\r\n  selector: 'app-mis-solicitudes',\r\n  templateUrl: './mis-solicitudes.component.html',\r\n  styleUrls: ['./mis-solicitudes.component.scss']\r\n})\r\nexport class MisSolicitudesComponent implements OnInit {\r\n\r\n  // migas de pan\r\n  breadCrumbItems: Array<{}>;\r\n  term: any; // para buscar\r\n  p: any; // paginacion\r\n\r\n  page:number = 0;\r\n  size:number = 10;\r\n\r\n  estadoSeleccionado: any;\r\n  estadosSoliVe: IEstados [] = [];\r\n  usuario!: Usuario;\r\n  public textSizeClass = '';\r\n\r\n  constructor( private soliVeService: SolicitudVehiculoService, private modalService: NgbModal,\r\n               private userService: UsuarioService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.obtenerUsuarioActivo();\r\n    this.breadCrumbItems = [{ label: 'Solicitud de Vehículo' }, { label: 'Mis Solicitudes', active: true }]; // miga de pan\r\n    this.soliVeService.getSolicitudesVehiculo(this.estadoSeleccionado);\r\n    this.getEstados();\r\n    this.setInitialTextSize();\r\n  }\r\n\r\n  abrirModal(leyenda: string) {\r\n    const modalRef = this.modalService.open(ModalComponent, {size: 'xl', backdrop: 'static'});\r\n    modalRef.componentInstance.leyenda = leyenda;\r\n    modalRef.componentInstance.estadoSeleccionado = this.estadoSeleccionado;\r\n    modalRef.componentInstance.usuarioActivo = this.usuarioActivo;\r\n  }\r\n\r\n  obtenerUsuarioActivo(){\r\n    // Suscríbete al Observable para obtener el usuario\r\n    this.soliVeService.getUsuarioSV().subscribe((usuario: Usuario) => {\r\n      this.usuario = usuario;\r\n    });\r\n  }\r\n\r\n  get usuarioActivo(){\r\n    return this.userService.usuario;\r\n  }\r\n\r\n  get listSoliVeData(){\r\n    return this.soliVeService.listSoliVehiculo;\r\n  }\r\n\r\n  onEstadoSeleccionado(event: any) {\r\n    this.estadoSeleccionado = event.target.value;\r\n    if (this.estadoSeleccionado == 0) {\r\n      this.soliVeService.getSolicitudesVehiculo(null);\r\n    } else {\r\n      this.soliVeService.getSolicitudesVehiculo(this.estadoSeleccionado);\r\n    }\r\n  }\r\n\r\n\r\n  getEstados() {\r\n    this.soliVeService.obtenerEstados().subscribe((resp) => {\r\n      this.estadosSoliVe = resp;\r\n    });\r\n  }\r\n\r\n  private setInitialTextSize() {\r\n    const screenWidth = window.innerWidth;\r\n\r\n    if (screenWidth < 576) { // Extra pequeña\r\n      this.textSizeClass = 'text-xs';\r\n    } else if (screenWidth >= 576 && screenWidth < 768) { // Pequeña\r\n      this.textSizeClass = 'text-sm';\r\n    } else { // Extra grande\r\n      this.textSizeClass = 'text-xl';\r\n    }\r\n  }\r\n\r\n\r\n  // Función que se ejecuta cuando cambia el tamaño de la pantalla\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event: any): void {\r\n    // Llamamos a la función para actualizar el tamaño de texto\r\n    this.setInitialTextSize();\r\n  }\r\n}\r\n","\r\n<div class=\"container-fluid\">\r\n  <app-page-title [class]=\"textSizeClass\" title=\"Solicitudes de Vehículos\" [breadcrumbItems]=\"breadCrumbItems\"></app-page-title>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <div class=\"row mb-2 align-items-end\">\r\n            <div class=\"col-sm-4 col-md-4\">\r\n              <div class=\"search-box me-2 mb-2 d-inline-block\">\r\n                <div class=\"position-relative\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Buscar\" [(ngModel)]=\"term\">\r\n                  <i class=\"bx bx-search-alt search-icon\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-4 col-md-3\">\r\n\r\n              <div class=\"form-group me-2 mb-2\">\r\n                <label for=\"estadoSeleccionado\">Filtro por estado</label>\r\n                <select id=\"estadoSeleccionado\" class=\"form-control custom-select smaller-text\" [(ngModel)]=\"estadoSeleccionado\" (change)=\"onEstadoSeleccionado($event)\">\r\n                  <option [ngValue]=\"undefined\" disabled selected>Seleccione...</option>\r\n                  <option *ngFor=\"let estado of estadosSoliVe\" [value]=\"estado.codigoEstado\">{{estado.nombreEstado}}</option>\r\n                </select>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div class=\"col-sm-4 col-md-5\">\r\n              <div class=\"text-sm-end me-2 mb-2\">\r\n                <button type=\"button\" class=\"btn btn-primary btn-rounded\" (click)=\"abrirModal('Nueva')\">Agregar\r\n                  </button>\r\n              </div>\r\n            </div>\r\n            <!-- end col-->\r\n          </div>\r\n\r\n          <!-- Table data -->\r\n          <app-tabla *ngIf=\"usuario\"\r\n                     [solicitudesVehiculo]=\"listSoliVeData\"\r\n                     [userAcivo]=\"usuario\" [vista]=\"'mis-solicitudes'\" [term]=\"term\"></app-tabla>\r\n          <!-- end table -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {ListarComponent} from \"./pages/listar/listar.component\";\r\nimport {MisSolicitudesComponent} from \"./pages/mis-solicitudes/mis-solicitudes.component\";\r\nimport {ListarAdminComponent} from \"./pages/listar-admin/listar-admin.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'listado',\r\n    component: ListarComponent,\r\n  },\r\n  {\r\n    path: 'mis-solicitudes',\r\n    component: MisSolicitudesComponent,\r\n  },\r\n  {\r\n    path: 'listar',\r\n    component: ListarAdminComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SolicitudVehiculoRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SolicitudVehiculoRoutingModule } from './solicitud-vehiculo-routing.module';\r\nimport { ListarComponent } from './pages/listar/listar.component';\r\nimport { MisSolicitudesComponent } from './pages/mis-solicitudes/mis-solicitudes.component';\r\nimport {UIModule} from \"../../shared/ui/ui.module\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {NgxPaginationModule} from \"ngx-pagination\";\r\nimport {Ng2SearchPipeModule} from \"ng2-search-filter\";\r\nimport { ModalComponent } from './components/modal/modal.component';\r\nimport { TablaComponent } from './components/tabla/tabla.component';\r\nimport {NgSelectModule} from \"@ng-select/ng-select\";\r\nimport {NgbActiveModal, NgbModule, NgbTooltipModule} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { ModalSecretariaComponent } from './components/modal-secretaria/modal-secretaria.component';\r\nimport { ModalLogComponent } from './components/modal-log/modal-log.component';\r\nimport { ListarAdminComponent } from './pages/listar-admin/listar-admin.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ListarComponent,\r\n    MisSolicitudesComponent,\r\n    ModalComponent,\r\n    TablaComponent,\r\n    ModalSecretariaComponent,\r\n    ModalLogComponent,\r\n    ListarAdminComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SolicitudVehiculoRoutingModule,\r\n    UIModule,\r\n    FormsModule,\r\n    NgxPaginationModule, // para paginar\r\n    Ng2SearchPipeModule,\r\n    ReactiveFormsModule,\r\n    NgSelectModule,\r\n    NgbTooltipModule,\r\n    NgbModule,\r\n  ],\r\n  providers: [NgbActiveModal],\r\n})\r\nexport class SolicitudVehiculoModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}