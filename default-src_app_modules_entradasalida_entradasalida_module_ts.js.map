{"version":3,"file":"default-src_app_modules_entradasalida_entradasalida_module_ts.js","mappings":"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","sources":["./src/app/modules/entradasalida/components/card/card.component.ts","./src/app/modules/entradasalida/components/card/card.component.html","./src/app/modules/entradasalida/entradasalida-routing.module.ts","./src/app/modules/entradasalida/entradasalida.module.ts","./src/app/modules/entradasalida/interface/EntSalinterface.ts","./src/app/modules/entradasalida/pages/listar/listar.component.ts","./src/app/modules/entradasalida/pages/listar/listar.component.html","./src/app/modules/entradasalida/pages/modal/modal.component.ts","./src/app/modules/entradasalida/pages/modal/modal.component.html","./src/app/modules/entradasalida/pages/tabla/tabla.component.ts","./src/app/modules/entradasalida/pages/tabla/tabla.component.html","./src/app/modules/entradasalida/pages/vistaentradasalida/vistaentradasalida.component.ts","./src/app/modules/entradasalida/pages/vistaentradasalida/vistaentradasalida.component.html","./src/app/modules/entradasalida/service/listaentradasalida.service.ts"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\r\nimport { IVehiculoentradaSalida, IsolicitudVehiculo } from '../../interface/VehiculoEntradasalida';\r\nimport { ListaentradasalidaService } from '../../service/listaentradasalida.service';\r\nimport { IEntradaSalida } from '../../interface/EntSalinterface';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss']\r\n})\r\nexport class CardComponent implements OnInit {\r\n  //BOTONES BOLEANOS\r\n\r\n\r\n  //@Input() obj!:IVehiculoentradaSalida;\r\n  @Input() obje:IsolicitudVehiculo;\r\n  @Input() queryString: string;\r\n  @Input() entraoOd!: IVehiculoentradaSalida[];\r\n  //objetos:IVehiculoentradaSalida[]=[];//array de vehiculos\r\n  objetivoMision: IsolicitudVehiculo;\r\n  controlador1:boolean;\r\n  controlador2:boolean;\r\n  entradaSalida:IEntradaSalida;\r\n  controllerdata:boolean;\r\n\r\n  constructor(private listaentradasalidaservice: ListaentradasalidaService) { }\r\n  ngOnInit(): void {\r\n    if(this.obje.estado==5){\r\n      this.controlador1=true;\r\n      this.controlador2=false;\r\n    }\r\n\r\n\r\n    this.listaentradasalidaservice.listarEstado('1', this.obje.codigoSolicitudVehiculo).subscribe({\r\n      next: (value)=>{\r\n        this.entradaSalida=value;\r\n        this.controllerdata=true;\r\n\r\n        if(this.entradaSalida!=null){\r\n          if(this.entradaSalida.estado==1){\r\n          this.controlador1=false;\r\n          this.controlador2=true;\r\n          }\r\n        }else{\r\n\r\n          this.controllerdata=false;\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","  <div class=\"card\" >\r\n    <!-- Inicio del bucle que muestra las imágenes -->\r\n    <div class=\"bg\" >\r\n      <div class=\"card2\" >\r\n        <img [src]=\"obje.vehiculo.nombrefoto\" class=\"card-img-top col-img\">\r\n      </div>\r\n      <div class=\"card-body\">\r\n          <div class=\"card3\">\r\n            <p><strong>Fecha de uso:</strong></p>\r\n            <p>{{obje.fechaSalida| date : \"dd/MM/yyyy\" }}</p>\r\n            <p><strong>Motorista: </strong></p>\r\n            <p>{{obje.motorista.nombre}} {{obje.motorista.apellido}}</p>\r\n            <p><strong>Placa: </strong>{{obje.vehiculo.placa}}</p>\r\n          </div>\r\n              <div class=\"d-flex justify-content-center\">\r\n                <!--<a class=\"btn btn-salida btn-separado\">+ Salida</a>-->\r\n                <app-modal  *ngIf=\"controlador1\" [leyenda]=\"'Salida'\" [titulo]=\"'Salida'\" [leyendas]=\"'Salida'\"  [objetivoMision]=\"obje\" ></app-modal>\r\n                <!--<a class=\"btn btn-entrada\">- Entrada</a>-->\r\n                <app-modal  *ngIf=\"controlador2\" [leyenda]=\"'Entrada'\" [titulo]=\"'Entrada'\"  [leyendas]=\"'Entrada'\" [objetivoMision]=\"obje\"   [controllerdata]=\"controllerdata\"></app-modal>\r\n                <!--<a [routerLink]=\"['/modal/', obje.codigoSolicitudVehiculo]\" class=\"btn btn-primary\">ver</a>---->\r\n              </div>    \r\n      </div>\r\n    </div>\r\n    <div class=\"blob\"></div>\r\n    <!-- Fin del bucle que muestra las imágenes -->\r\n  </div>\r\n\r\n  <style>\r\n    p {\r\n        margin: 0; /* Elimina el margen entre párrafos */\r\n    }\r\n</style>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ListarComponent } from './pages/listar/listar.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'listar', component:ListarComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EntradasalidaRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\n\r\nimport { EntradasalidaRoutingModule } from './entradasalida-routing.module';\r\nimport { VistaentradasalidaComponent } from './pages/vistaentradasalida/vistaentradasalida.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { UIModule } from 'src/app/shared/ui/ui.module';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { ListaentradasalidaService } from './service/listaentradasalida.service';\r\nimport { ListarComponent } from './pages/listar/listar.component';\r\nimport { TablaComponent } from './pages/tabla/tabla.component';\r\nimport { ModalComponent } from './pages/modal/modal.component';\r\nimport { CardComponent } from './components/card/card.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    VistaentradasalidaComponent,\r\n    ListarComponent,\r\n    TablaComponent,\r\n    ModalComponent,\r\n    CardComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    EntradasalidaRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,//para las peticiones\r\n    InfiniteScrollModule,//para scroll infinito\r\n    UIModule,//para la modal\r\n    FormsModule,//\r\n    NgApexchartsModule,\r\n    ChartsModule,//para las graficas\r\n    NgbModalModule,\r\n    NgxPaginationModule,\r\n    Ng2SearchPipeModule,\r\n    //BrowserModule\r\n  ],exports:[ListarComponent],\r\n  providers:[\r\n    ListaentradasalidaService,\r\n    //DatePipe\r\n  ],\r\n  //bootstrap:[AppComponent]\r\n\r\n})\r\nexport class EntradasalidaModule { }\r\n","\r\nexport interface IEntradaSalida{\r\n    id:string,\r\n    fecha: string,\r\n    hora:string,\r\n    combustible:string,\r\n    kilometraje:string,\r\n    estado?: number,\r\n    solicitudvehiculo: IsolicitudVehiculo\r\n}\r\nexport interface IsolicitudVehiculo{\r\n    codigoSolicitudVehiculo: number;\r\n    fechaSolicitud:string,\r\n    fechaSalida: string,\r\n    unidadSolicitante: string,\r\n    vehiculo: IVehiculo,\r\n    objetivoMision: string,\r\n    lugarMision: string,\r\n    direccion: string,\r\n    horaEntrada: string,\r\n    horaSalida: string,\r\n    cantidadPersonas:number,\r\n    listaPasajeros: string,\r\n    solicitante:ISolicitante,\r\n    nombreJefeDepto: string\r\n    fechaEntrada: string,\r\n    estado: number,\r\n    estadoString: string,\r\n    motorista: IMotorista,\r\n    listDocumentos: string,\r\n    horasValidas: boolean\r\n\r\n}\r\nexport interface IVehiculo{\r\n    codigoVehiculo: string,\r\n    placa: string,\r\n    modelo: string,\r\n    marca: string,\r\n    clase: string,\r\n    color: string,\r\n    year: number,\r\n    fecha_tarjeta: string,\r\n    capacidad: string,\r\n    capacidadTanque: string,\r\n    estado: number,\r\n    n_chasis: string,\r\n    n_motor: string,\r\n    tipo_gas: string,\r\n    nombrefoto: string,\r\n    urlfoto: string\r\n}\r\n\r\nexport interface ISolicitante{\r\n    codigoUsuario: string,\r\n    nombre: string,\r\n    clave: string,\r\n    nuevo: number,\r\n    empleado: string\r\n}\r\nexport interface IMotorista{\r\n    codigoEmpleado: String,\r\n    dui: string,\r\n    nombre: string,\r\n    apellido: string,\r\n    telefono: string,\r\n    licencia: string,\r\n    tipolicencia: string,\r\n    fechalicencia: string,\r\n    estado: number,\r\n    jefe: boolean,\r\n    correo: string,\r\n    nombrefoto: string,\r\n    urlfoto: string,\r\n    cargo: string,\r\n    departamento: string,\r\n}\r\n\r\nexport class EntradaSalidaI {\r\n    constructor(\r\n        public tipo: string,\r\n        public fecha: string,\r\n        public hora:string,\r\n        public combustible:string,\r\n        public kilometraje:string,\r\n        public estado?: number,\r\n        public solicitudvehiculo?: IsolicitudVehiculo\r\n\r\n){}\r\n  }\r\n\r\n  export class SolitudVehiculoI {\r\n    constructor(\r\n        public codigoSolicitudVehiculo?: number,\r\n        public fechaEntrada?: string\r\n){}\r\n  }","import { Component, OnInit } from '@angular/core';\r\nimport { IEntradaSalida } from '../../interface/EntSalinterface';\r\nimport { IVehiculoentradaSalida, IsolicitudVehiculo } from '../../interface/VehiculoEntradasalida';\r\nimport { ListaentradasalidaService } from '../../service/listaentradasalida.service';\r\n\r\n@Component({\r\n  selector: 'app-listar',\r\n  templateUrl: './listar.component.html',\r\n  styleUrls: ['./listar.component.scss']\r\n})\r\nexport class ListarComponent implements OnInit {\r\n  // bread crumb items\r\n  //vehiculos:IVehiculoentradaSalida[]=[];//array de vehiculos\r\n  vehiculos: IsolicitudVehiculo[] = [];//array de vehiculos\r\n  breadCrumbItems: Array<{}>;\r\n  entradasalidas: IEntradaSalida[] = [];\r\n  term: string = '';\r\n  transactions;\r\n  parametroBuscar: string = '';//parametro de busqueda.\r\n\r\n  constructor(private listavehiculos: ListaentradasalidaService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.breadCrumbItems = [{ label: 'Entradas' }, { label: 'Salidas', active: true }];\r\n\r\n    this.transactions = [\r\n      {\r\n        id: '#SK2540',\r\n        name: 'Neal Matthews',\r\n        date: '07 Oct, 2019',\r\n        total: '$400',\r\n        status: 'Paid',\r\n        payment: ['fab fa-cc-mastercard', 'Mastercard'],\r\n        index: 1,\r\n      },\r\n      {\r\n        id: '#SK2541',\r\n        name: 'Jamal Burnett',\r\n        date: '07 Oct, 2019',\r\n        total: '$380',\r\n        status: 'Chargeback',\r\n        payment: ['fab fa-cc-visa', 'Visa'],\r\n        index: 2,\r\n      },\r\n      {\r\n        id: '#SK2542',\r\n        name: 'Juan Mitchell',\r\n        date: '06 Oct, 2019',\r\n        total: '$384',\r\n        status: 'Paid',\r\n        payment: ['fab fa-cc-paypal', 'Paypal'],\r\n        index: 3,\r\n      },\r\n      {\r\n        id: '#SK2543',\r\n        name: 'Barry Dick',\r\n        date: '05 Oct, 2019',\r\n        total: '$412',\r\n        status: 'Paid',\r\n        payment: ['fab fa-cc-mastercard', 'Mastercard'],\r\n        index: 4,\r\n      },\r\n      {\r\n        id: '#SK2544',\r\n        name: 'Ronald Taylor',\r\n        date: '04 Oct, 2019',\r\n        total: '$404',\r\n        status: 'Refund',\r\n        payment: ['fab fa-cc-visa', 'Visa'],\r\n        index: 5,\r\n      },\r\n      {\r\n        id: '#SK2545',\r\n        name: 'Jacob Hunter',\r\n        date: '04 Oct, 2019',\r\n        total: '$392',\r\n        status: 'Paid',\r\n        payment: ['fab fa-cc-paypal', 'Paypal'],\r\n        index: 6,\r\n      },\r\n      {\r\n        id: '#SK2546',\r\n        name: 'William Cruz',\r\n        date: '03 Oct, 2019',\r\n        total: '$374',\r\n        status: 'Paid',\r\n        payment: ['fas fa-money-bill-alt', 'COD'],\r\n        index: 7,\r\n      },\r\n      {\r\n        id: '#SK2547',\r\n        name: 'Dustin Moser',\r\n        date: '02 Oct, 2019',\r\n        total: '$350',\r\n        status: 'Paid',\r\n        payment: ['fab fa-cc-mastercard', 'Mastercard'],\r\n        index: 8,\r\n      },\r\n      {\r\n        id: '#SK2548',\r\n        name: 'Clark Benson',\r\n        date: '01 Oct, 2019',\r\n        total: '$345',\r\n        status: 'Refund',\r\n        payment: ['fab fa-cc-visa', 'Visa'],\r\n        index: 9,\r\n      },\r\n    ];\r\n\r\n    this.buscar();\r\n  }\r\n\r\n  buscar(): void {\r\n    //metodo para buscar\r\n    this.parametroBuscar = this.parametroBuscar.toLocaleLowerCase();\r\n    this.listavehiculos.buscarVehiculo(this.parametroBuscar).subscribe((resp: IsolicitudVehiculo[]) => {\r\n      this.vehiculos = resp;\r\n    });\r\n\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <app-page-title title=\"ENTRADAS Y SALIDAS DE VEHICULOS\" [breadcrumbItems]=\"breadCrumbItems\"></app-page-title>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <!--<div class=\"row mb-2\">\r\n            <div class=\"col-sm-4\">\r\n              <div class=\"search-box me-2 mb-2 d-inline-block\">\r\n                <div class=\"position-relative\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Buscar...\" [(ngModel)]=\"parametroBuscar\"\r\n                    (keyup.enter)=\"buscar()\">\r\n                  <i class=\"bx bx-search-alt search-icon\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm-8\">\r\n              <app-modal [leyenda]=\"'Nuevo'\" [titulo]=\"'Agregar'\" [leyendas]=\"'entrada'\" ></app-modal>\r\n            </div>\r\n          </div>--->\r\n          <div class=\"row row-cols-1 row-cols-md-3 row-cols-xl-5 justify-content-center\">\r\n            <ng-container *ngFor=\"let obj of vehiculos\">\r\n              <app-card [obje]=\"obj\"></app-card>\r\n            </ng-container>\r\n\r\n          </div>\r\n          <!-- Table data -->\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, Input, OnInit } from \"@angular/core\";\r\n\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormGroup,\r\n  ValidationErrors,\r\n  Validators,\r\n} from \"@angular/forms\";\r\n\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  EntradaSalidaI,\r\n  IEntradaSalida,\r\n  SolitudVehiculoI,\r\n} from \"../../interface/EntSalinterface\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ListaentradasalidaService } from \"../../service/listaentradasalida.service\";\r\nimport { MensajesService } from \"src/app/shared/global/mensajes.service\";\r\nimport { IsolicitudVehiculo } from \"../../interface/VehiculoEntradasalida\";\r\nimport { ISolicitudvalep } from \"src/app/modules/solicitud-vale-paginacion/interface/solicitudvalep.interface\";\r\nimport { IEmail } from \"src/app/account/auth/interfaces/usuario\";\r\nimport { UsuarioService } from \"src/app/account/auth/services/usuario.service\";\r\nimport { ICorreos } from \"src/app/modules/solicitudes/Interfaces/correos.interface\";\r\n\r\n@Component({\r\n  selector: \"app-modal\",\r\n  templateUrl: \"./modal.component.html\",\r\n  styleUrls: [\"./modal.component.scss\"],\r\n})\r\nexport class ModalComponent implements OnInit {\r\n  @Input() leyenda!: string;\r\n  @Input() leyendas!: string;\r\n  @Input() titulo!: string;\r\n  @Input() entradasalidaOd!: IEntradaSalida;\r\n\r\n  // @Input() salidaentradaOd!: boolean;\r\n  @Input() objetivoMision: IsolicitudVehiculo;\r\n  @Input() controllerdata: boolean;\r\n\r\n  //objetivoMision=\"\";\r\n  fechaSalida=\"\";\r\n\r\n  formBuilder!: FormGroup;\r\n  entradasalidas: IEntradaSalida[] = []; //para almacenar los resultados\r\n  //entrasal:IEntradaSalida;\r\n\r\n  solicitudvale: ISolicitudvalep;\r\n  horaActual: string;\r\n  fechaActual: string;\r\n  modoEdicion = false;\r\n  kilomet: IEntradaSalida;\r\n  correos!: ICorreos[];\r\n\r\n  /////esto para enviar el objetivo a la modal\r\n  //objetivoMision: IsolicitudVehiculo;\r\n  kilometrajeAnterior: number = 0;\r\n  alerts = [\r\n    {\r\n      id: 9,\r\n      type: \"info\",\r\n      message:\r\n        \" Por favor, asegúrese de completar todos los campos obligatorios (*) y de cumplir con los formatos correspondientes. Además, le recomendamos prestar atención a los mensajes de alerta\",\r\n      show: false,\r\n    },\r\n  ];\r\n\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private mensajesService: MensajesService,\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private listaentradasalidaservice: ListaentradasalidaService, private usuarios: UsuarioService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.formBuilder = this.Iniciarformulario();\r\n    if (!this.fechaActual) {\r\n      this.fechaActual = this.getCurrentDate();\r\n    }\r\n\r\n    if (!this.horaActual) {\r\n      this.horaActual = this.getCurrentTime();\r\n    }\r\n    this.listaentradasalidaservice.getMisiones();\r\n\r\n    \r\n   \r\n\r\n  }\r\n\r\n  // Función para obtener la fecha actual en formato \"yyyy-MM-dd\"\r\n  getCurrentDate(): string {\r\n    const now = new Date();\r\n    const year = now.getFullYear();\r\n    const month = (now.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = now.getDate().toString().padStart(2, \"0\");\r\n    return `${year}-${month}-${day}`;\r\n  }\r\n  // Función para obtener la hora actual en formato \"hh:mm\"\r\n  getCurrentTime(): string {\r\n    const now = new Date();\r\n    const hours = now.getHours().toString().padStart(2, \"0\");\r\n    const minutes = now.getMinutes().toString().padStart(2, \"0\");\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n  private Iniciarformulario(): FormGroup {\r\n    return this.fb.group({\r\n      id:[''],\r\n      fecha: ['', [Validators.required]],\r\n      hora: ['', [Validators.required]],\r\n      kilometraje: ['', [Validators.required]],\r\n      combustible: ['', [Validators.required]],\r\n      solicitudvehiculo: ['', [Validators.required]]\r\n\r\n    });\r\n  }\r\n  //funcion para obtener la fecha actual.\r\n  getToday(): Date {\r\n    return new Date();\r\n  }\r\n  // Validador personalizado para la fecha\r\n  maxDateValidator() {\r\n    return (control) => {\r\n      const selectedDate = new Date(control.value);\r\n      const today = this.getToday();\r\n\r\n      if (selectedDate <= today) {\r\n        return { max: true };\r\n      }\r\n\r\n      return null;\r\n    };\r\n  }\r\n\r\n  OnlyNumbersAllowed(event): boolean {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    const inputValue = event.target.value;\r\n    const dotIndex = inputValue.indexOf(\".\");\r\n\r\n    // Permitir números del 0 al 9\r\n    if (charCode >= 48 && charCode <= 57) {\r\n      // Verificar si ya existe un punto decimal en el campo\r\n      if (dotIndex !== -1) {\r\n        // Obtener la parte decimal después del punto\r\n        const decimalPart = inputValue.substr(dotIndex + 1);\r\n        // Permitir máximo dos decimales\r\n        if (decimalPart.length >= 2) {\r\n          console.log(\"Máximo dos decimales permitidos\");\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    } else if (charCode === 46 && dotIndex === -1) {\r\n      // Permitir un único punto decimal si no existe uno ya en el campo\r\n      return true;\r\n    } else {\r\n      console.log(\"charCode restricted is \" + charCode);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  openModal(content: any) {\r\n    this.modalService.open(content, { size: \"lx\", centered: true });\r\n  }\r\n  editando() {\r\n    const ent = this.formBuilder.value;\r\n    this.listaentradasalidaservice.putEmpleado(ent).subscribe(\r\n      (resp: any) => {\r\n        if (resp) {\r\n          const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n            //timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n              toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n              toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n            },\r\n          });\r\n\r\n          Toast.fire({\r\n            icon: \"success\",\r\n            text: \"Modificación exitosa\",\r\n          });\r\n\r\n          this.formBuilder.reset();\r\n          this.recargar();\r\n          this.modalService.dismissAll();\r\n        }\r\n      },\r\n      (err: any) => {\r\n        this.mensajesService.mensajesSweet(\r\n          \"error\",\r\n          \"Ups... Algo salió mal\",\r\n          err\r\n        );\r\n        this.obtenerLista();\r\n        this.recargar();\r\n      }\r\n    );\r\n  }\r\n\r\n  guardar() {\r\n    if (this.formBuilder.valid) {\r\n      if (this.entradasalidaOd != null) {\r\n        //this.editando();\r\n      } else {\r\n        console.log(\"antes de registrar\");\r\n        this.registrando();\r\n      }\r\n    } else {\r\n      Swal.fire({\r\n        position: \"center\",\r\n        title: \"Faltan datos en el formuario\",\r\n        text: \"submit disparado, formulario no valido\",\r\n        icon: \"warning\",\r\n      });\r\n    }\r\n  }\r\n  registrando() {\r\n    const listando = this.formBuilder.value;\r\n    if (!this.controllerdata) {\r\n      const entsali: EntradaSalidaI = new EntradaSalidaI(\r\n        listando.tipo,\r\n        listando.fecha,\r\n        listando.hora,\r\n        listando.combustible,\r\n        listando.kilometraje,\r\n        1,\r\n        listando.solicitudvehiculo\r\n      );\r\n      this.listaentradasalidaservice.NuevosDatos(entsali).subscribe(\r\n        (resp: any) => {\r\n          if (resp) {\r\n            const Toast = Swal.mixin({\r\n              toast: true,\r\n              position: \"top-end\",\r\n              showConfirmButton: false,\r\n              timer: 3000,\r\n              //timerProgressBar: true,\r\n              didOpen: (toast) => {\r\n                toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n                toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n              },\r\n            });\r\n            Toast.fire({\r\n              icon: \"success\",\r\n              text: \"Almacenamiento exitoso\",\r\n            });\r\n            this.formBuilder.reset();\r\n            this.recargar();\r\n            this.modalService.dismissAll();\r\n          }\r\n        },\r\n        (err: any) => {\r\n          this.mensajesService.mensajesSweet(\r\n            \"error\",\r\n            \"Ups... Algo salió mal\",\r\n            err\r\n          );\r\n          this.obtenerLista();\r\n          this.recargar();\r\n        }\r\n      );\r\n    } else {\r\n      const entsali: EntradaSalidaI = new EntradaSalidaI(listando.tipo,listando.fecha,listando.hora,listando.combustible,listando.kilometraje,2,listando.solicitudvehiculo);\r\n      const modificando: SolitudVehiculoI = new SolitudVehiculoI(listando.solicitudvehiculo,listando.fecha);\r\n\r\n      this.listaentradasalidaservice.extrayendokilometraje(listando.solicitudvehiculo).subscribe({\r\n        next:(value)=>{\r\n          this.kilomet=value;\r\n          var kilometrajeString1 = this.kilomet.kilometraje;\r\n          var kilometrajeEntero = parseInt(kilometrajeString1, 10);\r\n          var kilometrajeString2 = listando.kilometraje;\r\n          var kilometrajeEntero2 = parseInt(kilometrajeString2, 10);\r\n          if(kilometrajeEntero2>kilometrajeEntero ){\r\n            this.listaentradasalidaservice.NuevosDatos(entsali).subscribe((resp: any) => {\r\n              this.listaentradasalidaservice.modificandoFecha(modificando).subscribe(\r\n    \r\n                  (res: any) => {\r\n                    if (res) {\r\n                      const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position: \"top-end\",\r\n                        showConfirmButton: false,\r\n                        timer: 3000,\r\n                        //timerProgressBar: true,\r\n                        didOpen: (toast) => {\r\n                          toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n                          toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n                        },\r\n                      });\r\n                      Toast.fire({\r\n                        icon: \"success\",\r\n                        text: \"Almacenamiento exito\",\r\n                      });\r\n                      this.formBuilder.reset();\r\n                      this.recargar();\r\n                      this.modalService.dismissAll();\r\n                    }\r\n                  },\r\n                  (err: any) => {\r\n                    this.mensajesService.mensajesSweet(\r\n                      \"error\",\r\n                      \"Ups... Algo salió mal\",\r\n                      err\r\n                    );\r\n                    this.obtenerLista();\r\n                    this.recargar();\r\n                    // Inicia mensaje dirigido hacia el correo institucional\r\n                    this.EmailE(\r\n                      \"!Aviso importante!\",\r\n                      \"Se ha detectado un registro de entrada\",\r\n                      \"EL Auto detectado ha completado con su mision: \" + this.objetivoMision.objetivoMision,\r\n                      \"Se solicita continuar con los procesos para poder liquidar\"\r\n                    );// Termina mensaje dirigido hacia el correo institucional\r\n                  }\r\n                );\r\n            });\r\n          }else{\r\n            Swal.fire({\r\n              position: \"center\",\r\n              title: \"Error\",\r\n              text: \"El kilometraje debe ser mayor al de salida\",\r\n              icon: \"warning\",\r\n            });\r\n          }\r\n        }\r\n       });\r\n        \r\n    \r\n    }\r\n  }\r\n\r\n  recargar() {\r\n    let currentUrl = this.router.url;\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    this.router.onSameUrlNavigation = \"reload\";\r\n    this.router.navigate([currentUrl]);\r\n  }\r\n\r\n  private obtenerLista() {\r\n    //para poder mostrar e la tabla\r\n    this.listaentradasalidaservice.ObtenerLista.subscribe(\r\n      (resp: IEntradaSalida[]) => {\r\n        this.entradasalidas = resp;\r\n      }\r\n    );\r\n  }\r\n  esCampoValido(campo: string){\r\n    const validarCampo= this.formBuilder.get(campo);\r\n    /*if(campo==\"solicitudvehiculo\"){\r\n      return 'is-valid';\r\n    }*/\r\n    return !validarCampo?.valid && validarCampo?.touched ? 'is-invalid' : validarCampo?.touched? 'is-valid': '';\r\n  \r\n  }\r\n  get Listamisiones() {\r\n    return this.listaentradasalidaservice.listDeMisiones;\r\n  }\r\n\r\n  //metodos para la alerta\r\n  CambiarAlert(alert) {\r\n    alert.show = !alert.show;\r\n  }\r\n\r\n  restaurarAlerts() {\r\n    this.alerts.forEach((alert) => {\r\n      alert.show = true;\r\n    });\r\n  }\r\n\r\n  siMuestraAlertas() {\r\n    return this.alerts.every((alert) => alert.show);\r\n  }\r\n\r\n  EmailE(asunto: string, titulo: string, mensaje: string, centro: string) {\r\n    const nombre = this.correos[1].nombre;\r\n    const correo = this.correos[1].correo;\r\n\r\n    const email: IEmail = {\r\n      asunto: asunto,\r\n      titulo: titulo,\r\n      email: correo,\r\n      receptor: \"Estimad@ : \" + nombre,\r\n      mensaje: mensaje,\r\n      centro: centro,\r\n      codigo: '',\r\n      abajo: \"Gracias por su atención a este importante mensaje.\",\r\n    };\r\n\r\n    this.usuarios.SendEmail(email).subscribe(\r\n      (resp) => {\r\n        console.log(\"resp: \", resp);\r\n\r\n        Swal.close();\r\n        const Toast = Swal.mixin({\r\n          toast: true,\r\n          position: \"top-end\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n          didOpen: (toast) => {\r\n            toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n            toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n          },\r\n        });\r\n\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          text: \"¡Se ha enviando un mensaje al correo institucional!\",\r\n        }).then(() => {});\r\n      },\r\n      (err) => {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Algo salió mal\",\r\n          text: err,\r\n        });\r\n      }\r\n    );\r\n  }\r\n}\r\n","<span *ngIf=\"leyenda !== 'Entrada'\" >\r\n    <div class=\"text-sm-end\">\r\n        <button type=\"button\" class=\"btn btn-salida btn-separado\"  (click)=\"openModal(content)\">{{titulo}}</button>\r\n    </div>\r\n</span>\r\n<span *ngIf=\"leyenda !== 'Salida'\" >\r\n    <div class=\"text-sm-end\">\r\n        <button type=\"button\" class=\"btn btn-entrada\"  (click)=\"openModal(content)\">{{titulo}}</button>\r\n    </div>\r\n</span>\r\n<span *ngIf=\"leyenda === titulo && titulo == 'Editar'\">\r\n    <button type=\"button\" class=\"btn btn-info btn-sm btn-rounded boton-cuadrado mx-1\" (click)=\"openModal(content)\"><i\r\n            class=\"mdi mdi-account-edit-outline\"></i></button>\r\n</span>\r\n\r\n<!-- Modal -->\r\n\r\n<div class=\"modal modal-fullscreen-xl-down fade\" id=\"modalEmpleado\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\"\r\n    aria-hidden=\"true\">\r\n    <ng-template #content role=\"document\" let-modal>\r\n        <div class=\"modal-header\">\r\n            <h5 class=\"modal-title mt-0\">Registro de {{leyendas}} </h5>\r\n            <div class=\"btn-alerta\" *ngIf=\"alerts\">\r\n                <i class=\"mdi mdi-20px mdi-lightbulb-on-outline custom-cursor\" ngbTooltip=\"Mostrar Ayuda\"\r\n                    *ngIf=\"!siMuestraAlertas()\" (click)=\"restaurarAlerts()\"></i>\r\n                    <button type=\"button\" class=\"btn-close\" aria-hidden=\"true\" (click)=\"modal.dismiss('Cross click')\"></button>\r\n            </div>\r\n            \r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <div *ngFor=\"let alert of alerts\">\r\n                <div class=\"alert alert-{{ alert.type }} alert-dismissible fade show\" role=\"alert\" *ngIf=\"alert.show\">\r\n                    <strong>Importante!</strong>\r\n                    <div class=\"text-justify\">{{ alert.message }}</div>\r\n                    <button type=\"button\" class=\"btn-close\" (click)=\"CambiarAlert(alert)\" aria-label=\"Close\"></button>\r\n                </div>\r\n            </div>\r\n            <form (ngSubmit)=\"guardar()\" [formGroup]=\"formBuilder\" enctype=\"multipart/form-data\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"mb-3\">\r\n                            <label>Misión</label><span class=\"text-danger\"> *</span>\r\n                            <select class=\"form-control\" id=\"Selectsolicitudvehiculo\" name=\"Selectsolicitudvehiculo\"\r\n                            formControlName=\"solicitudvehiculo\" [class]=\"esCampoValido('solicitudvehiculo')\" autocomplete=\"off\" disabled=\"\" [ngModel]=\"objetivoMision.codigoSolicitudVehiculo\">\r\n                            <option [value]=\"objetivoMision.codigoSolicitudVehiculo\" selected>{{objetivoMision.objetivoMision}}</option>\r\n                            </select>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"mb-3\">\r\n                              <label>Fecha</label><span class=\"text-danger\"> *</span>\r\n                              <input type=\"date\" class=\"form-control\" id=\"fecha\" name=\"fecha\"\r\n                                formControlName=\"fecha\"  [class]=\"esCampoValido('fecha')\" [(ngModel)]=\"fechaActual\" disabled/>\r\n                                <div class=\"invalid-feedback\">\r\n                                  <!-- aqui la validación-->\r\n                                  <span *ngIf=\"formBuilder.get('fecha')?.errors?.['required']\">Requiere un fecha</span>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"mb-3\">\r\n                                <label>Hora</label><span class=\"text-danger\"> *</span>\r\n                                <input type=\"time\" class=\"form-control\" id=\"hora\" name=\"hora\"\r\n                                  formControlName=\"hora\" autocomplete=\"off\" [class]=\"esCampoValido('hora')\" [(ngModel)]=\"horaActual\" disabled/>\r\n                                <div class=\"invalid-feedback\">\r\n                                    <!-- aqui la validación-->\r\n                                    <span *ngIf=\"formBuilder.get('hora')?.errors?.['required']\">Requiere una hora</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"mb-3\">\r\n                              <label>Kilometraje</label><span class=\"text-danger\"> *</span>\r\n                              <input type=\"text\" class=\"form-control\" id=\"kilometraje\" name=\"kilometraje\" \r\n                                formControlName=\"kilometraje\" autocomplete=\"off\" [class]=\"esCampoValido('kilometraje')\" pattern=\"\" (keypress)=\"OnlyNumbersAllowed($event)\" placeholder=\"Escribe el kilometraje\"/>\r\n                                <div class=\"invalid-feedback\">\r\n                                  <!-- aqui la validación-->\r\n                                  <span *ngIf=\"formBuilder.get('kilometraje')?.errors?.['required']\">Requiere datos en el campo</span>\r\n                                  \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n            \r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"mb-3\">\r\n                              <label>Combustible</label><span class=\"text-danger\"> *</span>\r\n                              <select class=\"form-control form-select\" id=\"combustible\" name=\"combustible\" [ngModel]=\"entradasalidaOd!=null ? entradasalidaOd.combustible : ''\"\r\n                                formControlName=\"combustible\" autocomplete=\"off\" [class]=\"esCampoValido('combustible')\" placeholder=\"Escribe el tipo de combustible\">\r\n                                <option value=\"\">Seleccione la opción correspondiente</option>\r\n                                <option value=\"Un tanque\">Un tanque</option>\r\n                                <option value=\"Mas de tres cuarto de tanque\">Mas de tres cuarto de tanque</option>\r\n                                <option value=\"Tres cuarto de tanque\">Tres cuarto de tanque</option>\r\n                                <option value=\"Menos de tres cuarto de tanque\">Menos de tres cuarto de tanque</option>\r\n                                <option value=\"Mas de medio tanque\">Mas de medio tanque</option>\r\n                                <option value=\"Medio tanque\">Medio tanque</option>\r\n                                <option value=\"Menos de medio tanque\">Menos de medio tanque</option>\r\n                                <option value=\"Mas de un cuarto de tanque\">Mas de un cuarto de tanque</option>\r\n                                <option value=\"Un cuarto de tanque\">Un cuarto de tanque</option>\r\n                                <option value=\"Menos de un cuarto de tanque\">Menos de un cuarto de tanque</option>\r\n                                \r\n                            </select>\r\n                                <div class=\"invalid-feedback\">\r\n                                  <!-- aqui la validación-->\r\n                                  <span *ngIf=\"formBuilder.get('combustible')?.errors?.['required']\">Requiere datos en el campo</span>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n                <div class=\"d-flex justify-content-end mt-4\">\r\n                    <button type=\"submit\" class=\"btn btn-primary me-2\" id=\"btn-save\" name=\"btn-save\">\r\n                     {{ titulo !== 'Editar' ? 'Guardar' : 'Modificar' }}\r\n                    </button>\r\n\r\n                    <button type=\"button\" class=\"btn btn-dark\" id=\"btn-cancel\" name=\"btn-cancel\" aria-hidden=\"true\"\r\n                        (click)=\"modal.dismiss('Cross click')\">\r\n                        Cancelar\r\n                    </button>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n<!-- Modal -->\r\n<script>\r\n    // Deshabilitar el cursor en el campo de entrada\r\n    const readonlyInput = document.getElementById(\"readonlyInput\");\r\n\r\n    readonlyInput.addEventListener(\"mousedown\", (event) => {\r\n        event.preventDefault();\r\n    });\r\n\r\n    readonlyInput.addEventListener(\"keydown\", (event) => {\r\n        event.preventDefault();\r\n    });\r\n</script>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { IEntradaSalida } from '../../interface/EntSalinterface';\r\nimport { ListaentradasalidaService } from '../../service/listaentradasalida.service';\r\n\r\n@Component({\r\n  selector: 'app-tabla',\r\n  templateUrl: './tabla.component.html',\r\n  styleUrls: ['./tabla.component.scss']\r\n})\r\nexport class TablaComponent implements OnInit {\r\n  entradasalidas: IEntradaSalida[]=[];//para almacenar los resultados\r\n  @Input() entraoOd!: IEntradaSalida[];\r\n  @Input() queryString: string;\r\n  p: any;\r\n\r\n  constructor(private listaentradasalidaservice: ListaentradasalidaService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.obtenerLista();\r\n  }\r\n\r\n  private obtenerLista() {//para poder mostrar e la tabla\r\n    this.listaentradasalidaservice.ObtenerLista.subscribe((resp: IEntradaSalida[]) => {\r\n      this.entradasalidas = resp;\r\n      console.log(resp);\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"table-responsive mb-0\">\r\n    <table class=\"table table-centered table-nowrap\">\r\n        <thead class=\"table-light\">\r\n            <tr>\r\n                <th class=\"align-middle\">Tipo</th>\r\n                    <th class=\"align-middle\">Fecha</th>\r\n                    <th class=\"align-middle\">Hora</th>\r\n                    <th class=\"align-middle\">Combustible</th>\r\n                    <th class=\"align-middle\">Kilometraje</th>\r\n                    <th class=\"align-middle\">Acciones</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let data of entradasalidas |  filter:queryString | paginate: { itemsPerPage: 5, currentPage: p }\">\r\n                <td>{{data.tipo}}</td>\r\n                <td>{{data.fecha}}</td>\r\n                <td>{{data.hora}}</td>\r\n                <td>{{data.combustible}}</td>\r\n                <td>{{data.kilometraje}}Km</td>\r\n                <td class=\"align-middle text-center text-center\">\r\n\r\n                    <!--       botones para editar -->\r\n                    <app-modal [leyenda]=\"'Editar'\" [titulo]=\"'Editar'\" [leyendas]=\"'entrada y salida'\"[entradasalidaOd]=\"data\"\r\n                    *ngIf=\"data.tipo != 'Motorista'\"></app-modal>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n<div class=\"pagination pagination-rounded justify-content-end mb-2\">\r\n    <pagination-controls (pageChange)=\"p = $event\" nextLabel=\"Siguiente\" previousLabel=\"Anterior\"></pagination-controls>\r\n</div>\r\n<!-- end table -->\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { EntradaSalidaI, IEntradaSalida } from '../../interface/EntSalinterface';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ListaentradasalidaService } from '../../service/listaentradasalida.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { NAME_VALIDATE } from 'src/app/constants/constants';\r\n\r\n\r\n@Component({\r\n  selector: 'app-vistaentradasalida',\r\n  templateUrl: './vistaentradasalida.component.html',\r\n  styleUrls: ['./vistaentradasalida.component.scss']\r\n})\r\nexport class VistaentradasalidaComponent implements OnInit {\r\n  //formularioGeneral!: FormGroup;//formularioGeneral= new FormGroup({});\r\n  entradasalidas: IEntradaSalida[]=[];//para almacenar los resultados\r\n  breadCrumbItems: Array<{}>;\r\n  @Input() queryString: string;\r\n  @Input() entradasalidaOd!: IEntradaSalida;\r\n  private isName: string= NAME_VALIDATE;\r\n  ///public fechaminima:Date;\r\n  //public fechamaxima:Date;\r\n  //public fechaStrMinima:string;\r\n  //public fechaStrMaxima:string;\r\n\r\n\r\n\r\n  formBuilder!: FormGroup;\r\n  page: number = 0;\r\n  size: number = 5;\r\n  isFirst : boolean = false;\r\n  isLast : boolean= false;\r\n  totalPages: Array<number> = []\r\n  totalElement: number = 0\r\n  p: any;\r\n  term: string = '';\r\n  //currentDate: Date = new Date();\r\n  //formattedDate: string = this.datePipe.transform(this.currentDate, 'yyyy-MM-dd');\r\n\r\n\r\n\r\n  /////para probar\r\n  submit: boolean;\r\n  formsubmit: boolean;\r\n  typesubmit: boolean;\r\n  rangesubmit: boolean;\r\n  validationform: FormGroup; \r\n  //public myForm: FormGroup;\r\n  \r\n  constructor(private modalService: NgbModal, private fb: FormBuilder, private listaentradasalidaservice: ListaentradasalidaService, private router: Router) { \r\n    this.breadCrumbItems = [{ label: 'Entradas y Salidas' }, { label: 'Vista', active: true }];//Migas de pan\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.obtenerLista();\r\n    this.formBuilder = this.Iniciarformulario();\r\n\r\n    //validacion del campo de fecha\r\n    //this.myForm= this.createform();\r\n    //this.fechaminima= new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()-1)\r\n    //this.fechaStrMinima=this.pd.transform(this.fechaminima, \"yyyy-MM-dd\", 'UTC');\r\n    //this.fechamaxima= new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()+1)\r\n    //this.fechaStrMaxima=this.pd.transform(this.fechamaxima, \"yyyy-MM-dd\", 'UTC');\r\n  }\r\n  \r\n \r\n  OnlyNumbersAllowed(event):boolean{\r\n    const charCode= (event.wich)? event.wich: event.keyCode;\r\n    if(charCode > 31 && (charCode < 48 || charCode >75))\r\n    {\r\n      console.log('charCode restricted is' + charCode);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  \r\n  guardar() {\r\n    if (this.formBuilder.valid) {\r\n      if (this.entradasalidaOd != null) {\r\n        //this.editando();\r\n      } else {\r\n        console.log(\"antes de registrar\");\r\n       this.registrando();\r\n      }\r\n    } else {\r\n      Swal.fire({\r\n        position: 'center',\r\n        title: 'Faltan datos en el formuario',\r\n        text: 'submit disparado, formulario no valido',\r\n        icon: 'warning',\r\n      });\r\n    }\r\n  }\r\n\r\n  registrando() {\r\n    const listando = this.formBuilder.value;\r\n  \r\n\r\n      const entsali: EntradaSalidaI = new EntradaSalidaI(listando.tipo, listando.fecha, listando.hora, listando.combustible, listando.kilometraje);\r\n      console.log(entsali);\r\n\r\n      this.listaentradasalidaservice.NuevosDatos(entsali).subscribe((resp: any) => {\r\n        if (resp) {\r\n          /* console.log(resp); */\r\n          Swal.fire({\r\n            position: 'center',\r\n            title: 'Buen trabajo',\r\n            text: 'Datos guardados con exito',\r\n            icon: 'info',\r\n          });\r\n          this.formBuilder.reset();\r\n          this.recargar();\r\n          this.modalService.dismissAll();\r\n        }\r\n      }, (err: any) => {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: 'Algo paso, hable con el administrador',\r\n        });\r\n        this.obtenerLista();\r\n          this.recargar();\r\n      });\r\n    \r\n  }\r\n  recargar() {\r\n    let currentUrl = this.router.url;\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    this.router.onSameUrlNavigation = \"reload\";\r\n    this.router.navigate([currentUrl]);\r\n  }\r\n\r\nprivate Iniciarformulario(): FormGroup {1\r\n  return this.fb.group({\r\n    tipo: ['', [Validators.required, Validators.pattern(this.isName)]],\r\n    fecha: ['', [Validators.required]],\r\n    hora: ['', [Validators.required]],\r\n    kilometraje: ['', [Validators.required]],\r\n    combustible: ['', [Validators.required]],\r\n\r\n  });\r\n}\r\n\r\nprivate obtenerLista() {//para poder mostrar e la tabla\r\n  this.listaentradasalidaservice.ObtenerLista.subscribe((resp: IEntradaSalida[]) => {\r\n    this.entradasalidas = resp;\r\n    console.log(resp);\r\n  });\r\n}\r\n\r\nesCampoValido(campo: string){\r\n  const validarCampo= this.formBuilder.get(campo);\r\n  return !validarCampo?.valid && validarCampo?.touched ? 'is-invalid' : validarCampo?.touched? 'is-valid': '';\r\n\r\n}\r\n/**\r\n     * Open modal\r\n     * @param content modal content\r\n     */\r\nopenModal(content: any) {\r\n  this.modalService.open(content);\r\n\r\n}\r\n\r\n  /**********************PAGINACION************************* */\r\n\r\n  setSize(num: number) {\r\n    this.size = num;\r\n    //this.cargarDatos();\r\n  }\r\n\r\n  setPage(page: number) {\r\n    this.page = page;\r\n    //this.cargarDatos();\r\n\r\n  }\r\n\r\n  retroceder(){\r\n    if(!this.isFirst){\r\n      this.page--;\r\n    //  this.cargarDatos();\r\n    }\r\n    return this.page;\r\n  }\r\n  adelante(){\r\n    if(!this.isLast){\r\n      this.page++;\r\n      //this.cargarDatos();\r\n    }\r\n    return this.page;\r\n  }\r\n\r\n\r\n  ////probando\r\n  get form() {\r\n    return this.validationform.controls;\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"container-fluid\">\r\n    <app-page-title title=\"LISTA DE MISIONES\" [breadcrumbItems]=\"breadCrumbItems\"></app-page-title>\r\n  \r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <div class=\"row mb-2\">\r\n              <div class=\"col-sm-8\">\r\n                <div class=\"search-box col-sm-4 mb-2 d-inline-block\">\r\n                  <div class=\"position-relative\">\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Buscar\" >\r\n                    <i class=\"bx bx-search-alt search-icon\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- Table data -->\r\n            <div class=\"table-responsive mb-0\" id=\"htmlData\" >\r\n              <table class=\"table table-centered table-nowrap\" >\r\n                <thead class=\"table\">\r\n                  <tr>\r\n                    <th class=\"align-middle\">Misión</th>\r\n                    <th class=\"align-middle\">Fecha</th>\r\n                    <th class=\"align-middle\">Hora</th>\r\n                    <th class=\"align-middle\">Combustible</th>\r\n                    <th class=\"align-middle\">Kilometraje</th>\r\n                    <th class=\"align-middle\">Acciones</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <!--*ngFor=\"let data of estudiante; let i = index\"-->\r\n                  <tr *ngFor=\"let data of entradasalidas |  filter:queryString | paginate: { itemsPerPage: 5, currentPage: p }\">\r\n                    <td>{{data.tipo}}</td>\r\n                    <td>{{data.fecha}}</td>\r\n                    <td>{{data.hora}}</td>\r\n                    <td>{{data.combustible}}</td>\r\n                    <td>{{data.kilometraje}}Km</td>\r\n                    <td>\r\n                      <button\r\n                        class=\"btn btn-outline-info btn-sm \" (click)=\"openModal(contentA)\">+Salida</button>\r\n                      <button\r\n                        class=\"btn btn-outline-danger btn-sm \" (click)=\"openModal(contentB)\">+Entrada</button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div class=\"pagination pagination-rounded justify-content-end mb-2\">\r\n                <pagination-controls (pageChange)=\"p = $event\" nextLabel=\"Siguiente\" previousLabel=\"Anterior\"></pagination-controls>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <ng-template #contentA role=\"document\" let-modal>\r\n    <div id=\"\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\"\r\n      aria-hidden=\"true\">\r\n      <!-- encabezado -->\r\n      <div class=\"modal-header\">\r\n        <h3 class=\"modal-title\" id=\"exampleModalLabel\">REGISTRO DE SALIDAS</h3>\r\n        <button type=\"button\" class=\"btn-close\" aria-hidden=\"true\"\r\n          (click)=\"modal.dismiss('Cross click')\"></button>\r\n      </div>\r\n      <div class=\"card\">\r\n        <div class=\"modal-body\">\r\n          <!-- formulario -->\r\n          <form (ngSubmit)=\"guardar()\" [formGroup]=\"formBuilder\">\r\n            <label class=\"text-danger mb-4\"> * Campo obligatorio</label>\r\n            <div class=\"row\">\r\n              <!-- primera fila -->\r\n              <div class=\"col-md-12\">\r\n                <div class=\"mb-3\">\r\n                  <label>Misión</label><span class=\"text-danger\"> *</span>\r\n                  <input type=\"text\" class=\"form-control\" id=\"tipo\" name=\"tipo\" placeholder=\"Escribe tipo de misión\"\r\n                    formControlName=\"tipo\" [class]=\"esCampoValido('tipo')\" />\r\n                    <div class=\"invalid-feedback\">\r\n                      <!-- aqui la validación-->\r\n                      <span *ngIf=\"formBuilder.get('tipo')?.errors?.['required']\">Requiere un nombre para el campo</span>\r\n                      <span *ngIf=\"formBuilder.get('tipo')?.errors?.['pattern']\">nombre no valido</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label>Fecha</label><span class=\"text-danger\"> *</span>\r\n                      <input type=\"date\" class=\"form-control\" id=\"fecha\" name=\"fecha\"\r\n                        formControlName=\"fecha\" autocomplete=\"off\" [class]=\"esCampoValido('fecha')\" />\r\n                        <div class=\"invalid-feedback\">\r\n                          <!-- aqui la validación-->\r\n                          <span *ngIf=\"formBuilder.get('tipo')?.errors?.['required']\">Requiere un fecha</span>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                        <label>Hora</label><span class=\"text-danger\"> *</span>\r\n                        <input type=\"time\" class=\"form-control\" id=\"hora\" name=\"hora\"\r\n                          formControlName=\"hora\" autocomplete=\"off\" [class]=\"esCampoValido('hora')\"/>\r\n                          <div class=\"invalid-feedback\">\r\n                            <!-- aqui la validación-->\r\n                            <span *ngIf=\"formBuilder.get('hora')?.errors?.['required']\">Requiere una hora</span>\r\n                          </div>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-12\">\r\n                <div class=\"mb-3\">\r\n                  <label>Kilometraje</label><span class=\"text-danger\"> *</span>\r\n                  <input type=\"text\" class=\"form-control\" id=\"kilometraje\" name=\"kilometraje\"\r\n                    formControlName=\"kilometraje\" autocomplete=\"off\" [class]=\"esCampoValido('kilometraje')\" pattern=\"\" (keypress)=\"OnlyNumbersAllowed($event)\"/>\r\n                    <div class=\"invalid-feedback\">\r\n                      <!-- aqui la validación-->\r\n                      <span *ngIf=\"formBuilder.get('kilometraje')?.errors?.['required']\">Requiere datos en el campo</span>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-md-12\">\r\n                <div class=\"mb-3\">\r\n                  <label>Combustible</label><span class=\"text-danger\"> *</span>\r\n                  <input type=\"text\" class=\"form-control\" id=\"combustible\" name=\"combustible\"\r\n                    formControlName=\"combustible\" autocomplete=\"off\" [class]=\"esCampoValido('combustible')\"/>\r\n                    <div class=\"invalid-feedback\">\r\n                      <!-- aqui la validación-->\r\n                      <span *ngIf=\"formBuilder.get('combustible')?.errors?.['required']\">Requiere datos en el campo</span>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n  \r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-dark\"\r\n                (click)=\"modal.dismiss('Cross click')\">Cerrar</button>\r\n              <button type=\"submit\" class=\"btn btn-info\" id=\"btn-save-event\">Guardar</button>\r\n            </div>\r\n            \r\n          </form>\r\n        </div>\r\n        <!-- footer -->\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <ng-template #contentB role=\"document\" let-modal>\r\n    <div id=\"\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\"\r\n      aria-hidden=\"true\">\r\n      <!-- encabezado -->\r\n      <div class=\"modal-header\">\r\n        <h3 class=\"modal-title\" id=\"exampleModalLabel\">REGISTRO DE ENTRADAS</h3>\r\n        <button type=\"button\" class=\"btn-close\" aria-hidden=\"true\"\r\n          (click)=\"modal.dismiss('Cross click')\"></button>\r\n      </div>\r\n      <div class=\"card\">\r\n        <div class=\"modal-body\">\r\n          <!-- formulario -->\r\n          <form (ngSubmit)=\"guardar()\" [formGroup]=\"formBuilder\">\r\n            <label class=\"text-danger mb-4\"> * Campo obligatorio</label>\r\n            <div class=\"row\">\r\n              <!-- primera fila -->\r\n              <div class=\"col-md-12\">\r\n                <div class=\"mb-3\">\r\n                  <label>Misión</label><span class=\"text-danger\"> *</span>\r\n                  <input type=\"text\" class=\"form-control\" id=\"tipo\" name=\"tipo\" placeholder=\"Escribe tipo de misión\"\r\n                    formControlName=\"tipo\" [class]=\"esCampoValido('tipo')\" />\r\n                    <div class=\"invalid-feedback\">\r\n                      <!-- aqui la validación-->\r\n                      <span *ngIf=\"formBuilder.get('tipo')?.errors?.['required']\">Requiere un nombre para el campo</span>\r\n                      <span *ngIf=\"formBuilder.get('tipo')?.errors?.['pattern']\">nombre no valido</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                      <label>Fecha</label><span class=\"text-danger\"> *</span>\r\n                      <input type=\"date\" class=\"form-control\" id=\"fecha\" name=\"fecha\"\r\n                        formControlName=\"fecha\" autocomplete=\"off\" [class]=\"esCampoValido('fecha')\" />\r\n                        <div class=\"invalid-feedback\">\r\n                          <!-- aqui la validación-->\r\n                          <span *ngIf=\"formBuilder.get('tipo')?.errors?.['required']\">Requiere un fecha</span>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"mb-3\">\r\n                        <label>Hora</label><span class=\"text-danger\"> *</span>\r\n                        <input type=\"time\" class=\"form-control\" id=\"hora\" name=\"hora\"\r\n                          formControlName=\"hora\" autocomplete=\"off\" [class]=\"esCampoValido('hora')\"/>\r\n                          <div class=\"invalid-feedback\">\r\n                            <!-- aqui la validación-->\r\n                            <span *ngIf=\"formBuilder.get('hora')?.errors?.['required']\">Requiere una hora</span>\r\n                          </div>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-12\">\r\n                <div class=\"mb-3\">\r\n                  <label>Kilometraje</label><span class=\"text-danger\"> *</span>\r\n                  <input type=\"text\" class=\"form-control\" id=\"kilometraje\" name=\"kilometraje\"\r\n                    formControlName=\"kilometraje\" autocomplete=\"off\" [class]=\"esCampoValido('kilometraje')\" pattern=\"\" (keypress)=\"OnlyNumbersAllowed($event)\"/>\r\n                    <div class=\"invalid-feedback\">\r\n                      <!-- aqui la validación-->\r\n                      <span *ngIf=\"formBuilder.get('kilometraje')?.errors?.['required']\">Requiere datos en el campo</span>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-md-12\">\r\n                <div class=\"mb-3\">\r\n                  <label>Combustible</label><span class=\"text-danger\"> *</span>\r\n                  <input type=\"text\" class=\"form-control\" id=\"combustible\" name=\"combustible\"\r\n                    formControlName=\"combustible\" autocomplete=\"off\" [class]=\"esCampoValido('combustible')\"/>\r\n                    <div class=\"invalid-feedback\">\r\n                      <!-- aqui la validación-->\r\n                      <span *ngIf=\"formBuilder.get('combustible')?.errors?.['required']\">Requiere datos en el campo</span>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n  \r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-dark\"\r\n                (click)=\"modal.dismiss('Cross click')\">Cerrar</button>\r\n              <button type=\"submit\" class=\"btn btn-info\" id=\"btn-save-event\">Guardar</button>\r\n            </div>\r\n            \r\n          </form>\r\n        </div>\r\n        <!-- footer -->\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n\r\n  \r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { EntradaSalidaI, IEntradaSalida, SolitudVehiculoI } from '../interface/EntSalinterface';\r\nimport {  IsolicitudVehiculo } from '../interface/VehiculoEntradasalida';\r\nimport {Observable } from 'rxjs';\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ISolicitudvalep } from '../../solicitud-vale-paginacion/interface/solicitudvalep.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ListaentradasalidaService {\r\n  private baseUrl: string = environment.baseUrl;///base url\r\n  // Declarar requestOptions como una variable global\r\n  private requestOptions: any;\r\n\r\n  listDeMisiones: IsolicitudVehiculo[] = [];\r\n  constructor(private http: HttpClient) {\r\n\r\n    const token = localStorage.getItem('token');\r\n    const headers = new HttpHeaders({\r\n      Authorization: `Bearer ${token}`\r\n    });\r\n    this.requestOptions = {\r\n      headers: headers\r\n    };\r\n  }\r\n\r\n  getMisiones() {\r\n\r\n    const token = localStorage.getItem('token');\r\n    const headers = new HttpHeaders({\r\n      Authorization: `Bearer ${token}`\r\n    });\r\n    const requestOptions = {\r\n      headers: headers\r\n    };\r\n\r\n    this.http.get(`${this.baseUrl}/solicitudvehiculo/lista`, requestOptions)\r\n\r\n      .pipe(map((resp: any) => resp as IsolicitudVehiculo[]))\r\n      .subscribe(\r\n        (lista: IsolicitudVehiculo[]) => {\r\n          console.log(lista);\r\n          this.listDeMisiones = lista;\r\n          console.log(lista);\r\n        },\r\n        (error) => {\r\n          console.error(\"Error al obtener las misiones:\", error);\r\n        }\r\n      );\r\n  }\r\n\r\n  get ObtenerLista(): Observable<IEntradaSalida[]> {\r\n    // Recupera el token de acceso desde el local storage\r\n    const token = localStorage.getItem('token');\r\n\r\n    // Crea un objeto HttpHeaders para agregar el token de acceso en el encabezado 'Authorization'\r\n    const headers = new HttpHeaders({\r\n      Authorization: `Bearer ${token}`\r\n    });\r\n\r\n    // Configura las opciones de la solicitud HTTP con los encabezados personalizados\r\n    const requestOptions = {\r\n      headers: headers\r\n    };\r\n\r\n    return this.http.get<IEntradaSalida[]>(`${this.baseUrl}/entradasalida`, requestOptions);\r\n  }\r\n\r\n\r\n\r\n  NuevosDatos(entrasali: EntradaSalidaI): any {\r\n    const token = localStorage.getItem('token');\r\n    const headers = new HttpHeaders({\r\n      Authorization: `Bearer ${token}`\r\n    });\r\n    this.requestOptions = {\r\n      headers: headers\r\n    };\r\n    return this.http.post(`${this.baseUrl}/entradasalida/insertar`, entrasali, this.requestOptions);\r\n  }\r\n\r\n  modificandoFecha(modi: SolitudVehiculoI ): Observable<Object> {\r\n    const token = localStorage.getItem('token');\r\n        const headers = new HttpHeaders({\r\n          Authorization: `Bearer ${token}`\r\n        });\r\n        this.requestOptions = {\r\n          headers: headers\r\n        };\r\n    return this.http.put(`${this.baseUrl}/solicitudvehiculo/fecharegreso`, modi,this.requestOptions);\r\n  }\r\n\r\n  public putEntradasalida(entrasali: EntradaSalidaI): Observable<Object> {\r\n    return this.http.put(`${this.baseUrl}/entradasalida/{{id}}`, entrasali, this.requestOptions);\r\n  }\r\n  public putEmpleado(ent: IEntradaSalida): any {\r\n    return this.http.put(`${this.baseUrl}/entradasalida/editar/${ent.id}`, ent, this.requestOptions);\r\n  }\r\n\r\n\r\n  buscarVehiculo(termino: string): Observable<IsolicitudVehiculo[]> {\r\n    const token = localStorage.getItem('token');\r\n    const headers = new HttpHeaders({\r\n      Authorization: `Bearer ${token}`\r\n    });\r\n    const requestOptions = {\r\n      headers: headers\r\n    };\r\n\r\n    if (termino.length > 1) {\r\n\r\n     return this.http.get<IsolicitudVehiculo[]>(`${this.baseUrl}/solicitudvehiculo/listasinpagina/${termino}`, requestOptions).pipe(\r\n          map(vehiculos=>vehiculos.filter(vehiculos=>vehiculos.estado===5))\r\n      );\r\n    } else {\r\n      return this.http.get<IsolicitudVehiculo[]>(`${this.baseUrl}/entradasalida/todas`, requestOptions);\r\n\r\n    }\r\n  }\r\n\r\n  // Función para comparar fechas\r\n  compararFechasSalida(fechaSalida: string): boolean {\r\n    const fechaActual = new Date();\r\n    // Convierte ambas fechas a cadenas en formato de fecha (sin hora)\r\n    const fechaSalidaStr = fechaSalida.toString().split('T')[0];\r\n    const fechaActualStr = fechaActual.toISOString().split('T')[0];\r\n\r\n    console.log(\"Salida sistema: \" + fechaSalidaStr);\r\n    console.log(\"Actual: \" + fechaActualStr);\r\n\r\n    // Compara si las fechas son iguales\r\n    return fechaSalidaStr === fechaActualStr;\r\n  }\r\n\r\n  // Función para comparar fechas\r\n  compararFechasEntrada(fechaEntrada: string): boolean {\r\n    const fechaActual = new Date();\r\n    // Convierte ambas fechas a cadenas en formato de fecha (sin hora)\r\n    const fechaEntradaStr = fechaEntrada.toString().split('T')[0];\r\n    const fechaActualStr = fechaActual.toISOString().split('T')[0];\r\n    // Compara si las fechas son iguales\r\n    return fechaEntradaStr === fechaActualStr;\r\n  }\r\n\r\n  /*obtenerImagenes(): Observable<IVehiculoentradaSalida[]> {\r\n \r\n     const token = localStorage.getItem('token');\r\n     const headers = new HttpHeaders({\r\n       Authorization: `Bearer ${token}`\r\n     });\r\n     const requestOptions = {\r\n       headers: headers\r\n     };\r\n     return this.http.get<IVehiculoentradaSalida[]>(`${this.baseUrl}/vehiculo/listasinpagina`, requestOptions);\r\n   }*/\r\n\r\n  listarEstado(estado: string, id: number): Observable<IEntradaSalida> {\r\n    const token = localStorage.getItem('token');\r\n    const headers = new HttpHeaders({\r\n      Authorization: `Bearer ${token}`\r\n    });\r\n    const requestOptions = {\r\n      headers: headers\r\n    };\r\n    return this.http.get<IEntradaSalida>(`${this.baseUrl}/entradasalida/buscarentradasalida?filtro=${estado}&tipo=${id}`, requestOptions);\r\n  }\r\n\r\n  extrayendokilometraje(id: number): Observable<IEntradaSalida> {\r\n    const token = localStorage.getItem('token');\r\n    const headers = new HttpHeaders({\r\n      Authorization: `Bearer ${token}`\r\n    });\r\n    const requestOptions = {\r\n      headers: headers\r\n    };\r\n    return this.http.get<IEntradaSalida>(`${this.baseUrl}/entradasalida/list?filtro=${id}`, requestOptions);\r\n  }\r\n\r\n  obtenercodigosolicitudvale(id: number): Observable<ISolicitudvalep> {\r\n    const token = localStorage.getItem('token');\r\n    const headers = new HttpHeaders({\r\n      Authorization: `Bearer ${token}`\r\n    });\r\n    const requestOptions = {\r\n      headers: headers\r\n    };\r\n    return this.http.get<ISolicitudvalep>(`${this.baseUrl}/solicitudvale/buscarcodigosolicitudvale?codigo=${id}`, requestOptions);\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}