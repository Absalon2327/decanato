{"version":3,"file":"src_app_modules_proveedor_proveedor_module_ts.js","mappings":"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","sources":["./src/app/modules/proveedor/components/modal/modal.component.ts","./src/app/modules/proveedor/components/modal/modal.component.html","./src/app/modules/proveedor/pages/mostrar/mostrar.component.ts","./src/app/modules/proveedor/pages/mostrar/mostrar.component.html","./src/app/modules/proveedor/pages/tabla/tabla.component.ts","./src/app/modules/proveedor/pages/tabla/tabla.component.html","./src/app/modules/proveedor/proveedor-routing.module.ts","./src/app/modules/proveedor/proveedor.module.ts","./src/app/modules/proveedor/services/proveedor.service.ts"],"sourcesContent":["import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { IProveedor } from \"../../interfaces/proveedor.interface\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { ProveedorService } from \"../../services/proveedor.service\";\r\nimport { MensajesService } from \"src/app/shared/global/mensajes.service\";\r\nimport {\r\n  EMAIL_VALIDATE_GENERAL,\r\n  NAME_STRING_NUMBER_VALIDATE,\r\n  NAME_TILDES_VALIDATE,\r\n} from \"src/app/constants/constants\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: \"app-modal\",\r\n  templateUrl: \"./modal.component.html\",\r\n  styleUrls: [\"./modal.component.scss\"],\r\n})\r\nexport class ModalComponent implements OnInit {\r\n  @Input() proveedor!: IProveedor;\r\n  @Input() leyenda!: string;\r\n\r\n  formularioGeneral: FormGroup;\r\n\r\n  private isEmail: string = EMAIL_VALIDATE_GENERAL;\r\n  private isNombre: string = NAME_TILDES_VALIDATE;\r\n  private isProveedor: string = NAME_STRING_NUMBER_VALIDATE;\r\n\r\n  alerts = [\r\n    {\r\n      id: 1,\r\n      type: \"info\",\r\n      message:\r\n        \" Seleccione un tipo de proveedor y complete los campos obligatorios (*).\",\r\n      show: false,\r\n    },\r\n  ];\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private fb: FormBuilder,\r\n    private proveedorService: ProveedorService,\r\n    private mensajesService: MensajesService\r\n  ) {\r\n    this.formularioGeneral = this.iniciarFormulario();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.leyenda == \"Editar\") {\r\n      this.formularioGeneral.patchValue(this.proveedor);\r\n    }\r\n  }\r\n\r\n  private iniciarFormulario() {\r\n    return this.fb.group({\r\n      id: [\"\"],\r\n      tipo: [\"1\", [Validators.required]],\r\n      nombre: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.pattern(this.isProveedor),\r\n          Validators.minLength(2),\r\n          Validators.maxLength(200),\r\n        ],\r\n      ],\r\n      encargado: [\r\n        \"\",\r\n        [Validators.maxLength(200), Validators.pattern(this.isNombre)],\r\n      ],\r\n      telefono: [\"\", [Validators.required, this.validatePhoneNumber]],\r\n      email: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(2),\r\n          Validators.maxLength(100),\r\n          Validators.pattern(this.isEmail),\r\n        ],\r\n      ],\r\n      direccion: [\r\n        \"\",\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(2),\r\n          Validators.maxLength(750),\r\n        ],\r\n      ],\r\n    });\r\n  }\r\n\r\n  async guardar() {\r\n    if (this.formularioGeneral.valid) {\r\n      if (this.proveedor?.id) {\r\n        //Modificar\r\n        this.editando();\r\n      } else {\r\n        // Guardar\r\n        this.registrando();\r\n      }\r\n    } else {\r\n      this.mensajesService.mensajesToast(\r\n        \"warning\",\r\n        \"Complete los que se indican\"\r\n      );\r\n      return Object.values(this.formularioGeneral.controls).forEach((control) =>\r\n        control.markAsTouched()\r\n      );\r\n    }\r\n  }\r\n\r\n  registrando() {\r\n    const proveedor = this.formularioGeneral.value;\r\n    proveedor.estado = 8;\r\n\r\n    // Crear una variable para la alerta de carga\r\n    let loadingAlert: any;\r\n\r\n    // Mostrar SweetAlert de carga\r\n    loadingAlert = Swal.fire({\r\n      title: \"Espere un momento!\",\r\n      html: \"Se está procesando la información...\",\r\n      allowOutsideClick: false,\r\n      allowEscapeKey: false,\r\n      showCancelButton: false,\r\n      showConfirmButton: false,\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n      },\r\n    });\r\n\r\n    this.proveedorService.guardar(proveedor).subscribe({\r\n      next: (resp: any) => {\r\n        // Cerrar SweetAlert de carga\r\n        loadingAlert.close();\r\n        this.proveedorService.getProveedors();\r\n        this.mensajesService.mensajesToast(\"success\", \"Registro agregado\");\r\n        this.modalService.dismissAll();\r\n        this.limpiarCampos();\r\n      },\r\n      error: (err) => {\r\n        // Cerrar SweetAlert de carga\r\n        loadingAlert.close();\r\n        this.mensajesService.mensajesSweet(\r\n          \"error\",\r\n          \"Ups... Algo salió mal\",\r\n          err.error.message\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  editando() {\r\n    const proveedor = this.formularioGeneral.value;\r\n    proveedor.estado = this.proveedor.estado;\r\n\r\n    // Crear una variable para la alerta de carga\r\n    let loadingAlert: any;\r\n\r\n    // Mostrar SweetAlert de carga\r\n    loadingAlert = Swal.fire({\r\n      title: \"Espere un momento!\",\r\n      html: \"Se está procesando la información...\",\r\n      allowOutsideClick: false,\r\n      allowEscapeKey: false,\r\n      showCancelButton: false,\r\n      showConfirmButton: false,\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n      },\r\n    });\r\n\r\n    this.proveedorService.modificar(proveedor).subscribe({\r\n      next: (resp: any) => {\r\n        // Cerrar SweetAlert de carga\r\n        loadingAlert.close();\r\n        this.proveedorService.getProveedors();\r\n        this.mensajesService.mensajesToast(\"success\", \"Registro modificado\");\r\n        this.modalService.dismissAll();\r\n        this.limpiarCampos();\r\n      },\r\n      error: (err) => {\r\n        // Cerrar SweetAlert de carga\r\n        loadingAlert.close();\r\n        this.mensajesService.mensajesSweet(\r\n          \"error\",\r\n          \"Ups... Algo salió mal\",\r\n          err.error.message\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  esCampoValido(campo: string) {\r\n    const validarCampo = this.formularioGeneral.get(campo);\r\n    return !validarCampo?.valid && validarCampo?.touched\r\n      ? \"is-invalid\"\r\n      : validarCampo?.touched\r\n      ? \"is-valid\"\r\n      : \"\";\r\n  }\r\n\r\n  limpiarCampos() {\r\n    this.formularioGeneral.reset();\r\n  }\r\n\r\n  getClassOf() {\r\n    if (this.leyenda == \"Editar\") {\r\n      return \"btn btn-info btn-sm btn-rounded boton-cuadrado mx-1\";\r\n    } else {\r\n      return \"btn-primary\";\r\n    }\r\n  }\r\n  getIconsOf() {\r\n    if (this.leyenda == \"Editar\") {\r\n      return \"<i class='mdi mdi-18px mdi-book-edit-outline'></i>\";\r\n    } else {\r\n      return \"Agregar\";\r\n    }\r\n  }\r\n\r\n  CambiarAlert(alert) {\r\n    alert.show = !alert.show;\r\n  }\r\n\r\n  restaurarAlerts() {\r\n    this.alerts.forEach((alert) => {\r\n      alert.show = true;\r\n    });\r\n  }\r\n\r\n  siMuestraAlertas() {\r\n    return this.alerts.every((alert) => alert.show);\r\n  }\r\n\r\n  validatePhoneNumber(control: any) {\r\n    const phoneNumber = control.value;\r\n\r\n    // Verifica si el número comienza con 7, 6 o 2\r\n    if (/^[726][0-9]{7}$/.test(phoneNumber)) {\r\n      return null; // Válido\r\n    } else {\r\n      return { invalidPhoneNumber: true }; // Inválido\r\n    }\r\n  }\r\n\r\n  openModal(content: any, proveedor: IProveedor) {\r\n    this.proveedor = proveedor;\r\n    if (this.leyenda != \"Editar\") {\r\n      this.limpiarCampos();\r\n    }\r\n\r\n    const modalOptions = {\r\n      centered: true,\r\n      size: \"\", // 'lg' para modal grande, 'sm' para modal pequeño\r\n      backdrop: \"static\" as \"static\",\r\n      keyboard: false, // Configura backdrop como 'static'\r\n    };\r\n    this.modalService.open(content, modalOptions);\r\n  }\r\n}\r\n","<button\r\n  type=\"button\"\r\n  class=\"btn btn-rounded\"\r\n  [ngClass]=\"getClassOf()\"\r\n  (click)=\"openModal(content, proveedor)\"\r\n  [innerHTML]=\"getIconsOf()\"\r\n>\r\n  {{ leyenda }}\r\n</button>\r\n\r\n<ng-template #content role=\"document\" let-modal>\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title mt-0\">{{ leyenda }} Proveedor</h5>\r\n\r\n    <div class=\"btn-alerta\" *ngIf=\"alerts\">\r\n      <i\r\n        class=\"mdi mdi-18px mdi-lightbulb-on-outline custom-cursor\"\r\n        ngbTooltip=\"Mostrar Ayuda\"\r\n        *ngIf=\"!siMuestraAlertas()\"\r\n        (click)=\"restaurarAlerts()\"\r\n      ></i>\r\n    </div>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn-close\"\r\n      aria-hidden=\"true\"\r\n      (click)=\"modal.dismiss('Cross click')\"\r\n    ></button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div *ngFor=\"let alert of alerts\">\r\n      <div\r\n        class=\"alert alert-{{ alert.type }} alert-dismissible fade show\"\r\n        role=\"alert\"\r\n        *ngIf=\"alert.show\"\r\n      >\r\n        <strong>Importante!</strong>\r\n        {{ alert.message }}\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn-close\"\r\n          (click)=\"CambiarAlert(alert)\"\r\n          aria-label=\"Close\"\r\n        ></button>\r\n      </div>\r\n    </div>\r\n\r\n    <form\r\n      id=\"formProveedor\"\r\n      name=\"formProveedor\"\r\n      (ngSubmit)=\"guardar()\"\r\n      [formGroup]=\"formularioGeneral\"\r\n    >\r\n      <div class=\"row\">\r\n        <div *ngIf=\"proveedor?.id\">\r\n          <input\r\n            id=\"id\"\r\n            name=\"id\"\r\n            type=\"hidden\"\r\n            readonly=\"true\"\r\n            class=\"form-control\"\r\n            formControlName=\"id\"\r\n          />\r\n        </div>\r\n        <div class=\"mb-4 mx-auto text-center\">\r\n          <input\r\n            type=\"radio\"\r\n            class=\"btn-check\"\r\n            name=\"tipo\"\r\n            id=\"tipo1\"\r\n            autocomplete=\"off\"\r\n            formControlName=\"tipo\"\r\n            [class]=\"esCampoValido('tipo')\"\r\n            [value]=\"13\"\r\n            checked\r\n          />\r\n          <label class=\"btn btn-outline-dark myconfig2\" for=\"tipo1\"\r\n            >Gasolinera</label\r\n          >\r\n          <input\r\n            type=\"radio\"\r\n            class=\"btn-check\"\r\n            name=\"tipo\"\r\n            id=\"tipo2\"\r\n            autocomplete=\"off\"\r\n            formControlName=\"tipo\"\r\n            [class]=\"esCampoValido('tipo')\"\r\n            [value]=\"14\"\r\n          />\r\n          <label class=\"btn btn-outline-primary myconfig1\" for=\"tipo2\"\r\n            >UES</label\r\n          >\r\n          <div class=\"invalid-feedback\">\r\n            <!-- aqui la validación-->\r\n            <span *ngIf=\"formularioGeneral.get('tipo')?.errors?.['required']\"\r\n              >Requiere un tipo de proveedor</span\r\n            >\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-4 col-md-6\">\r\n          <label for=\"nombre\">Nombre: <span class=\"text-danger\">*</span></label>\r\n          <input\r\n            id=\"nombre\"\r\n            name=\"nombre\"\r\n            maxlength=\"200\"\r\n            minlength=\"2\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            placeholder=\"Nombre\"\r\n            formControlName=\"nombre\"\r\n            [class]=\"esCampoValido('nombre')\"\r\n          />\r\n          <div class=\"invalid-feedback\">\r\n            <span *ngIf=\"formularioGeneral.get('nombre').hasError('required')\">\r\n              Requiere un nombre\r\n            </span>\r\n            <span *ngIf=\"formularioGeneral.get('nombre').hasError('minlength')\">\r\n              Digite más de 2 caracteres\r\n            </span>\r\n\r\n            <span *ngIf=\"formularioGeneral.get('nombre').hasError('maxlength')\">\r\n              Limite 200 caracteres\r\n            </span>\r\n            <span *ngIf=\"formularioGeneral.get('nombre').hasError('pattern')\"\r\n              >Solamente letras, numeros y respecte los espacios\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-4 col-md-6\">\r\n          <label for=\"encargado\">Persona encargada:</label>\r\n          <input\r\n            id=\"encargado\"\r\n            name=\"encargado\"\r\n            maxlength=\"200\"\r\n            minlength=\"2\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            placeholder=\"Encargado\"\r\n            formControlName=\"encargado\"\r\n            [class]=\"esCampoValido('encargado')\"\r\n          />\r\n          <div class=\"invalid-feedback\">\r\n            <span\r\n              *ngIf=\"formularioGeneral.get('encargado').hasError('maxlength')\"\r\n            >\r\n              Limite 200 caracteres\r\n            </span>\r\n            <span *ngIf=\"formularioGeneral.get('encargado').hasError('pattern')\"\r\n              >Solamente nombres o apellidos correctos y respecte los espacios\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-4 col-md-6\">\r\n          <label for=\"telefono\"\r\n            >Teléfono: <span class=\"text-danger\">*</span></label\r\n          >\r\n          <input\r\n            id=\"telefono\"\r\n            name=\"telefono\"\r\n            maxlength=\"9\"\r\n            mask=\"0000-0000\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            placeholder=\"Telefono\"\r\n            formControlName=\"telefono\"\r\n            [class]=\"esCampoValido('telefono')\"\r\n          />\r\n          <div class=\"invalid-feedback\">\r\n            <span\r\n              *ngIf=\"formularioGeneral.get('telefono').hasError('required')\"\r\n            >\r\n              Requiere un teléfono\r\n            </span>\r\n            <span\r\n              *ngIf=\"formularioGeneral.get('telefono')?.errors?.['pattern']\"\r\n            >\r\n              Solamente se permiten numeros enteros\r\n            </span>\r\n            <span\r\n              *ngIf=\"\r\n                formularioGeneral.get('telefono').hasError('invalidPhoneNumber')\r\n              \"\r\n            >\r\n              El teléfono debe comenzar con 7, 6 o 2 y tener 8 digitos\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-4 col-md-6\">\r\n          <label for=\"email\">Email: <span class=\"text-danger\">*</span></label>\r\n          <input\r\n            id=\"email\"\r\n            name=\"email\"\r\n            maxlength=\"100\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            placeholder=\"Email\"\r\n            formControlName=\"email\"\r\n            [class]=\"esCampoValido('email')\"\r\n          />\r\n          <div class=\"invalid-feedback\">\r\n            <span *ngIf=\"formularioGeneral.get('email').hasError('required')\">\r\n              Requiere un email\r\n            </span>\r\n            <span *ngIf=\"formularioGeneral.get('email').hasError('minlength')\">\r\n              Digite más de 2 caracteres\r\n            </span>\r\n\r\n            <span *ngIf=\"formularioGeneral.get('email').hasError('maxlength')\">\r\n              Limite 100 caracteres\r\n            </span>\r\n            <span *ngIf=\"formularioGeneral.get('email').hasError('pattern')\"\r\n              >Email no valido\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-4 col-md-12\">\r\n          <label for=\"direccion\"\r\n            >Dirección: <span class=\"text-danger\">*</span></label\r\n          >\r\n          <textarea\r\n            row=\"3\"\r\n            maxlength=\"750\"\r\n            class=\"form-control\"\r\n            placeholder=\"Dirección\"\r\n            formControlName=\"direccion\"\r\n            [class]=\"esCampoValido('direccion')\"\r\n          ></textarea>\r\n          <div class=\"invalid-feedback\">\r\n            <span\r\n              *ngIf=\"formularioGeneral.get('direccion').hasError('required')\"\r\n            >\r\n              Requiere una dirección\r\n            </span>\r\n            <span\r\n              *ngIf=\"formularioGeneral.get('direccion').hasError('minlength')\"\r\n            >\r\n              Digite más de 2 caracteres\r\n            </span>\r\n\r\n            <span\r\n              *ngIf=\"formularioGeneral.get('direccion').hasError('maxlength')\"\r\n            >\r\n              Limite 750 caracteres\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button\r\n      class=\"btn btn-primary w-sm me-2\"\r\n      type=\"submit\"\r\n      form=\"formProveedor\"\r\n    >\r\n      {{ leyenda !== \"Editar\" ? \"Guardar\" : \"Modificar\" }}\r\n    </button>\r\n    <button class=\"btn btn-dark w-sm\" (click)=\"modal.close('Close click')\">\r\n      {{ leyenda !== \"Editar\" ? \"Cerrar\" : \"Cancelar\" }}\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProveedorService } from '../../services/proveedor.service';\r\n\r\n@Component({\r\n  selector: 'app-mostrar',\r\n  templateUrl: './mostrar.component.html',\r\n  styleUrls: ['./mostrar.component.scss']\r\n})\r\nexport class MostrarComponent implements OnInit {\r\n\r\n  // bread crumb items\r\n  breadCrumbItems: Array<{}>;\r\n  offset = 0;\r\n\r\n  term: string = '';\r\n\r\n  constructor(private proveedorService: ProveedorService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.breadCrumbItems = [{ label: 'Proveedor' }, { label: 'Mostrar', active: true }];\r\n    this.proveedorService.getProveedors();\r\n  }\r\n\r\n  get listDatos() {\r\n    return this.proveedorService.listProveedor;\r\n  }\r\n\r\n}\r\n","<app-loader></app-loader>\r\n<div class=\"container-fluid\">\r\n  <app-page-title\r\n    title=\"Proveedores\"\r\n    [breadcrumbItems]=\"breadCrumbItems\"\r\n  ></app-page-title>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <div class=\"row mb-2\">\r\n            <div class=\"col-sm-4\">\r\n              <div class=\"search-box me-2 mb-2 d-inline-block\">\r\n                <div class=\"position-relative\">\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Buscar...\"\r\n                    [(ngModel)]=\"term\"\r\n                  />\r\n                  <i class=\"bx bx-search-alt search-icon\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-8\">\r\n              <div class=\"text-sm-end\">\r\n                <app-modal [leyenda]=\"'Agregar'\"></app-modal>\r\n              </div>\r\n            </div>\r\n            <!-- end col-->\r\n          </div>\r\n          <!-- Table data -->\r\n\r\n          <app-tabla [proveedores]=\"listDatos\" [queryString]=\"term\"></app-tabla>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { ProveedorService } from \"./../../services/proveedor.service\";\r\nimport { Component, OnInit, Input } from \"@angular/core\";\r\nimport { IProveedor } from \"../../interfaces/proveedor.interface\";\r\nimport Swal from \"sweetalert2\";\r\nimport { MensajesService } from \"src/app/shared/global/mensajes.service\";\r\n\r\n@Component({\r\n  selector: \"app-tabla\",\r\n  templateUrl: \"./tabla.component.html\",\r\n  styleUrls: [\"./tabla.component.scss\"],\r\n})\r\nexport class TablaComponent implements OnInit {\r\n  @Input() proveedores!: IProveedor[];\r\n  @Input() queryString!: string;\r\n  p: any;\r\n\r\n  proveedor: IProveedor;\r\n  cambio: string;\r\n\r\n  constructor(\r\n    private proveedorService: ProveedorService,\r\n    private mensajesService: MensajesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  cambiarEstado(proveedorED: IProveedor) {\r\n    if (proveedorED.estado == 8) {\r\n      this.cambio = \"Inactivo\";\r\n    } else {\r\n      this.cambio = \"Activo\";\r\n    }\r\n\r\n    Swal.fire({\r\n      icon: \"question\",\r\n      title: \"¿Cambiar el estado a \" + this.cambio + \"?\",\r\n      showDenyButton: true,\r\n      denyButtonColor: \"#2c3136\",\r\n      denyButtonText: \"No cambiar\",\r\n      confirmButtonColor: \"#972727\",\r\n      confirmButtonText: \"Cambiar\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.proveedor = proveedorED;\r\n        if (proveedorED.estado == 8) {\r\n          this.proveedor.estado = 9;\r\n          this.cambio = \"Inactivo\";\r\n        } else {\r\n          this.proveedor.estado = 8;\r\n          this.cambio = \"Activo\";\r\n        }\r\n        this.proveedorService.modificar(this.proveedor).subscribe(() => {\r\n          this.proveedorService.getProveedors();\r\n          this.mensajesService.mensajesToast(\"success\", \"Registro modificado\");\r\n        });\r\n      } else if (result.isDenied) {\r\n        this.mensajesService.mensajesToast(\"info\", \"Acción Cancelada!\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"table-responsive mb-0\">\r\n  <table class=\"table table-centered table-nowrap\">\r\n    <thead class=\"table-light\">\r\n      <tr>\r\n        <th class=\"align-middle\">Nombre</th>\r\n        <th class=\"align-middle\">Encargado</th>\r\n        <th class=\"align-middle\">Teléfono</th>\r\n        <th class=\"align-middle\">Email</th>\r\n        <th class=\"align-middle\">Dirección</th>\r\n        <th class=\"align-middle\">Tipo</th>\r\n        <th class=\"align-middle\">Estado</th>\r\n        <th class=\"align-middle text-center\">Acciones</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr\r\n        *ngFor=\"let data of proveedores  | filter : queryString | paginate : { itemsPerPage: 10, currentPage: p }; let i = index\"\r\n      >\r\n        <td>\r\n          <a class=\"text-body fw-bold\">\r\n            {{ data.nombre }}\r\n          </a>\r\n        </td>\r\n\r\n        <ng-container\r\n          *ngIf=\"data.encargado == null || data.encargado == ''; else encargado\"\r\n        >\r\n          <td>N/A</td>\r\n        </ng-container>\r\n        <ng-template #encargado>\r\n          <td>{{ data.encargado }}</td>\r\n        </ng-template>\r\n        <td>\r\n          {{ data.telefono | slice : 0 : 4 }}-{{ data.telefono | slice : 4 }}\r\n        </td>\r\n        <td>{{ data.email }}</td>\r\n        <td>{{ data.direccion }}</td>\r\n\r\n        <ng-container *ngIf=\"data.tipo == 13; else tipo\">\r\n          <td>Gasolinera</td>\r\n        </ng-container>\r\n        <ng-template #tipo>\r\n          <td>UES</td>\r\n        </ng-template>\r\n\r\n        <ng-container *ngIf=\"data.estado == 8; else estado\">\r\n          <td>\r\n            <h5><span class=\"badge rounded-pill bg-success\">Activo</span></h5>\r\n          </td>\r\n        </ng-container>\r\n        <ng-template #estado>\r\n          <td>\r\n            <h5><span class=\"badge rounded-pill bg-danger\">Inactivo</span></h5>\r\n          </td>\r\n        </ng-template>\r\n\r\n        <td class=\"d-flex justify-content-center gap-1\">\r\n          <app-modal [proveedor]=\"data\" [leyenda]=\"'Editar'\"></app-modal>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-warning btn-sm btn-rounded mx-1\"\r\n            (click)=\"cambiarEstado(data)\"\r\n            ngbTooltip=\"Cambiar a {{\r\n              data.estado === 9 ? 'Activo' : 'Inactivo'\r\n            }}\"\r\n          >\r\n            <i\r\n              [ngClass]=\"\r\n                data.estado === 8\r\n                  ? 'mdi mdi-18px mdi-lock-outline'\r\n                  : 'mdi mdi-18px mdi-key-outline'\r\n              \"\r\n            ></i>\r\n          </button>\r\n        </td>\r\n      </tr>\r\n      <tr *ngIf=\"proveedores.length == 0\">\r\n          <td colspan=\"8\" style=\"text-align: center\">\r\n            No hay datos para mostrar\r\n          </td>\r\n        </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n  <!-- ! PAGINACION -->\r\n  <div class=\"pagination pagination-rounded justify-content-end mb-2\">\r\n    <pagination-controls (pageChange)=\"p = $event\" [nextLabel]=\"''\" [previousLabel]=\"''\"></pagination-controls>\r\n  </div>\r\n</div>\r\n<!-- end table -->\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MostrarComponent } from './pages/mostrar/mostrar.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MostrarComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProveedorRoutingModule { }\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { ProveedorRoutingModule } from \"./proveedor-routing.module\";\r\nimport { MostrarComponent } from \"./pages/mostrar/mostrar.component\";\r\nimport { TablaComponent } from \"./pages/tabla/tabla.component\";\r\nimport { ModalComponent } from \"./components/modal/modal.component\";\r\nimport { UIModule } from \"src/app/shared/ui/ui.module\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { Ng2SearchPipeModule } from \"ng2-search-filter\";\r\nimport { NgxMaskModule } from \"ngx-mask\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { NgxPaginationModule } from \"ngx-pagination\";\r\n\r\n@NgModule({\r\n  declarations: [MostrarComponent, TablaComponent, ModalComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ProveedorRoutingModule,\r\n    FormsModule,\r\n    UIModule,\r\n    Ng2SearchPipeModule,\r\n    ReactiveFormsModule,\r\n    NgxPaginationModule,\r\n    NgbModule,\r\n    NgxMaskModule.forRoot(),\r\n  ],\r\n})\r\nexport class ProveedorModule {}\r\n","import { Observable } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { IProveedor } from \"../interfaces/proveedor.interface\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ProveedorService {\r\n  private baseUrl: string = environment.baseUrl;\r\n  listProveedor: IProveedor[] = [];\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getProveedorsPaginacion() {\r\n    this.http\r\n      .get(`${this.baseUrl}/proveedor/lista`)\r\n      .pipe(map((resp: any) => resp.content as IProveedor[]))\r\n      .subscribe((proveedor: IProveedor[]) => {\r\n        this.listProveedor = proveedor;\r\n      });\r\n  }\r\n\r\n  getProveedors() {\r\n    this.http\r\n      .get(`${this.baseUrl}/proveedor/listasinpagina`)\r\n      .pipe(map((resp: any) => resp as IProveedor[]))\r\n      .subscribe((proveedor: IProveedor[]) => {\r\n        this.listProveedor = proveedor;\r\n      });\r\n  }\r\n\r\n  getProveedorsById(id: string) {\r\n    if (id != \"\") {\r\n      return this.http\r\n        .get(`${this.baseUrl}/proveedor/lista/${id}`)\r\n        .pipe(map((resp: any) => resp as IProveedor));\r\n    } else {\r\n      return this.http\r\n        .get(`${this.baseUrl}/proveedor/lista`)\r\n        .pipe(map((resp: any) => resp as IProveedor));\r\n    }\r\n  }\r\n\r\n  guardar(proveedor: IProveedor) {\r\n    return this.http.post(`${this.baseUrl}/proveedor/insertar`, proveedor);\r\n  }\r\n\r\n  modificar(proveedor: IProveedor): any {\r\n    return this.http.put(\r\n      `${this.baseUrl}/proveedor/editar/${proveedor.id}`,\r\n      proveedor\r\n    );\r\n  }\r\n\r\n  borrar(dat: IProveedor): Observable<IProveedor> {\r\n    return this.http.delete<IProveedor>(\r\n      `${this.baseUrl}/proveedor/eliminar/${dat.id}`\r\n    );\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}