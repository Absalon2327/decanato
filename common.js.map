{"version":3,"file":"common.js","mappings":"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","sources":["./src/app/modules/calendario/servicio/servicio.service.ts","./src/app/modules/compra/services/compra.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ISolicitudVehiculo } from '../../solicitud-vehiculo/interfaces/data.interface';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServicioService {\r\n  private urlbase= environment.baseUrl;\r\n  private url= environment.baseUrl;\r\n  listSoliVehiculo : ISolicitudVehiculo [] = [];\r\n\r\n\r\n  listSoliVehiculo2 : ISolicitudVehiculo [] = [];\r\n  listSoliVehiculo3 : ISolicitudVehiculo [] = [];\r\n  listSoliVehiculoRol : ISolicitudVehiculo [] = [];\r\n\r\n\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  getSolicitudV(){\r\n    return this.http.get<ISolicitudVehiculo[]>(this.urlbase+'/solicitudvehiculo/todas');\r\n  }\r\n\r\n  getSolicitudesVehiculo1(estado: number): Promise<ISolicitudVehiculo[]> {\r\n    // Mostrar la alerta de Swal antes de realizar la solicitud\r\n    Swal.fire({\r\n      title: 'Espere un momento!',\r\n      html: 'Se está procesando la información...',\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n      }\r\n    });\r\n\r\n    let requestUrl = `${this.url}/solicitudvehiculo/lista`;\r\n    if (estado != null) {\r\n      requestUrl = `${this.url}/solicitudvehiculo/lista/${estado}`;\r\n    }\r\n\r\n    return this.http\r\n      .get(requestUrl)\r\n      .pipe(map((resp: any) => resp as ISolicitudVehiculo[]))\r\n      .toPromise() // Convertir el observable en una Promesa\r\n      .then((soliVe: ISolicitudVehiculo[]) => {\r\n        // Cierra la alerta de Swal cuando se obtienen las solicitudes\r\n        Swal.close();\r\n        this.listSoliVehiculo = soliVe;\r\n        return this.listSoliVehiculo; // Devuelve las solicitudes como resultado de la Promesa\r\n      })\r\n      .catch((error) => {\r\n        // Cierra la alerta de Swal en caso de error y lanza el error\r\n        Swal.close();\r\n        console.error('Error al obtener las solicitudes de vehículo', error);\r\n        throw error; // Lanza el error para que el componente lo maneje\r\n      });\r\n  }\r\n\r\n  getSolicitudesVehiculo2(estado: number): Promise<ISolicitudVehiculo[]> {\r\n    // Mostrar la alerta de Swal antes de realizar la solicitud\r\n    Swal.fire({\r\n      title: 'Espere un momento!',\r\n      html: 'Se está procesando la información...',\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n      }\r\n    });\r\n\r\n    let requestUrl = `${this.url}/solicitudvehiculo/lista`;\r\n    if (estado != null) {\r\n      requestUrl = `${this.url}/solicitudvehiculo/lista/${estado}`;\r\n    }\r\n\r\n    return this.http\r\n      .get(requestUrl)\r\n      .pipe(map((resp: any) => resp as ISolicitudVehiculo[]))\r\n      .toPromise() // Convertir el observable en una Promesa\r\n      .then((soliVe: ISolicitudVehiculo[]) => {\r\n        // Cierra la alerta de Swal cuando se obtienen las solicitudes\r\n        Swal.close();\r\n        this.listSoliVehiculo2 = soliVe;\r\n        return this.listSoliVehiculo2; // Devuelve las solicitudes como resultado de la Promesa\r\n      })\r\n      .catch((error) => {\r\n        // Cierra la alerta de Swal en caso de error y lanza el error\r\n        Swal.close();\r\n        console.error('Error al obtener las solicitudes de vehículo', error);\r\n        throw error; // Lanza el error para que el componente lo maneje\r\n      });\r\n  }\r\n\r\n  getSolicitudesVehiculo3(estado: number): Promise<ISolicitudVehiculo[]> {\r\n    // Mostrar la alerta de Swal antes de realizar la solicitud\r\n    Swal.fire({\r\n      title: 'Espere un momento!',\r\n      html: 'Se está procesando la información...',\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n      }\r\n    });\r\n\r\n    let requestUrl = `${this.url}/solicitudvehiculo/lista`;\r\n    if (estado != null) {\r\n      requestUrl = `${this.url}/solicitudvehiculo/lista/${estado}`;\r\n    }\r\n\r\n    return this.http\r\n      .get(requestUrl)\r\n      .pipe(map((resp: any) => resp as ISolicitudVehiculo[]))\r\n      .toPromise() // Convertir el observable en una Promesa\r\n      .then((soliVe: ISolicitudVehiculo[]) => {\r\n        // Cierra la alerta de Swal cuando se obtienen las solicitudes\r\n        Swal.close();\r\n        this.listSoliVehiculo3 = soliVe;\r\n        return this.listSoliVehiculo3; // Devuelve las solicitudes como resultado de la Promesa\r\n      })\r\n      .catch((error) => {\r\n        // Cierra la alerta de Swal en caso de error y lanza el error\r\n        Swal.close();\r\n        console.error('Error al obtener las solicitudes de vehículo', error);\r\n        throw error; // Lanza el error para que el componente lo maneje\r\n      });\r\n  }\r\n\r\n  getSolicitudesRol(rol: string): Promise<ISolicitudVehiculo[]> {\r\n    // Mostrar la alerta de Swal antes de realizar la solicitud\r\n    Swal.fire({\r\n      title: 'Espere un momento!',\r\n      html: 'Se está procesando la información...',\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n      }\r\n    });\r\n\r\n    return this.http\r\n      .get(`${this.url}/solicitudvehiculo/listado/${rol}`)\r\n      .pipe(map((resp: any) => resp as ISolicitudVehiculo[]))\r\n      .toPromise() // Convertir el observable en una Promesa\r\n      .then((soliVe: ISolicitudVehiculo[]) => {\r\n        // Cierra la alerta de Swal cuando se obtienen las solicitudes\r\n        Swal.close();\r\n        this.listSoliVehiculoRol = soliVe;\r\n        return this.listSoliVehiculoRol; // Devuelve las solicitudes como resultado de la Promesa\r\n      })\r\n      .catch((error) => {\r\n        // Cierra la alerta de Swal en caso de error y lanza el error\r\n        Swal.close();\r\n        console.error('Error al obtener las solicitudes de vehículo', error);\r\n        throw error; // Lanza el error para que el componente lo maneje\r\n      });\r\n  }\r\n}\r\n","import { map } from \"rxjs/operators\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { ICompra } from \"../interfaces/compra.interface\";\r\nimport { Observable } from \"rxjs\";\r\nimport { IProveedor } from \"../../proveedor/interfaces/proveedor.interface\";\r\nimport { IVale } from \"../../devolucion-vale/interfaces/vale.interface\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CompraService {\r\n  private baseUrl: string = environment.baseUrl;\r\n  listCompra: ICompra[] = [];\r\n  listProveedor: IProveedor[] = [];\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getComprasConPaginacion() {\r\n    this.http\r\n      .get(`${this.baseUrl}/compra/lista`)\r\n      .pipe(map((resp: any) => resp.content as ICompra[]))\r\n      .subscribe((compras: ICompra[]) => {\r\n        this.listCompra = compras; // Actualiza la propiedad listCompra\r\n      });\r\n  }\r\n\r\n  getValesPorCompra(idCompra: string): Observable<IVale[]> {\r\n    return this.http\r\n      .get(`${this.baseUrl}/vale/valesporcompra/${idCompra}`)\r\n      .pipe(map((resp: any) => resp as IVale[]));\r\n  }\r\n\r\n  getCompras() {\r\n    this.http\r\n      .get(`${this.baseUrl}/compra/listasinpagina`)\r\n      .pipe(map((resp: any) => resp as ICompra[]))\r\n      .subscribe((compras: ICompra[]) => {\r\n        this.listCompra = compras;\r\n      });\r\n  }\r\n\r\n  getProveedor() {\r\n    this.http\r\n      .get(`${this.baseUrl}/proveedor/listasinpagina`)\r\n      .pipe(map((resp: any) => resp as IProveedor[]))\r\n      .subscribe((proveedor: IProveedor[]) => {\r\n        this.listProveedor = proveedor;\r\n      });\r\n  }\r\n\r\n  guardar(compra: ICompra, idusuariologueado: string) {\r\n    const data = {\r\n      compra: compra,\r\n      idusuariologueado: idusuariologueado,\r\n    };\r\n    return this.http.post(`${this.baseUrl}/compra/insertar`, data);\r\n  }\r\n\r\n  modificar(compra: ICompra): any {\r\n    return this.http.put(`${this.baseUrl}/compra/editar/${compra.id}`, compra);\r\n  }\r\n\r\n  borrar(dat: ICompra): Observable<ICompra> {\r\n    return this.http.delete<ICompra>(\r\n      `${this.baseUrl}/compra/eliminar/${dat.id}`\r\n    );\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}