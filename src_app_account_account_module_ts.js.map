{"version":3,"file":"src_app_account_account_module_ts.js","mappings":"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","sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/auth/auth-routing.ts","./src/app/account/auth/auth.module.ts","./src/app/account/auth/login/login.component.ts","./src/app/account/auth/login/login.component.html","./src/app/account/auth/passwordreset/passwordreset.component.ts","./src/app/account/auth/passwordreset/passwordreset.component.html","./src/app/account/auth/recoverpwd2/recoverpwd2.component.ts","./src/app/account/auth/recoverpwd2/recoverpwd2.component.html","./src/app/account/auth/register2/register2.component.ts","./src/app/account/auth/register2/register2.component.html","./src/app/account/auth/signup/signup.component.ts","./src/app/account/auth/signup/signup.component.html","./src/app/core/guards/login.guard.ts","./src/app/core/services/user.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { AuthModule } from './auth/auth.module';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    AccountRoutingModule,\r\n    AuthModule,\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { Login2Component } from './login2/login2.component';\r\n\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\r\nimport { Register2Component } from './register2/register2.component';\r\nimport { Recoverpwd2Component } from './recoverpwd2/recoverpwd2.component';\r\nimport { LoginGuard } from 'src/app/core/guards/login.guard';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent, canActivate: [LoginGuard]\r\n    },\r\n    {\r\n        path: 'signup',\r\n        component: SignupComponent\r\n    },\r\n    {\r\n        path: 'signup-2',\r\n        component: Register2Component\r\n    },\r\n    {\r\n        path: 'reset-password',\r\n        component: PasswordresetComponent\r\n    },\r\n    {\r\n        path: 'recoverpwd-2',\r\n        component: Recoverpwd2Component\r\n    },\r\n    {\r\n        path: 'login-2',\r\n        component: Login2Component\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CarouselModule } from 'ngx-owl-carousel-o';\r\n\r\nimport { UIModule } from '../../shared/ui/ui.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { Login2Component } from './login2/login2.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { Register2Component } from './register2/register2.component';\r\nimport { Recoverpwd2Component } from './recoverpwd2/recoverpwd2.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AuthRoutingModule } from './auth-routing';\r\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, Login2Component, SignupComponent, PasswordresetComponent, Register2Component, Recoverpwd2Component],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    NgbAlertModule,\r\n    UIModule,\r\n    AuthRoutingModule,\r\n    CarouselModule,\r\n    NgbModule,\r\n    NgxMaskModule.forRoot(), //para las mascaras\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { Router } from \"@angular/router\";\r\nimport { UsuarioService } from \"../services/usuario.service\";\r\nimport Swal from \"sweetalert2\";\r\nimport { ILoginUsuario } from \"../interfaces/usuario\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"],\r\n})\r\n\r\n/**\r\n * Login component\r\n */\r\nexport class LoginComponent implements OnInit {\r\n  storage: Storage = window.localStorage;\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  error = \"\";\r\n  returnUrl: string;\r\n\r\n  public showPassword: boolean = false;\r\n  public password: string = \"\";\r\n\r\n  // set the currenr year\r\n  year: number = new Date().getFullYear();\r\n\r\n  alerts = [\r\n    {\r\n      id: 1,\r\n      type: \"info\",\r\n      message:\r\n        \"Ingrese su nombre de usuario y contraseña. Si es la primera vez que inicia sesión, su contraseña será el número de su DUI.\",\r\n      show: false,\r\n    },\r\n  ];\r\n\r\n  // tslint:disable-next-line: max-line-length\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private usuarioService: UsuarioService,\r\n    private router: Router,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: [\"decanato@ues.edu.sv\", [Validators.required]],\r\n      password: [\"12345678\", [Validators.required]],\r\n    });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  /**\r\n   * Form submit\r\n   */\r\n  onSubmit() {\r\n    if (this.loginForm.valid) {\r\n      const login: ILoginUsuario = {\r\n        nombre: this.loginForm.get(\"email\").value,\r\n        clave: this.loginForm.get(\"password\").value,\r\n      };\r\n\r\n      this.cargando();\r\n\r\n      this.usuarioService.login(login).subscribe(\r\n        (resp) => {\r\n          if (this.loginForm.get(\"remember\")?.value) {\r\n            this.storage.setItem(\"email\", this.loginForm.get(\"email\")?.value);\r\n          } else {\r\n            this.storage.removeItem(\"email\");\r\n          }\r\n          Swal.close();\r\n          const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            showConfirmButton: false,\r\n            timer: 2500,\r\n            didOpen: (toast) => {\r\n              toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n              toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n            },\r\n          });\r\n\r\n          Toast.fire({\r\n            icon: \"success\",\r\n            text: \"¡Ha iniciado sesión!\",\r\n          }).then(() => {\r\n            const rol = JSON.parse(this.storage.getItem(\"usuario\" || \"\"));\r\n            // Aquí se realiza la redirección\r\n            this.router.navigate([\"/dashboard\"]);\r\n            this.loginForm.reset();\r\n          });\r\n        },\r\n        (err) => {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Error\",\r\n            text: err,\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public togglePasswordVisibility(): void {\r\n    this.showPassword = !this.showPassword;\r\n  }\r\n\r\n  //// metodo par abrir la modal ////\r\n  openModal(content: any) {\r\n    //hacer que la modal no se cierre al precionar fuera de ella -> backdrop: 'static', keyboard: false\r\n    this.modalService.open(content, {\r\n      size: \"\",\r\n      centered: true,\r\n      backdrop: \"static\",\r\n      keyboard: false,\r\n    });\r\n  }\r\n\r\n  //////   metodos para la ayuda ///////\r\n  CambiarAlert(alert) {\r\n    alert.show = !alert.show;\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  restaurarAlerts() {\r\n    this.alerts.forEach((alert) => {\r\n      alert.show = true;\r\n    });\r\n  }\r\n\r\n  siMuestraAlertas() {\r\n    return this.alerts.every((alert) => alert.show);\r\n  }\r\n\r\n  cargando() {\r\n    let timerInterval;\r\n    Swal.fire({\r\n      title: \"Espere un momento!\",\r\n      html: \"Se esta procesando la solicitud.\",\r\n      timer: 5000,\r\n\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n        timerInterval = setInterval(() => {\r\n          const content = Swal.getHtmlContainer();\r\n          if (content) {\r\n            const b = content.querySelector(\"b\");\r\n            if (b) {\r\n              b.textContent = Swal.getTimerLeft() + \"\";\r\n            }\r\n          }\r\n        }, 100);\r\n      },\r\n      willClose: () => {\r\n        clearInterval(timerInterval);\r\n      },\r\n    }).then((result) => {\r\n      if (result.dismiss === Swal.DismissReason.timer) {\r\n        console.log(\"I was closed by the timer\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"account-pages my-5 pt-sm-5\">\r\n  <div class=\"container-fluid \">\r\n    <div class=\"row justify-content-center align-items-center\" style=\"min-height: 50vh;\">\r\n      <div class=\"col-md-4\">\r\n        <div class=\"card overflow-hidden\">\r\n          <div class=\"bg-soft bg-primary\">\r\n            <div class=\"row\" id=\"background-image\">\r\n              <div class=\"col-7\">\r\n                <div class=\"text-primary p-4\">\r\n                  <h5 class=\"text-primary\">¡ Bienvenido !</h5>\r\n                  <p>Inicia Seisión para continuar.</p>\r\n                </div>\r\n              </div>\r\n              <!-- La columna de la imagen ha sido eliminada -->\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body pt-0\">\r\n            <div class=\"rount-image\">\r\n              <a routerLink=\"/\">\r\n                <div class=\"avatar-md profile-user-wid mb-4\">\r\n                  <span class=\"avatar-title rounded-circle bg-light\">\r\n                    <img src=\"assets/images/logo-sm.png\" alt=\"\" height=\"60\">\r\n                  </span>\r\n                </div>\r\n              </a>\r\n            </div>\r\n\r\n            <div class=\"btn-alerta\" style=\"position: absolute; top: 150px; right: 10px; z-index: 1;\">\r\n              <i class=\"mdi mdi-18px mdi-lightbulb-on-outline custom-cursor\" *ngIf=\"!siMuestraAlertas()\"\r\n                (click)=\"restaurarAlerts()\" (click)=\"openModal(msjayuda)\" [ngbTooltip]=\"' Ayuda '\" [placement]=\"'left'\"></i>\r\n            </div>\r\n\r\n\r\n            <div class=\"p-2\">\r\n              <form class=\"form-horizontal\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n                <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\r\n\r\n                <div class=\"mb-3\">\r\n                  <label for=\"email\">Usuario :</label>\r\n                  <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                  <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.email.errors.required\">El usuario es requerido</div>\r\n                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                  <label for=\"password\">Contraseña :</label>\r\n                  <div class=\"input-group auth-pass-inputgroup\">\r\n                    <input [type]=\"showPassword ? 'text' : 'password'\" type=\"password\" class=\"form-control\"\r\n                      formControlName=\"password\" placeholder=\"Enter password\"\r\n                      [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" aria-label=\"Password\"\r\n                      aria-describedby=\"password-addon\">\r\n\r\n                    <button class=\"btn btn-light ms-0\" type=\"button\" id=\"password-addon\"\r\n                      (click)=\"togglePasswordVisibility()\"><i class=\"mdi mdi-eye-outline\"></i></button>\r\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                      <span *ngIf=\"f.password.errors.required\">La clave es requerida</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"form-check\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"remember-check\">\r\n                  <label class=\"form-check-label\" for=\"remember-check\">\r\n                    Recordar usuario\r\n                  </label>\r\n                </div>\r\n\r\n                <div class=\"mt-3 d-grid\">\r\n                  <button class=\"btn btn-primary\" type=\"submit\">Iniciar sesión</button>\r\n                </div>\r\n                <div class=\"mt-4 text-center\">\r\n                  <a routerLink=\"/account/reset-password\" class=\"text-muted\"><i class=\"mdi mdi-lock mr-1\"></i> ¿Olvidó\r\n                    su contraseña?</a>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #msjayuda let-modal>\r\n\r\n  <div *ngFor=\"let alert of alerts\" style=\"padding: 15px;\">\r\n    <div class=\"alert alert-{{ alert.type }} alert-dismissible fade show\" role=\"alert\" *ngIf=\"alert.show\">\r\n      <strong>Importante!</strong>\r\n      <div class=\"text-justify\">{{ alert.message }}</div>\r\n      <button type=\"button\" class=\"btn-close\" (click)=\"CambiarAlert(alert)\" aria-hidden=\"true\" aria-label=\"Close\"></button>\r\n    </div>\r\n  </div>\r\n\r\n</ng-template>\r\n\r\n\r\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../../../core/services/auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { UsuarioService } from '../services/usuario.service';\r\nimport Swal from 'sweetalert2';\r\nimport { IEmail, IRespass } from '../interfaces/usuario';\r\nimport { MensajesService } from 'src/app/shared/global/mensajes.service';\r\nimport { EMAIL_VALIDATE_UES } from 'src/app/constants/constants';\r\n\r\n@Component({\r\n  selector: 'app-passwordreset',\r\n  templateUrl: './passwordreset.component.html',\r\n  styleUrls: ['./passwordreset.component.scss']\r\n})\r\n\r\n/**\r\n * Reset-password component\r\n */\r\nexport class PasswordresetComponent implements OnInit, AfterViewInit {\r\n\r\n  resetForm: FormGroup;\r\n  submitted = false;\r\n  error = '';\r\n  success = '';\r\n  loading = false;\r\n\r\n  code: boolean = false;\r\n  resetpass: boolean = false;\r\n  anothermethod: boolean = false;\r\n\r\n  msjclave!: string;\r\n  seguridad!: string;\r\n  msjclaveconfir!: string;\r\n  confirma!: string;\r\n  media!: boolean;\r\n  public showPassword: boolean = false;\r\n  public password: string = \"\";\r\n  public showPassword2: boolean = false;\r\n  codigo!: string;\r\n  private isEmail: string = EMAIL_VALIDATE_UES;\r\n\r\n  // set the currenr year\r\n  year: number = new Date().getFullYear();\r\n\r\n  // tslint:disable-next-line: max-line-length\r\n  constructor(private formBuilder: FormBuilder, private mensajesService: MensajesService, private usuarioService: UsuarioService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.resetForm = this.formBuilder.group({\r\n      correo: ['', [Validators.required, Validators.pattern(this.isEmail)]],\r\n      dui: ['', [Validators.required]],\r\n      clave: [''],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.resetForm.controls; }\r\n\r\n  /**\r\n   * On submit form\r\n   */\r\n  onSubmit() {\r\n    if (this.resetForm.valid && !this.code && !this.resetpass && this.anothermethod) {\r\n      this.resetpassCD();\r\n\r\n    } else if (this.code) {\r\n      this.submitCode();\r\n\r\n    } else if (!this.anothermethod) {\r\n      this.resetpassEmail();\r\n\r\n    } else {\r\n\r\n      if (this.confirma == \"confirmada\" && this.media) {\r\n        this.resetpassword();\r\n\r\n      } else {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          title: \"Faltan parametros de seguridad\",\r\n          html: \"Las claves deben coincidir y tener seguridad media como minimo\",\r\n          icon: \"warning\",\r\n        });\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  resetpassCD() {\r\n    const rest: IRespass = {\r\n      correo: this.resetForm.get('correo').value,\r\n      dui: this.resetForm.get('dui').value,\r\n      codigo: '',\r\n    }\r\n\r\n    this.usuarioService.resetpass(rest).subscribe(\r\n      (resp) => {\r\n        const Toast = Swal.mixin({\r\n          toast: true,\r\n          position: 'top-end',\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n          didOpen: (toast) => {\r\n            toast.addEventListener('mouseenter', Swal.stopTimer)\r\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n          }\r\n        });\r\n\r\n        Toast.fire({\r\n          icon: 'success',\r\n          text: '¡Se ha confirmado!'\r\n        }).then(() => {\r\n          this.resetpass = true;\r\n          this.code = false;\r\n          this.anothermethod = true;\r\n          this.usuarioService.getUsuario();\r\n        })\r\n      },\r\n      (err) => {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: err,\r\n        });\r\n        this.code = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  resetpassEmail() {\r\n    this.cargando();\r\n\r\n    const rest: IRespass = {\r\n      correo: this.resetForm.get('correo').value,\r\n      dui: '',\r\n      codigo: this.generarCodigoAleatorio(),\r\n    }\r\n\r\n    this.codigo = rest.codigo; //salvamos el codigo\r\n\r\n    this.usuarioService.resetpassEmail(rest).subscribe(\r\n      (resp) => {\r\n        this.Email();\r\n      },\r\n      (err) => {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: err,\r\n        });\r\n        this.code = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  generarCodigoAleatorio() {\r\n    // Genera un número aleatorio entre 0 y 99999 (5 dígitos)\r\n    const codigo = Math.floor(Math.random() * 100000);\r\n    // Convierte el número en una cadena de texto\r\n    const codigoTexto = codigo.toString();\r\n    // Asegura que el código tenga exactamente 5 dígitos, agregando ceros a la izquierda si es necesario\r\n    const codigoCompleto = codigoTexto.padStart(5, '0');\r\n    return codigoCompleto;\r\n  }\r\n\r\n  focusNext(event: any, nextInputId: string) {\r\n    const input = document.getElementById(nextInputId) as HTMLInputElement;\r\n    if (event.target.value.length === 1) {\r\n      input.focus();\r\n    }\r\n  }\r\n\r\n  submitCode() {\r\n    const code = this.obtenerCodigo();\r\n\r\n    if (code.length === 5) {\r\n      // Aquí puedes enviar el código a tu servidor o realizar la acción deseada.\r\n      this.usuarioService.confirmarcode(code).subscribe(\r\n        (resp) => {\r\n\r\n          const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 2500,\r\n            didOpen: (toast) => {\r\n              toast.addEventListener('mouseenter', Swal.stopTimer)\r\n              toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n          });\r\n\r\n          Toast.fire({\r\n            icon: 'success',\r\n            text: '¡Código confirmado!'\r\n          }).then(() => {\r\n            this.resetpass = true;\r\n            this.code = false;\r\n            this.anothermethod = true;\r\n            this.usuarioService.getUsuario();\r\n          })\r\n        },\r\n        (err) => {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: err,\r\n          });\r\n          this.resetpass = false;\r\n        }\r\n      );\r\n    } else {\r\n      alert('Por favor, complete el código de 5 dígitos.');\r\n    }\r\n  }\r\n\r\n  resetpassword() {\r\n    const clave = this.resetForm.get(\"clave\").value;\r\n\r\n    const usuario = this.usuarioService.usuario;\r\n    usuario.clave = clave;\r\n\r\n    this.usuarioService.Credenciales(usuario).subscribe(\r\n      (resp: any) => {\r\n        if (resp) {\r\n          if (this.usuarioService.validarToken()) {\r\n            const Toast = Swal.mixin({\r\n              toast: true,\r\n              position: \"top-end\",\r\n              showConfirmButton: false,\r\n              timer: 2000,\r\n              //timerProgressBar: true,\r\n              didOpen: (toast) => {\r\n                toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n                toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n              },\r\n            });\r\n\r\n            Toast.fire({\r\n              icon: \"success\",\r\n              text: \"Modificacion exitosa\",\r\n            }).then(() => {\r\n              this.router.navigate(['/dashboard']);\r\n              this.resetForm.reset();\r\n            });\r\n          }\r\n        }\r\n      },\r\n      (err: any) => {\r\n        this.mensajesService.mensajesSweet(\r\n          \"error\",\r\n          \"Ups... Algo salió mal\",\r\n          err.error.message\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  obtenerCodigo() {\r\n    let codigo = '';\r\n    for (let i = 1; i <= 5; i++) {\r\n      const input = document.getElementById('digit' + i) as HTMLInputElement;\r\n      codigo += input.value;\r\n    }\r\n    return codigo;\r\n  }\r\n\r\n  SeguridadClave(event: any) {\r\n    const clave = event.target.value;\r\n\r\n    this.seguridad = this.evaluarSeguridadClave(clave);\r\n    if (this.seguridad === \"alta\") {\r\n      this.msjclave = \"Seguridad alta\";\r\n    } else if (this.seguridad === \"media\") {\r\n      this.msjclave = \"Seguridad media\";\r\n    } else {\r\n      this.msjclave = \"La clave es poco segura\";\r\n    }\r\n  }\r\n\r\n  VerificarClaves(event: any) {\r\n    const clave = this.resetForm.get('clave').value;\r\n\r\n    const valorConfirClave = event.target.value;\r\n\r\n    if (clave === valorConfirClave) {\r\n      this.msjclaveconfir = \"Clave confirmada\";\r\n      this.confirma = \"confirmada\";\r\n    } else {\r\n      this.msjclaveconfir = \"Las claves no coinciden\";\r\n      this.confirma = \"errorclave\";\r\n    }\r\n  }\r\n\r\n  evaluarSeguridadClave(clave: string): \"baja\" | \"media\" | \"alta\" {\r\n    if (clave.length < 5) {\r\n      this.media = false;\r\n      return \"baja\";\r\n    }\r\n    if (/^[a-zA-Z]+$/.test(clave)) {\r\n      this.media = true;\r\n      return \"media\";\r\n    }\r\n    if (\r\n      /[0-9]/.test(clave) &&\r\n      /[A-Z]/.test(clave) &&\r\n      /[!@#$%^&*]/.test(clave)\r\n    ) {\r\n      this.media = true;\r\n      return \"alta\";\r\n    }\r\n    this.media = true;\r\n    return \"media\";\r\n  }\r\n\r\n  public togglePasswordVisibility(): void {\r\n    this.showPassword = !this.showPassword;\r\n  }\r\n\r\n  public togglePasswordVisibility2(): void {\r\n    this.showPassword2 = !this.showPassword2;\r\n  }\r\n\r\n  Email() {\r\n    const email: IEmail = {\r\n      asunto: 'Cambio de credenciales',\r\n      titulo: 'Cambio de credenciales',\r\n      email: this.usuarioService.correo,\r\n      receptor: \"Estimad@ : \" + this.usuarioService.nombre,\r\n      mensaje: 'Su cuenta está en proceso de actualización de credenciales. Por motivos de seguridad, hemos enviado un código de verificación que le permitirá completar el proceso de actualización de sus credenciales.',\r\n      centro: 'Utilice este codigo para continuar con el proceso :',\r\n      codigo: this.codigo,\r\n      abajo: 'Gracias por su atención a este importante mensaje.',\r\n    }\r\n\r\n    this.usuarioService.SendEmail(email).subscribe(\r\n      (resp) => {\r\n        Swal.close();\r\n        const Toast = Swal.mixin({\r\n          toast: true,\r\n          position: 'top-end',\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n          didOpen: (toast) => {\r\n            toast.addEventListener('mouseenter', Swal.stopTimer)\r\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n          }\r\n        });\r\n\r\n        Toast.fire({\r\n          icon: 'success',\r\n          text: '¡Se ha confirmado!'\r\n        }).then(() => {\r\n          this.code = true;\r\n        })\r\n      },\r\n      (err) => {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: err,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  //// metodo para validar el campo si es valido o no ////\r\n  esCampoValido(campo: string) {\r\n    const validarCampo = this.resetForm.get(campo);\r\n    return !validarCampo?.valid && validarCampo?.touched\r\n      ? 'is-invalid' : validarCampo?.touched ? 'is-valid' : '';\r\n  }\r\n\r\n  Anothermethod() {\r\n    this.anothermethod = !this.anothermethod;\r\n  }\r\n\r\n  cargando() {\r\n    let timerInterval;\r\n    Swal.fire({\r\n      title: 'Espere un momento!',\r\n      html: 'Se esta procesando la solicitud.',\r\n      timer: 5000,\r\n\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n        timerInterval = setInterval(() => {\r\n          const content = Swal.getHtmlContainer()\r\n          if (content) {\r\n            const b = content.querySelector('b')\r\n            if (b) {\r\n              b.textContent = Swal.getTimerLeft() + ''\r\n            }\r\n          }\r\n        }, 100);\r\n      },\r\n      willClose: () => {\r\n        clearInterval(timerInterval);\r\n      }\r\n    }).then((result) => {\r\n      if (\r\n        result.dismiss === Swal.DismissReason.timer\r\n      ) {\r\n        console.log('I was closed by the timer');\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"account-pages my-5 pt-sm-5\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\r\n        <div class=\"card overflow-hidden\">\r\n          <div class=\"bg-soft bg-primary\">\r\n            <div class=\"row\">\r\n              <div class=\"col-6\">\r\n                <div class=\"text-primary p-2\" style=\"margin-top: 30px; margin-left: 1px;\">\r\n                  <h5 class=\"text-primary\">Restablecer contraseña</h5>\r\n                  <p>{{code ? 'Ingresar código' : resetpass ? 'Ingresar nueva clave' : 'Obtener código de acceso'}}</p>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-5 align-self-end\">\r\n                <img\r\n                  [src]=\"code ? './../../../../assets/images/securityOn.png' :  resetpass ? './../../../../assets/images/resetpassword.png' : './../../../../assets/images/reset-pass.png'\"\r\n                  alt=\"\" class=\"img-fluid\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body pt-0\">\r\n            <div class=\"rount-image\">\r\n              <a routerLink=\"/\">\r\n                <div class=\"avatar-md profile-user-wid mb-4\">\r\n                  <span class=\"avatar-title rounded-circle bg-light\">\r\n                    <img src=\"assets/images/logo-sm.png\" alt=\"\" height=\"60\">\r\n                  </span>\r\n                </div>\r\n              </a>\r\n            </div>\r\n\r\n            <form class=\"needs-validation\" name=\"resetForm\" [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n\r\n              <div *ngIf=\"!code && !resetpass\">\r\n                <div class=\"form-group row m-4\">\r\n                  <label for=\"correo\">Correo electrónico :</label>\r\n                  <input type=\"correo\" formControlName=\"correo\" class=\"form-control\" id=\"correo\" maxlength=\"30\"\r\n                    placeholder=\"Ingrese Correo electrónico\" [class]=\"esCampoValido('correo')\" />\r\n                  <div class=\"invalid-feedback\">\r\n                    <span *ngIf=\"resetForm.get('correo')?.errors?.['required']\">\r\n                      Ingrese un correo</span>\r\n                    <span *ngIf=\"resetForm.get('correo')?.errors?.['pattern']\">\r\n                      Email no válido, debe ser '@ues.edu.sv'</span>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"mt-4 text-center m-4\" *ngIf=\"!anothermethod\">\r\n                  <a routerLink=\"/account/reset-password\" class=\"text-muted\" (click)=\"Anothermethod()\"><i class=\"bx bxs-id-card mr-1\"></i> \r\n                    ¿Utilizar otro método?</a>\r\n                </div>\r\n\r\n                <div class=\"form-group row m-4\" *ngIf=\"anothermethod\">\r\n                  <label for=\"dui\">DUI :</label>\r\n\r\n                  <input type=\"dui\" formControlName=\"dui\" class=\"form-control\" id=\"dui\" name=\"dui\" maxlength=\"10\"\r\n                    placeholder=\"Ingrese DUI - ej: 00000000-0\" mask=\"00000000-0\" [class]=\"esCampoValido('dui')\" />\r\n                  <div class=\"invalid-feedback\">\r\n                    <span *ngIf=\"resetForm.get('dui')?.errors?.['required']\">\r\n                      Ingrese un DUI</span>\r\n                    <span *ngIf=\"!resetForm.get('dui').valid && !resetForm.get('dui')?.errors?.['required']\">\r\n                      Debe cumplir con el formato correcto</span>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div *ngIf=\"code && !resetpass\">\r\n                <div class=\"container-code\">\r\n                  <label for=\"digit1\">Ingrese el código</label>\r\n                  <div class=\"code-input\">\r\n                    <input type=\"text\" id=\"digit1\" maxlength=\"1\" (keyup)=\"focusNext($event, 'digit2')\" />\r\n                    <input type=\"text\" id=\"digit2\" maxlength=\"1\" (keyup)=\"focusNext($event, 'digit3')\" />\r\n                    <input type=\"text\" id=\"digit3\" maxlength=\"1\" (keyup)=\"focusNext($event, 'digit4')\" />\r\n                    <input type=\"text\" id=\"digit4\" maxlength=\"1\" (keyup)=\"focusNext($event, 'digit5')\" />\r\n                    <input type=\"text\" id=\"digit5\" maxlength=\"1\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div *ngIf=\"resetpass && !code\">\r\n                <!-- inicio de clave Empleado -->\r\n                <div class=\"form-group row m-4\">\r\n                  <label class=\"control-label\">Clave :\r\n                    <span class=\"text-danger\">*</span>\r\n                    <span class=\"msjclave\" [ngClass]=\"seguridad\">{{msjclave}}</span>\r\n                  </label>\r\n                  <div class=\"input-group auth-pass-inputgroup\">\r\n                    <input [type]=\"showPassword ? 'text' : 'password'\" type=\"password\" formControlName=\"clave\"\r\n                      class=\"form-control\" id=\"clave\" name=\"clave\" placeholder=\"Ingrese clave\"\r\n                      (input)=\"SeguridadClave($event)\" />\r\n\r\n                    <button class=\"btn btn-light ms-0\" type=\"button\" id=\"password-addon\"\r\n                      (click)=\"togglePasswordVisibility()\"><i class=\"mdi mdi-eye-outline\"></i></button>\r\n                  </div>\r\n                </div>\r\n                <!-- fin de clave Empleado -->\r\n\r\n                <!-- inicio de confirclave Empleado -->\r\n                <div class=\"form-group row m-4\">\r\n                  <label class=\"control-label\">Confirmar Clave :\r\n                    <span class=\"text-danger\">*</span>\r\n                    <span class=\"msjclave\" [ngClass]=\"confirma\">{{msjclaveconfir}}</span>\r\n                  </label>\r\n                  <div class=\"input-group auth-pass-inputgroup\">\r\n                    <input [type]=\"showPassword2 ? 'text' : 'password'\" type=\"password\" class=\"form-control\"\r\n                      id=\"confirclave\" name=\"confirclave\" placeholder=\"Confirme la Clave\"\r\n                      (input)=\"VerificarClaves($event)\" />\r\n\r\n                    <button class=\"btn btn-light ms-0\" type=\"button\" id=\"password-addon\"\r\n                      (click)=\"togglePasswordVisibility2()\"><i class=\"mdi mdi-eye-outline\"></i></button>\r\n                  </div>\r\n                </div>\r\n                <!-- fin de apellido Empleado -->\r\n              </div>\r\n\r\n              <div>\r\n                <button class=\"btn btn-primary w-md\" type=\"submit\" routerLink=\"/account/login\"\r\n                  style=\"float: left;\">Regresar</button>\r\n                <button class=\"btn btn-primary w-md\" type=\"submit\" style=\"float: right;\">{{resetpass ?\r\n                  'Cambiar':'Verificar'}}</button>\r\n                <div style=\"clear: both;\"></div>\r\n              </div>\r\n\r\n            </form>\r\n\r\n          </div> <!-- end card-body-->\r\n        </div>\r\n        <!-- end card -->\r\n        <!--         <div class=\"mt-5 text-center\">\r\n          <p>Remember It ? <a routerLink=\"/account/login\" class=\"fw-medium text-primary\"> Sign In here</a> </p>\r\n          <p>© {{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\r\n        </div> -->\r\n\r\n      </div> <!-- end col -->\r\n    </div>\r\n    <!-- end row -->\r\n  </div>\r\n  <!-- end container -->\r\n</div>\r\n<!-- end page -->","import { Component, OnInit } from '@angular/core';\nimport { OwlOptions } from 'ngx-owl-carousel-o';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-recoverpwd2',\n  templateUrl: './recoverpwd2.component.html',\n  styleUrls: ['./recoverpwd2.component.scss']\n})\nexport class Recoverpwd2Component implements OnInit {\n\n   // set the currenr year\n   year: number = new Date().getFullYear();\n\n   resetForm: FormGroup;\n   submitted = false;\n   error = '';\n   success = '';\n   loading = false;\n\n   constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService) { }\n\n  ngOnInit(): void {\n    this.resetForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.resetForm.controls; }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.success = '';\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.resetForm.invalid) {\n      return;\n    }\n    if (environment.defaultauth === 'firebase') {\n      this.authenticationService.resetPassword(this.f.email.value)\n        .catch(error => {\n          this.error = error ? error : '';\n        });\n    }\n  }\n\n  carouselOption: OwlOptions = {\n    items: 1,\n    loop: false,\n    margin: 0,\n    nav: false,\n    dots: true,\n    responsive: {\n      680: {\n        items: 1\n      },\n    }\n  }\n}\n","<div>\n    <div class=\"container-fluid p-0\">\n        <div class=\"row g-0\">\n\n            <div class=\"col-xl-9\">\n                <div class=\"auth-full-bg pt-lg-5 p-4\">\n                    <div class=\"w-100\">\n                        <div class=\"bg-overlay\"></div>\n                        <div class=\"d-flex h-100 flex-column\">\n                            <div class=\"p-4 mt-auto\">\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-lg-7\">\n                                        <div class=\"text-center\">\n\n                                            <h4 class=\"mb-3\"><i\n                                                    class=\"bx bxs-quote-alt-left text-primary h1 align-middle me-3\"></i><span\n                                                    class=\"text-primary\">5k</span>+ Satisfied clients</h4>\n\n                                            <div dir=\"ltr\">\n                                                <owl-carousel-o class=\"owl-theme auth-review-carousel\"\n                                                    [options]=\"carouselOption\">\n                                                    <ng-template carouselSlide>\n                                                        <div class=\"item\">\n                                                            <div class=\"py-3\">\n                                                                <p class=\"font-size-16 mb-4\">\" Fantastic theme with a\n                                                                    ton of\n                                                                    options. If you just want the HTML to integrate with\n                                                                    your project, then this is the package. You can find\n                                                                    the\n                                                                    files in the 'dist' folder...no need to install git\n                                                                    and\n                                                                    all the other stuff the documentation talks about. \"\n                                                                </p>\n\n                                                                <div>\n                                                                    <h4 class=\"font-size-16 text-primary\">Abs1981</h4>\n                                                                    <p class=\"font-size-14 mb-0\">- Skote User</p>\n                                                                </div>\n                                                            </div>\n\n                                                        </div>\n                                                    </ng-template>\n                                                    <ng-template carouselSlide>\n                                                        <div class=\"item\">\n                                                            <div class=\"py-3\">\n                                                                <p class=\"font-size-16 mb-4\">\" If Every Vendor on Envato\n                                                                    are\n                                                                    as supportive as Themesbrand, Development with be a\n                                                                    nice\n                                                                    experience. You guys are Wonderful. Keep us the good\n                                                                    work. \"</p>\n\n                                                                <div>\n                                                                    <h4 class=\"font-size-16 text-primary\">nezerious</h4>\n                                                                    <p class=\"font-size-14 mb-0\">- Skote User</p>\n                                                                </div>\n                                                            </div>\n\n                                                        </div>\n                                                    </ng-template>\n                                                </owl-carousel-o>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- end col -->\n\n            <div class=\"col-xl-3\">\n                <div class=\"auth-full-page-content p-md-5 p-4\">\n                    <div class=\"w-100\">\n\n                        <div class=\"d-flex flex-column h-100\">\n                            <div class=\"mb-4 mb-md-5\">\n                                <a routerLink=\"/\" class=\"d-block auth-logo\">\n                                    <img src=\"assets/images/logo-dark.png\" alt=\"\" height=\"18\" class=\"auth-logo-dark\">\n                                    <img src=\"assets/images/logo-light.png\" alt=\"\" height=\"18\" class=\"auth-logo-light\">\n                                </a>\n                            </div>\n                            <div class=\"my-auto\">\n                                <div>\n                                    <h5 class=\"text-primary\"> Reset Password</h5>\n                                    <p class=\"text-muted\">Re-Password with Skote.</p>\n                                </div>\n\n                                <div class=\"mt-4\">\n                                    <div class=\"alert alert-success text-center mb-4\" role=\"alert\">\n                                        Enter your Email and instructions will be sent to you!\n                                    </div>\n                                    <form [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\"\n                                    >\n                                    <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n                                        <div class=\"mb-3\">\n                                            <label for=\"useremail\">Email</label>\n                                            <input type=\"email\" formControlName=\"email\" \n                                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" class=\"form-control\" id=\"useremail\"\n                                                placeholder=\"Enter email\">\n                                                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                                                  </div>\n                                        </div>\n\n                                        <div class=\"text-end\">\n                                                <button class=\"btn btn-primary w-md\"\n                                                    type=\"submit\">Reset</button>\n                                            </div>\n\n                                    </form>\n                                    <div class=\"mt-5 text-center\">\n                                        <p>Remember It ? <a routerLink=\"/account/login-2\"\n                                                class=\"fw-medium text-primary\"> Sign In here</a> </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"mt-4 mt-md-5 text-center\">\n                                <p class=\"mb-0\">©{{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i>\n                                    by Themesbrand</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- end col -->\n        </div>\n        <!-- end row -->\n    </div>\n    <!-- end container-fluid -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { OwlOptions } from 'ngx-owl-carousel-o';\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\nimport { first } from 'rxjs/operators';\nimport { UserProfileService } from '../../../core/services/user.service';\n\n@Component({\n  selector: 'app-register2',\n  templateUrl: './register2.component.html',\n  styleUrls: ['./register2.component.scss']\n})\nexport class Register2Component implements OnInit {\n\n  signupForm: FormGroup;\n  submitted = false;\n  error = '';\n  successmsg = false;\n\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService,\n    private userService: UserProfileService) { }\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  ngOnInit(): void {\n    document.body.classList.add('auth-body-bg')\n\n    this.signupForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.signupForm.controls; }\n\n  carouselOption: OwlOptions = {\n    items: 1,\n    loop: false,\n    margin: 0,\n    nav: false,\n    dots: true,\n    responsive: {\n      680: {\n        items: 1\n      },\n    }\n  }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.signupForm.invalid) {\n      return;\n    } else {\n      if (environment.defaultauth === 'firebase') {\n        this.authenticationService.register(this.f.email.value, this.f.password.value).then((res: any) => {\n          this.successmsg = true;\n          if (this.successmsg) {\n            this.router.navigate(['/dashboard']);\n          }\n        })\n          .catch(error => {\n            this.error = error ? error : '';\n          });\n      } else {\n        this.userService.register(this.signupForm.value)\n          .pipe(first())\n          .subscribe(\n            data => {\n              this.successmsg = true;\n              if (this.successmsg) {\n                this.router.navigate(['/account/login']);\n              }\n            },\n            error => {\n              this.error = error ? error : '';\n            });\n      }\n    }\n  }\n}\n","<div class=\"container-fluid p-0\">\n    <div class=\"row g-0\">\n\n        <div class=\"col-xl-9\">\n            <div class=\"auth-full-bg pt-lg-5 p-4\">\n                <div class=\"w-100\">\n                    <div class=\"bg-overlay\"></div>\n                    <div class=\"d-flex h-100 flex-column\">\n\n                        <div class=\"p-4 mt-auto\">\n                            <div class=\"row justify-content-center\">\n                                <div class=\"col-lg-7\">\n                                    <div class=\"text-center\">\n\n                                        <h4 class=\"mb-3\"><i\n                                                class=\"bx bxs-quote-alt-left text-primary h1 align-middle me-3\"></i><span\n                                                class=\"text-primary\">5k</span>+ Satisfied clients</h4>\n\n                                        <div dir=\"ltr\">\n                                            <owl-carousel-o class=\"owl-theme auth-review-carousel\"\n                                                [options]=\"carouselOption\">\n                                                <ng-template carouselSlide>\n                                                    <div class=\"item\">\n                                                        <div class=\"py-3\">\n                                                            <p class=\"font-size-16 mb-4\">\" Fantastic theme with a\n                                                                ton of\n                                                                options. If you just want the HTML to integrate with\n                                                                your project, then this is the package. You can find\n                                                                the\n                                                                files in the 'dist' folder...no need to install git\n                                                                and\n                                                                all the other stuff the documentation talks about. \"\n                                                            </p>\n\n                                                            <div>\n                                                                <h4 class=\"font-size-16 text-primary\">Abs1981</h4>\n                                                                <p class=\"font-size-14 mb-0\">- Skote User</p>\n                                                            </div>\n                                                        </div>\n\n                                                    </div>\n                                                </ng-template>\n                                                <ng-template carouselSlide>\n                                                    <div class=\"item\">\n                                                        <div class=\"py-3\">\n                                                            <p class=\"font-size-16 mb-4\">\" If Every Vendor on Envato\n                                                                are\n                                                                as supportive as Themesbrand, Development with be a\n                                                                nice\n                                                                experience. You guys are Wonderful. Keep us the good\n                                                                work. \"</p>\n\n                                                            <div>\n                                                                <h4 class=\"font-size-16 text-primary\">nezerious</h4>\n                                                                <p class=\"font-size-14 mb-0\">- Skote User</p>\n                                                            </div>\n                                                        </div>\n\n                                                    </div>\n                                                </ng-template>\n                                            </owl-carousel-o>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- end col -->\n\n        <div class=\"col-xl-3\">\n            <div class=\"auth-full-page-content p-md-5 p-4\">\n                <div class=\"w-100\">\n\n                    <div class=\"d-flex flex-column h-100\">\n                        <div class=\"mb-4 mb-md-5\">\n                            <a routerLink=\"/\" class=\"d-block auth-logo\">\n                                <img src=\"assets/images/logo-dark.png\" alt=\"\" height=\"18\" class=\"auth-logo-dark\">\n                                <img src=\"assets/images/logo-light.png\" alt=\"\" height=\"18\" class=\"auth-logo-light\">\n                            </a>\n                        </div>\n                        <div class=\"my-auto\">\n                            <div>\n                                <h5 class=\"text-primary\">Register account</h5>\n                                <p class=\"text-muted\">Get your free Skote account now.</p>\n                            </div>\n                            <div class=\"mt-4\">\n                                <form [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n                                    <ngb-alert type=\"success\" *ngIf=\"successmsg\" [dismissible]=\"false\">Registeration\n                                        successfull.\n                                    </ngb-alert>\n\n                                    <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n\n                                    <div class=\"mb-3\">\n                                        <label for=\"username\">Username</label>\n                                        <input type=\"text\" formControlName=\"username\" class=\"form-control\" id=\"username\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"\n                                            placeholder=\"Enter username\">\n                                        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.username.errors.required\">Userame is required</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"mb-3\">\n                                        <label for=\"useremail\">Email</label>\n                                        <input type=\"email\" formControlName=\"email\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n                                            class=\"form-control\" id=\"useremail\" placeholder=\"Enter email\">\n                                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"mb-3\">\n                                        <label for=\"userpassword\">Password</label>\n                                        <input type=\"password\" formControlName=\"password\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n                                            class=\"form-control\" id=\"userpassword\" placeholder=\"Enter password\">\n                                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                                        </div>\n                                    </div>\n\n                                    <div>\n                                        <p class=\"mb-0\">By registering you agree to the Skote <a\n                                                href=\"javascript: void(0);\" class=\"text-primary\">Terms of Use</a>\n                                        </p>\n                                    </div>\n\n                                    <div class=\"mt-4 d-grid\">\n                                        <button class=\"btn btn-primary btn-block\" type=\"submit\">Register</button>\n                                    </div>\n\n                                    <div class=\"mt-4 text-center\">\n                                        <h5 class=\"font-size-14 mb-3\">Sign up using</h5>\n                                        <ul class=\"list-inline\">\n                                            <li class=\"list-inline-item\">\n                                                <a href=\"javascript::void()\"\n                                                    class=\"social-list-item bg-primary text-white border-primary\">\n                                                    <i class=\"mdi mdi-facebook\"></i>\n                                                </a>\n                                            </li>\n                                            <li class=\"list-inline-item\">\n                                                <a href=\"javascript::void()\"\n                                                    class=\"social-list-item bg-info text-white border-info\">\n                                                    <i class=\"mdi mdi-twitter\"></i>\n                                                </a>\n                                            </li>\n                                            <li class=\"list-inline-item\">\n                                                <a href=\"javascript::void()\"\n                                                    class=\"social-list-item bg-danger text-white border-danger\">\n                                                    <i class=\"mdi mdi-google\"></i>\n                                                </a>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </form>\n\n                                <div class=\"mt-5 text-center\">\n                                    <p>Already have an account ? <a routerLink=\"/account/login-2\"\n                                            class=\"fw-medium text-primary\"> Login</a> </p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"mt-4 mt-md-5 text-center\">\n                            <p class=\"mb-0\">© {{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i>\n                                by Themesbrand</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- end col -->\n    </div>\n    <!-- end row -->\n</div>\n<!-- end container-fluid -->","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\nimport { first } from 'rxjs/operators';\nimport { UserProfileService } from '../../../core/services/user.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  signupForm: FormGroup;\n  submitted = false;\n  error = '';\n  successmsg = false;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  // tslint:disable-next-line: max-line-length\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService,\n    private userService: UserProfileService) { }\n\n  ngOnInit() {\n    this.signupForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.signupForm.controls; }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.signupForm.invalid) {\n      return;\n    } else {\n      if (environment.defaultauth === 'firebase') {\n        this.authenticationService.register(this.f.email.value, this.f.password.value).then((res: any) => {\n          this.successmsg = true;\n          if (this.successmsg) {\n            this.router.navigate(['/dashboard']);\n          }\n        })\n          .catch(error => {\n            this.error = error ? error : '';\n          });\n      } else {\n        this.userService.register(this.signupForm.value)\n          .pipe(first())\n          .subscribe(\n            data => {\n              this.successmsg = true;\n              if (this.successmsg) {\n                this.router.navigate(['/account/login']);\n              }\n            },\n            error => {\n              this.error = error ? error : '';\n            });\n      }\n    }\n  }\n}\n","<div class=\"account-pages my-5 pt-sm-5\">\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\n        <div class=\"card overflow-hidden\">\n          <div class=\"bg-soft bg-primary\">\n            <div class=\"row\">\n              <div class=\"col-7\">\n                <div class=\"text-primary p-4\">\n                  <h5 class=\"text-primary\">Free Register</h5>\n                  <p>Get your free Skote account now.</p>\n                </div>\n              </div>\n              <div class=\"col-5 align-self-end\">\n                <img src=\"assets/images/profile-img.png\" alt=\"\" class=\"img-fluid\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-body pt-0\">\n            <div>\n              <a routerLink=\"/\">\n                <div class=\"avatar-md profile-user-wid mb-4\">\n                  <span class=\"avatar-title rounded-circle bg-light\">\n                    <img src=\"assets/images/logo.svg\" alt=\"\" class=\"rounded-circle\" height=\"34\">\n                  </span>\n                </div>\n              </a>\n            </div>\n            <div class=\"p-2\">\n\n              <form class=\"needs-validation\" name=\"signupForm\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\"\n                novalidate>\n\n                <ngb-alert type=\"success\" *ngIf=\"successmsg\" [dismissible]=\"false\">Registeration successfull.\n                </ngb-alert>\n\n                <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n\n                <div class=\"mb-3\">\n                  <label for=\"username\" class=\"form-label\">Username</label>\n\n                  <input type=\"text\" formControlName=\"username\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" id=\"username\"\n                    placeholder=\"Enter username\" />\n\n                  <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.username.errors.required\">Userame is required</div>\n                  </div>\n                </div>\n\n                <div class=\"mb-3\">\n                  <label for=\"email\" class=\"form-label\">Email</label>\n\n                  <input type=\"email\" formControlName=\"email\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"email\" placeholder=\"Email\" />\n\n                  <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                  </div>\n                </div>\n\n                <div class=\"mb-3\">\n                  <label for=\"password\" class=\"form-label\">Password</label>\n\n                  <input type=\"password\" formControlName=\"password\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" id=\"password\" placeholder=\"Password\" />\n\n                  <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                  </div>\n                </div>\n\n                <div class=\"mt-4 d-grid\">\n                  <button class=\"btn btn-primary\" type=\"submit\">Register</button>\n                </div>\n                <div class=\"mt-4 text-center\">\n                  <h5 class=\"font-size-14 mb-3\">Sign in with</h5>\n\n                  <ul class=\"list-inline\">\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-primary text-white border-primary\">\n                        <i class=\"mdi mdi-facebook\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-info text-white border-info\">\n                        <i class=\"mdi mdi-twitter\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-danger text-white border-danger\">\n                        <i class=\"mdi mdi-google\"></i>\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n                <div class=\"mt-4 text-center\">\n                  <p class=\"mb-0\">By registering you agree to the Skote <a href=\"javascript: void(0);\"\n                      class=\"text-primary\">Terms of\n                      Use</a></p>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n        <!-- end card -->\n\n        <div class=\"mt-5 text-center\">\n          <p>Already have an account ? <a routerLink=\"/account/login\" class=\"fw-medium text-primary\"> Login</a>\n          </p>\n          <p>© {{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\n        </div>\n      </div> <!-- end col -->\n    </div>\n    <!-- end row -->\n  </div>\n  <!-- end container -->\n</div>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { UsuarioService } from 'src/app/account/auth/services/usuario.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginGuard implements CanActivate {\r\n  constructor(private router: Router, private usuarioServie: UsuarioService) { }\r\n\r\n  canActivate(): boolean {\r\n    let token = this.usuarioServie.token ?? false;\r\n\r\n    if (token) {\r\n      this.router.navigate(['/dashboard']);\r\n    } else {\r\n      return true;\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { User } from '../models/auth.models';\n\n@Injectable({ providedIn: 'root' })\nexport class UserProfileService {\n    constructor(private http: HttpClient) { }\n\n    getAll() {\n        return this.http.get<User[]>(`/api/login`);\n    }\n\n    register(user: User) {\n        return this.http.post(`/users/register`, user);\n    }\n}\n"],"names":[],"sourceRoot":"webpack:///"}