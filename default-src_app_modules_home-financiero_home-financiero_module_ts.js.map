{"version":3,"file":"default-src_app_modules_home-financiero_home-financiero_module_ts.js","mappings":"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","sources":["./src/app/modules/home-financiero/components/grafica-compra/grafica-compra.component.ts","./src/app/modules/home-financiero/components/grafica-compra/grafica-compra.component.html","./src/app/modules/home-financiero/components/modal-compra/modal-compra.component.ts","./src/app/modules/home-financiero/components/modal-compra/modal-compra.component.html","./src/app/modules/home-financiero/home-financiero-routing.module.ts","./src/app/modules/home-financiero/home-financiero.module.ts","./src/app/modules/home-financiero/pages/mostrar/mostrar.component.ts","./src/app/modules/home-financiero/pages/mostrar/mostrar.component.html","./src/app/modules/home-financiero/services/home-financiero.service.ts"],"sourcesContent":["import { Component, Input, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-grafica-compra\",\r\n  templateUrl: \"./grafica-compra.component.html\",\r\n  styleUrls: [\"./grafica-compra.component.scss\"],\r\n})\r\nexport class GraficaCompraComponent implements OnInit {\r\n  @Input() chartData: any[] = [];\r\n  chartLabels = [\"Total Compra ($)\"];\r\n  chartLegend = true;\r\n  chartPlugins = [];\r\n\r\n  chartOptions = {\r\n    responsive: true,\r\n    title: {\r\n      display: false,\r\n      //text: \"Título de la Gráfica\",\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n            callback: function (value, index, values) {\r\n              // Formatear el valor como moneda\r\n              return \"$\" + value.toFixed(2);\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div style=\"display: block\">\r\n  <canvas\r\n    baseChart\r\n    chartType=\"bar\"\r\n    [datasets]=\"chartData\"\r\n    [labels]=\"chartLabels\"\r\n    [options]=\"chartOptions\"\r\n    [plugins]=\"chartPlugins\"\r\n    [legend]=\"chartLegend\"\r\n  >\r\n  </canvas>\r\n</div>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { ICompra } from \"src/app/modules/compra/interfaces/compra.interface\";\r\n\r\n@Component({\r\n  selector: \"app-modal-compra\",\r\n  templateUrl: \"./modal-compra.component.html\",\r\n  styleUrls: [\"./modal-compra.component.scss\"],\r\n})\r\nexport class ModalCompraComponent implements OnInit {\r\n  @Input() compras!: ICompra[];\r\n  @Input() texto!: string;\r\n\r\n  @Input() queryString!: string;\r\n  p: any;\r\n\r\n  constructor(private modalService: NgbModal) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  openModal(content: any, compras: ICompra[]) {\r\n    this.compras = compras;\r\n\r\n    const modalOptions = {\r\n      centered: true,\r\n      size: \"lg\", // 'lg' para modal grande, 'sm' para modal pequeño\r\n      backdrop: \"static\" as \"static\",\r\n      keyboard: false, // Configura backdrop como 'static'\r\n    };\r\n    this.modalService.open(content, modalOptions);\r\n  }\r\n}\r\n","<button\r\n  type=\"button\"\r\n  class=\"btn btn-primary btn-sm\"\r\n  (click)=\"openModal(content, compras)\"\r\n>\r\n  Ver Detalle <i class=\"mdi mdi-arrow-right ms-1\"></i>\r\n</button>\r\n\r\n<ng-template #content role=\"document\" let-modal>\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title mt-0\">Compra de Vales en {{ texto }}</h5>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn-close\"\r\n      aria-hidden=\"true\"\r\n      (click)=\"modal.dismiss('Cross click')\"\r\n    ></button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"table-responsive mb-0\">\r\n      <table class=\"table table-centered table-nowrap\">\r\n        <thead class=\"table-light\">\r\n          <tr>\r\n            <th class=\"align-middle\">Factura</th>\r\n            <th class=\"align-middle\">Proveedor</th>\r\n            <th class=\"align-middle\">Fecha de compra</th>\r\n            <th class=\"align-middle\">Cant. de vales</th>\r\n            <th class=\"align-middle\">Prec. Unit.</th>\r\n            <th class=\"align-middle\">Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            *ngFor=\"\r\n              let data of compras\r\n                | filter : queryString\r\n                | paginate : { itemsPerPage: 10, currentPage: p };\r\n              let i = index\r\n            \"\r\n          >\r\n            <ng-container\r\n              *ngIf=\"data.factura == null || data.factura == ''; else factura\"\r\n            >\r\n              <td>\r\n                <a class=\"text-body fw-bold\"> N/A </a>\r\n              </td>\r\n            </ng-container>\r\n            <ng-template #factura>\r\n              <td>\r\n                <a class=\"text-body fw-bold\">\r\n                  {{ data.factura }}\r\n                </a>\r\n              </td>\r\n            </ng-template>\r\n            <td>{{ data.proveedor.nombre }}</td>\r\n            <td>{{ data.fechaCompra | date : \"dd/MM/yyyy h:mm a\" }}</td>\r\n            <td>{{ data.cantidad }}</td>\r\n            <td>\r\n              {{ data.precioUnitario | currency : \"USD\" : \"symbol\" : \"1.2-2\" }}\r\n            </td>\r\n            <td>\r\n              {{ data.totalCompra | currency : \"USD\" : \"symbol\" : \"1.2-2\" }}\r\n            </td>\r\n          </tr>\r\n\r\n          <tr *ngIf=\"compras.length == 0\">\r\n            <td colspan=\"11\" style=\"text-align: center\">\r\n              No hay datos para mostrar\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <!-- ! PAGINACION -->\r\n      <div class=\"pagination pagination-rounded justify-content-end mb-2\">\r\n        <pagination-controls\r\n          (pageChange)=\"p = $event\"\r\n          [nextLabel]=\"''\"\r\n          [previousLabel]=\"''\"\r\n        ></pagination-controls>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer custom-modal\">\r\n    <button class=\"btn btn-dark w-sm\" (click)=\"modal.close('Close click')\">\r\n      Cerrar\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MostrarComponent } from './pages/mostrar/mostrar.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MostrarComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HomeFinancieroRoutingModule { }\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule, DatePipe } from \"@angular/common\";\r\n\r\nimport { HomeFinancieroRoutingModule } from \"./home-financiero-routing.module\";\r\nimport { MostrarComponent } from \"./pages/mostrar/mostrar.component\";\r\nimport { NgApexchartsModule } from \"ng-apexcharts\";\r\nimport { WidgetModule } from \"src/app/shared/widget/widget.module\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { UIModule } from \"src/app/shared/ui/ui.module\";\r\nimport { LayoutsModule } from \"src/app/layouts/layouts.module\";\r\nimport { ModalCompraComponent } from \"./components/modal-compra/modal-compra.component\";\r\nimport { NgxPaginationModule } from \"ngx-pagination\";\r\nimport { Ng2SearchPipeModule } from \"ng2-search-filter\";\r\nimport { GraficaCompraComponent } from \"./components/grafica-compra/grafica-compra.component\";\r\nimport { ChartsModule } from \"ng2-charts\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MostrarComponent,\r\n    ModalCompraComponent,\r\n    GraficaCompraComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HomeFinancieroRoutingModule,\r\n    UIModule,\r\n    WidgetModule,\r\n    NgApexchartsModule,\r\n    NgxPaginationModule,\r\n    Ng2SearchPipeModule,\r\n    LayoutsModule,\r\n    ChartsModule,\r\n  ],\r\n  providers: [DatePipe],\r\n  exports: [MostrarComponent],\r\n})\r\nexport class HomeFinancieroModule {}\r\n","import { MensajesService } from \"src/app/shared/global/mensajes.service\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { HomeFinancieroService } from \"./../../services/home-financiero.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Empleado } from \"src/app/account/auth/models/usuario.models\";\r\nimport { ICompra } from \"src/app/modules/compra/interfaces/compra.interface\";\r\nimport Swal from \"sweetalert2\";\r\nimport { LogVale } from \"../../interfaces/LogVale.interface\";\r\n\r\n@Component({\r\n  selector: \"app-mostrar\",\r\n  templateUrl: \"./mostrar.component.html\",\r\n  styleUrls: [\"./mostrar.component.scss\"],\r\n})\r\nexport class MostrarComponent implements OnInit {\r\n  storage: Storage = window.localStorage;\r\n\r\n  listCompra: ICompra[] = [];\r\n  cantidaGenerada: number;\r\n  montoGenerado: number;\r\n\r\n  fechaInicio?: string;\r\n  fechaFin?: string;\r\n\r\n  texto?: string;\r\n\r\n  valesActivos: number;\r\n  ValesAsignados: number;\r\n  soliNuevas: number;\r\n  soliPorAprobar: number;\r\n\r\n  logVales: LogVale[] = [];\r\n  cantidadLogVale: number;\r\n\r\n  //grafica Compra\r\n  chartData: any[] = [];\r\n\r\n  constructor(\r\n    private homeFinancieroService: HomeFinancieroService,\r\n    private datePipe: DatePipe,\r\n    private mensajesService: MensajesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.cargarComprasPorRangoDeFechas();\r\n    this.getcatidadValesPorEstado();\r\n    this.getcatidadSolicitudesPorEstado();\r\n    this.obtenerLogValesPorEstado(5);\r\n    this.texto = \"Este Mes\";\r\n  }\r\n\r\n  formatDate(date: string): string {\r\n    const fecha = new Date(date);\r\n    return this.datePipe.transform(fecha, \"dd/MM/yyyy\") || \"\";\r\n  }\r\n\r\n  formatDateCompleto(date: string): string {\r\n    const fecha = new Date(date);\r\n    return this.datePipe.transform(fecha, \"dd/MM/yy HH:mm\") || \"\";\r\n  }\r\n\r\n  get empleado(): Empleado | null {\r\n    const usuarioString = this.storage.getItem(\"usuario\");\r\n    if (usuarioString) {\r\n      const usuarioObj = JSON.parse(usuarioString);\r\n      return usuarioObj.empleado;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  get fotoempleado(): string | null {\r\n    const foto = this.storage.getItem(\"empleadoFoto\");\r\n    if (foto) {\r\n      return foto;\r\n    }\r\n    return \"./../../../assets/images/Default-Avatar.png\";\r\n  }\r\n\r\n  mostrarEsteMes() {\r\n    this.cargarComprasPorRangoDeFechas();\r\n    this.texto = \"Este Mes\";\r\n  }\r\n\r\n  cargarComprasPorRangoDeFechas(\r\n    fechaInicial: string = \"\",\r\n    fechaFinal: string = \"\"\r\n  ) {\r\n    // Define las fechas que deseas consultar\r\n    this.homeFinancieroService\r\n      .getListarPorRangoDeFechas(fechaInicial, fechaFinal)\r\n      .subscribe((compras: ICompra[]) => {\r\n        this.listCompra = compras;\r\n        this.graficar();\r\n        this.montoGenerado = this.cantidaGenerada = 0;\r\n        this.listCompra.forEach((x) => {\r\n          this.montoGenerado += x.totalCompra;\r\n        });\r\n        this.cantidaGenerada = this.listCompra.length;\r\n      });\r\n  }\r\n\r\n  async mostrarIntervaloFechas() {\r\n    const { value: formValues, dismiss } = await Swal.fire({\r\n      title: \"Selecciona un intervalo de fechas\",\r\n      confirmButtonColor: \"#972727\",\r\n      confirmButtonText: \"Generar\",\r\n      html:\r\n        '<input type=\"date\" id=\"swal-input1\" class=\"swal2-input\">' +\r\n        '<input type=\"date\" id=\"swal-input2\" class=\"swal2-input\">',\r\n      focusConfirm: false,\r\n      preConfirm: () => {\r\n        const fechaInicio = (<HTMLInputElement>(\r\n          document.querySelector(\"#swal-input1\")\r\n        )).value;\r\n        const fechaFin = (<HTMLInputElement>(\r\n          document.querySelector(\"#swal-input2\")\r\n        )).value;\r\n\r\n        return [fechaInicio, fechaFin];\r\n      },\r\n    });\r\n    if (\r\n      dismiss === Swal.DismissReason.esc ||\r\n      dismiss === Swal.DismissReason.close ||\r\n      dismiss === Swal.DismissReason.backdrop\r\n    ) {\r\n      // El usuario cerró la ventana modal sin confirmar los valores\r\n      return;\r\n    }\r\n    if (\r\n      formValues &&\r\n      formValues[0] &&\r\n      formValues[1] &&\r\n      formValues[0] < formValues[1]\r\n    ) {\r\n      this.fechaInicio = formValues[0];\r\n      this.fechaFin = formValues[1];\r\n      this.cargarComprasPorRangoDeFechas(this.fechaInicio, this.fechaFin);\r\n      this.texto =\r\n        \"Intervalo del \" +\r\n        this.formatDate(this.fechaInicio) +\r\n        \" Al \" +\r\n        this.formatDate(this.fechaFin);\r\n    } else if (formValues[0] > formValues[1]) {\r\n      this.mensajesService.mensajesToast(\r\n        \"warning\",\r\n        \"Fecha inicio superior a la fecha fin.\"\r\n      );\r\n    } else {\r\n      this.mensajesService.mensajesToast(\r\n        \"warning\",\r\n        \"Debe seleccionar ambas fechas.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  graficar() {\r\n    this.chartData = this.listCompra.map((compra) => ({\r\n      data: [compra.totalCompra],\r\n      label: this.formatDateCompleto(compra.fechaCompra),\r\n    }));\r\n  }\r\n\r\n  getcatidadValesPorEstado() {\r\n    this.homeFinancieroService\r\n      .getCantidadValesPorEstado(8)\r\n      .subscribe((cantidad: number) => {\r\n        this.valesActivos = cantidad;\r\n      });\r\n    this.homeFinancieroService\r\n      .getCantidadValesPorEstado(5)\r\n      .subscribe((cantidad: number) => {\r\n        this.ValesAsignados = cantidad;\r\n      });\r\n  }\r\n\r\n  obtenerLogValesPorEstado(estado: number): void {\r\n    this.homeFinancieroService\r\n      .obtenerLogValesPorEstadoYMes(estado)\r\n      .subscribe((logvales: LogVale[]) => {\r\n        this.logVales = logvales;\r\n        this.cantidadLogVale = this.logVales.length;\r\n      });\r\n  }\r\n\r\n  getcatidadSolicitudesPorEstado() {\r\n    this.homeFinancieroService\r\n      .getCantidadSolicitudesPorEstado(8)\r\n      .subscribe((cantidad: number) => {\r\n        this.soliNuevas = cantidad;\r\n      });\r\n    this.homeFinancieroService\r\n      .getCantidadSolicitudesPorEstado(1)\r\n      .subscribe((cantidad: number) => {\r\n        this.soliPorAprobar = cantidad;\r\n      });\r\n  }\r\n}\r\n","<app-loader></app-loader>\r\n<div class=\"container-fluid\">\r\n  <!-- start page title -->\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div\r\n        class=\"page-title-box d-flex align-items-center justify-content-between\"\r\n      >\r\n        <h4 class=\"mb-0 font-size-18\">Inicio</h4>\r\n        <div class=\"page-title-right\">\r\n          <ol class=\"breadcrumb m-0\">\r\n            <li class=\"breadcrumb-item active\">Bienvenid@ al sistema</li>\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- end page title -->\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-12\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-3\">\r\n          <app-stat\r\n            [title]=\"'Vales disponibles'\"\r\n            [value]=\"valesActivos\"\r\n            [icon]=\"'mdi mdi-checkbook'\"\r\n          ></app-stat>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <app-stat\r\n            [title]=\"'Vales asignados'\"\r\n            [value]=\"ValesAsignados\"\r\n            [icon]=\"'dripicons-pulse'\"\r\n          ></app-stat>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <app-stat\r\n            [title]=\"'Solicitudes nuevas'\"\r\n            [value]=\"soliNuevas\"\r\n            [icon]=\"'mdi mdi-plus'\"\r\n          ></app-stat>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <app-stat\r\n            [title]=\"'Solicitudes por aprobar'\"\r\n            [value]=\"soliPorAprobar\"\r\n            [icon]=\"'mdi mdi-check'\"\r\n          ></app-stat>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-4\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title mb-4\">Compras</h4>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-7\">\r\n              <p class=\"text-muted\">{{ texto }}</p>\r\n              <h3>\r\n                {{ montoGenerado | currency : \"USD\" : \"symbol\" : \"1.2-2\" }}\r\n              </h3>\r\n              <p class=\"text-muted\">\r\n                <span class=\"text-success mr-2\">\r\n                  {{ cantidaGenerada }} <i class=\"mdi mdi-arrow-up\"></i>\r\n                </span>\r\n                {{ cantidaGenerada == 1 ? \"Compra\" : \"Compras\" }}\r\n              </p>\r\n              <div class=\"mt-4\">\r\n                <div\r\n                  class=\"btn-group btn-group-sm\"\r\n                  role=\"group\"\r\n                  aria-label=\"Basic mixed styles example\"\r\n                >\r\n                  <input\r\n                    type=\"radio\"\r\n                    class=\"btn-check\"\r\n                    name=\"tipo\"\r\n                    id=\"tipo1\"\r\n                    autocomplete=\"off\"\r\n                    checked\r\n                    [value]=\"1\"\r\n                    (click)=\"mostrarEsteMes()\"\r\n                  />\r\n                  <label class=\"btn btn-outline-dark\" for=\"tipo1\"\r\n                    >Este Mes</label\r\n                  >\r\n                  <input\r\n                    type=\"radio\"\r\n                    class=\"btn-check\"\r\n                    name=\"tipo\"\r\n                    id=\"tipo2\"\r\n                    autocomplete=\"off\"\r\n                    [value]=\"0\"\r\n                    (click)=\"mostrarIntervaloFechas()\"\r\n                  />\r\n                  <label class=\"btn btn-outline-primary\" for=\"tipo2\"\r\n                    >Intervalo</label\r\n                  >\r\n                </div>\r\n              </div>\r\n              <div class=\"mt-4\">\r\n                <app-modal-compra\r\n                  [compras]=\"listCompra\"\r\n                  [texto]=\"texto\"\r\n                ></app-modal-compra>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm-5\">\r\n              <img\r\n                src=\"assets/images/financiero/Money income-pana.png\"\r\n                alt=\"\"\r\n                class=\"img-fluid\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <app-stat\r\n        [title]=\"'Vales consumidos este mes'\"\r\n        [value]=\"cantidadLogVale\"\r\n        [icon]=\"'mdi mdi-card-bulleted-off'\"\r\n      ></app-stat>\r\n    </div>\r\n\r\n    <div class=\"col-xl-8\">\r\n      <!-- end row -->\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <div class=\"d-sm-flex flex-wrap\">\r\n            <h4 class=\"card-title mb-4\">Total de Compras en {{ texto }}</h4>\r\n          </div>\r\n          <app-grafica-compra [chartData]=\"chartData\"></app-grafica-compra>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ICompra } from \"../../compra/interfaces/compra.interface\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Observable } from \"rxjs\";\r\nimport { IVale } from \"../../devolucion-vale/interfaces/vale.interface\";\r\nimport { LogVale } from \"../interfaces/LogVale.interface\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class HomeFinancieroService {\r\n  private baseUrl: string = environment.baseUrl;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getListarPorRangoDeFechas(\r\n    fechaInicial: string,\r\n    fechaFinal: string\r\n  ): Observable<ICompra[]> {\r\n    // Crear un objeto HttpParams para agregar los parámetros en la solicitud\r\n    const params = new HttpParams()\r\n      .set(\"fechaInicial\", fechaInicial)\r\n      .set(\"fechaFinal\", fechaFinal);\r\n\r\n    return this.http\r\n      .get(`${this.baseUrl}/compra/listarPorRangoDeFechas`, { params })\r\n      .pipe(map((resp: any) => resp as ICompra[]));\r\n  }\r\n\r\n  getCantidadValesPorEstado(estado: number): Observable<number> {\r\n    return this.http\r\n      .get(`${this.baseUrl}/vale/cantidadvalesporestado/${estado}`)\r\n      .pipe(map((resp: any) => resp as number));\r\n  }\r\n\r\n  getCantidadSolicitudesPorEstado(estado: number): Observable<number> {\r\n    return this.http\r\n      .get(`${this.baseUrl}/asignacionvale/solicivaleEstado/${estado}`)\r\n      .pipe(map((resp: any) => resp as number));\r\n  }\r\n\r\n  obtenerLogValesPorEstadoYMes(estado: number): Observable<LogVale[]> {\r\n    return this.http.get<LogVale[]>(\r\n      `${this.baseUrl}/logVale/montovalesconsumidosporestado/${estado}`\r\n    );\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}